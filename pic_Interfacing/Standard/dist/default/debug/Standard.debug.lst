

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Aug 30 09:45:25 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,inline
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,inline
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,inline
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,inline
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    52                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    71                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    72   000000                     
    73                           ; Generated 17/10/2023 GMT
    74                           ; 
    75                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC18F4620 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107   000000                     
   108                           	psect	idataCOMRAM
   109   002802                     __pidataCOMRAM:
   110                           	callstack 0
   111                           
   112                           ;initializer for _RB7_Flag
   113   002802  01                 	db	1
   114                           
   115                           ;initializer for _RB6_Flag
   116   002803  01                 	db	1
   117                           
   118                           ;initializer for _RB5_Flag
   119   002804  01                 	db	1
   120                           
   121                           ;initializer for _RB4_Flag
   122   002805  01                 	db	1
   123                           
   124                           ;initializer for _led1
   125   002806  88                 	db	136
   126                           
   127                           	psect	idataBANK0
   128   0026B6                     __pidataBANK0:
   129                           	callstack 0
   130                           
   131                           ;initializer for _port_registers
   132   0026B6  80                 	db	128
   133   0026B7  0F                 	db	15
   134   0026B8  81                 	db	129
   135   0026B9  0F                 	db	15
   136   0026BA  82                 	db	130
   137   0026BB  0F                 	db	15
   138   0026BC  83                 	db	131
   139   0026BD  0F                 	db	15
   140   0026BE  84                 	db	132
   141   0026BF  0F                 	db	15
   142                           
   143                           ;initializer for _lat_registers
   144   0026C0  89                 	db	137
   145   0026C1  0F                 	db	15
   146   0026C2  8A                 	db	138
   147   0026C3  0F                 	db	15
   148   0026C4  8B                 	db	139
   149   0026C5  0F                 	db	15
   150   0026C6  8C                 	db	140
   151   0026C7  0F                 	db	15
   152   0026C8  8D                 	db	141
   153   0026C9  0F                 	db	15
   154                           
   155                           ;initializer for _tris_registers
   156   0026CA  92                 	db	146
   157   0026CB  0F                 	db	15
   158   0026CC  93                 	db	147
   159   0026CD  0F                 	db	15
   160   0026CE  94                 	db	148
   161   0026CF  0F                 	db	15
   162   0026D0  95                 	db	149
   163   0026D1  0F                 	db	15
   164   0026D2  96                 	db	150
   165   0026D3  0F                 	db	15
   166                           
   167                           ;initializer for _timer0_obj
   168   0026D4  F0                 	db	low _timer0_int
   169   0026D5  27                 	db	high _timer0_int
   170   0026D6  0BDC               	dw	3036
   171   0026D8  03                 	db	3
   172   0026D9  02                 	db	2
   173                           
   174                           ;initializer for _timer1_obj
   175   0026DA  E6                 	db	low _timer1_int
   176   0026DB  27                 	db	high _timer1_int
   177   0026DC  01                 	db	1
   178   0026DD  3CB0               	dw	15536
   179   0026DF  08                 	db	8
   180                           
   181                           ;initializer for _lcd1
   182   0026E0  2B                 	db	43
   183   0026E1  23                 	db	35
   184   0026E2  1B                 	db	27
   185   0026E3  13                 	db	19
   186   0026E4  0B                 	db	11
   187   0026E5  03                 	db	3
   188                           
   189                           ;initializer for _adc1
   190   0026E6  05                 	db	5
   191   0026E7  05                 	db	5
   192   0026E8  00                 	db	0
   193   0026E9  00                 	db	0
   194   0026EA  00                 	db	0
   195                           
   196                           	psect	smallconst
   197   001000                     __psmallconst:
   198                           	callstack 0
   199   001000  00                 	db	0
   200   001001                     _keypad_values:
   201                           	callstack 0
   202   001001  37                 	db	55
   203   001002  38                 	db	56
   204   001003  39                 	db	57
   205   001004  2F                 	db	47
   206   001005  34                 	db	52
   207   001006  35                 	db	53
   208   001007  36                 	db	54
   209   001008  2A                 	db	42
   210   001009  31                 	db	49
   211   00100A  32                 	db	50
   212   00100B  33                 	db	51
   213   00100C  2D                 	db	45
   214   00100D  23                 	db	35
   215   00100E  30                 	db	48
   216   00100F  3D                 	db	61
   217   001010  2B                 	db	43
   218   001011                     __end_of_keypad_values:
   219                           	callstack 0
   220   000000                     _TMR3L	set	4018
   221   000000                     _TMR3H	set	4019
   222   000000                     _TMR1L	set	4046
   223   000000                     _TMR1H	set	4047
   224   000000                     _TMR0L	set	4054
   225   000000                     _TMR0H	set	4055
   226   000000                     _INTCON2bits	set	4081
   227   000000                     _EECON2	set	4007
   228   000000                     _ADCON1bits	set	4033
   229   000000                     _ADRESL	set	4035
   230   000000                     _ADRESH	set	4036
   231   000000                     _TRISD	set	3989
   232   000000                     _TRISC	set	3988
   233   000000                     _TRISB	set	3987
   234   000000                     _TRISE	set	3990
   235   000000                     _PORTBbits	set	3969
   236   000000                     _ADCON2bits	set	4032
   237   000000                     _ADCON0bits	set	4034
   238   000000                     _PORTE	set	3972
   239   000000                     _PORTD	set	3971
   240   000000                     _PORTC	set	3970
   241   000000                     _PORTB	set	3969
   242   000000                     _PORTA	set	3968
   243   000000                     _LATA	set	3977
   244   000000                     _TRISA	set	3986
   245   000000                     _T2CONbits	set	4042
   246   000000                     _T1CONbits	set	4045
   247   000000                     _T0CONbits	set	4053
   248   000000                     _INTCON3bits	set	4080
   249   000000                     _INTCONbits	set	4082
   250   000000                     _PIE1bits	set	3997
   251   000000                     _EECON1bits	set	4006
   252   000000                     _EEDATA	set	4008
   253   000000                     _EEADR	set	4009
   254   000000                     _EEADRH	set	4010
   255   000000                     _T3CONbits	set	4017
   256   000000                     _LATE	set	3981
   257   000000                     _LATD	set	3980
   258   000000                     _LATC	set	3979
   259   000000                     _LATB	set	3978
   260   000000                     _PIE2bits	set	4000
   261   000000                     _PIR1bits	set	3998
   262   000000                     _PIR2bits	set	4001
   263   000000                     _TMR2	set	4044
   264   001011                     STR_4:
   265   001011  20                 	db	32
   266   001012  20                 	db	32
   267   001013  20                 	db	32
   268   001014  20                 	db	32
   269   001015  20                 	db	32
   270   001016  00                 	db	0
   271   001017                     STR_1:
   272   001017  25                 	db	37
   273   001018  64                 	db	100	;'d'
   274   001019  00                 	db	0
   275   00101A  00                 	db	0	; dummy byte at the end
   276   000000                     
   277                           ; #config settings
   278                           
   279                           	psect	cinit
   280   002114                     __pcinit:
   281                           	callstack 0
   282   002114                     start_initialization:
   283                           	callstack 0
   284   002114                     __initialization:
   285                           	callstack 0
   286                           
   287                           ; Initialize objects allocated to BANK0 (53 bytes)
   288                           ; load TBLPTR registers with __pidataBANK0
   289   002114  0EB6               	movlw	low __pidataBANK0
   290   002116  6EF6               	movwf	tblptrl,c
   291   002118  0E26               	movlw	high __pidataBANK0
   292   00211A  6EF7               	movwf	tblptrh,c
   293   00211C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   294   00211E  6EF8               	movwf	tblptru,c
   295   002120  EE00  F080         	lfsr	0,__pdataBANK0
   296   002124  EE10 F035          	lfsr	1,53
   297   002128                     copy_data0:
   298   002128  0009               	tblrd		*+
   299   00212A  CFF5 FFEE          	movff	tablat,postinc0
   300   00212E  50E5               	movf	postdec1,w,c
   301   002130  50E1               	movf	fsr1l,w,c
   302   002132  E1FA               	bnz	copy_data0
   303                           
   304                           ; Initialize objects allocated to COMRAM (5 bytes)
   305                           ; load TBLPTR registers with __pidataCOMRAM
   306   002134  0E02               	movlw	low __pidataCOMRAM
   307   002136  6EF6               	movwf	tblptrl,c
   308   002138  0E28               	movlw	high __pidataCOMRAM
   309   00213A  6EF7               	movwf	tblptrh,c
   310   00213C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   311   00213E  6EF8               	movwf	tblptru,c
   312   002140  EE00  F063         	lfsr	0,__pdataCOMRAM
   313   002144  EE10 F005          	lfsr	1,5
   314   002148                     copy_data1:
   315   002148  0009               	tblrd		*+
   316   00214A  CFF5 FFEE          	movff	tablat,postinc0
   317   00214E  50E5               	movf	postdec1,w,c
   318   002150  50E1               	movf	fsr1l,w,c
   319   002152  E1FA               	bnz	copy_data1
   320                           
   321                           ; Clear objects allocated to BANK0 (46 bytes)
   322   002154  EE00  F0B5         	lfsr	0,__pbssBANK0
   323   002158  0E2E               	movlw	46
   324   00215A                     clear_0:
   325   00215A  6AEE               	clrf	postinc0,c
   326   00215C  06E8               	decf	wreg,f,c
   327   00215E  E1FD               	bnz	clear_0
   328                           
   329                           ; Clear objects allocated to COMRAM (49 bytes)
   330   002160  EE00  F001         	lfsr	0,__pbssCOMRAM
   331   002164  0E31               	movlw	49
   332   002166                     clear_1:
   333   002166  6AEE               	clrf	postinc0,c
   334   002168  06E8               	decf	wreg,f,c
   335   00216A  E1FD               	bnz	clear_1
   336   00216C                     end_of_initialization:
   337                           	callstack 0
   338   00216C                     __end_of__initialization:
   339                           	callstack 0
   340   00216C  9068               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   341   00216E  9268               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   342   002170  0100               	movlb	0
   343   002172  EF8A  F00D         	goto	_main	;jump to C main() function
   344                           
   345                           	psect	bssCOMRAM
   346   000001                     __pbssCOMRAM:
   347                           	callstack 0
   348   000001                     _preload@timer3$F2677:
   349                           	callstack 0
   350   000001                     	ds	2
   351   000003                     _preload@timer1$F2331:
   352                           	callstack 0
   353   000003                     	ds	2
   354   000005                     _TIMR1_InterruptHandler:
   355                           	callstack 0
   356   000005                     	ds	2
   357   000007                     _preload:
   358                           	callstack 0
   359   000007                     	ds	2
   360   000009                     _TIMR0_InterruptHandler:
   361                           	callstack 0
   362   000009                     	ds	2
   363   00000B                     _RB7_InterruptHandler_LOW:
   364                           	callstack 0
   365   00000B                     	ds	2
   366   00000D                     _RB7_InterruptHandler_HIGH:
   367                           	callstack 0
   368   00000D                     	ds	2
   369   00000F                     _RB6_InterruptHandler_LOW:
   370                           	callstack 0
   371   00000F                     	ds	2
   372   000011                     _RB6_InterruptHandler_HIGH:
   373                           	callstack 0
   374   000011                     	ds	2
   375   000013                     _RB5_InterruptHandler_LOW:
   376                           	callstack 0
   377   000013                     	ds	2
   378   000015                     _RB5_InterruptHandler_HIGH:
   379                           	callstack 0
   380   000015                     	ds	2
   381   000017                     _RB4_InterruptHandler_LOW:
   382                           	callstack 0
   383   000017                     	ds	2
   384   000019                     _RB4_InterruptHandler_HIGH:
   385                           	callstack 0
   386   000019                     	ds	2
   387   00001B                     _INT2_InterruptHandler:
   388                           	callstack 0
   389   00001B                     	ds	2
   390   00001D                     _INT1_InterruptHandler:
   391                           	callstack 0
   392   00001D                     	ds	2
   393   00001F                     _INT0_InterruptHandler:
   394                           	callstack 0
   395   00001F                     	ds	2
   396   000021                     _flags:
   397                           	callstack 0
   398   000021                     	ds	1
   399   000022                     _preload@timer2$F2504:
   400                           	callstack 0
   401   000022                     	ds	1
   402   000023                     relay_turn_off@F3077:
   403                           	callstack 0
   404   000023                     	ds	1
   405   000024                     relay_turn_on@F3072:
   406                           	callstack 0
   407   000024                     	ds	1
   408   000025                     relay_init@F3067:
   409                           	callstack 0
   410   000025                     	ds	1
   411   000026                     led_toggle@F3093:
   412                           	callstack 0
   413   000026                     	ds	1
   414   000027                     led_turn_off@F3088:
   415                           	callstack 0
   416   000027                     	ds	1
   417   000028                     led_turn_on@F3083:
   418                           	callstack 0
   419   000028                     	ds	1
   420   000029                     led_init@F3078:
   421                           	callstack 0
   422   000029                     	ds	1
   423   00002A                     dc_motor_stop@F3094:
   424                           	callstack 0
   425   00002A                     	ds	1
   426   00002B                     dc_motor_stop@F3092:
   427                           	callstack 0
   428   00002B                     	ds	1
   429   00002C                     dc_motor_move_dir2@F3087:
   430                           	callstack 0
   431   00002C                     	ds	1
   432   00002D                     dc_motor_move_dir2@F3085:
   433                           	callstack 0
   434   00002D                     	ds	1
   435   00002E                     dc_motor_move_dir1@F3080:
   436                           	callstack 0
   437   00002E                     	ds	1
   438   00002F                     dc_motor_move_dir1@F3078:
   439                           	callstack 0
   440   00002F                     	ds	1
   441   000030                     dc_motor_init@F3073:
   442                           	callstack 0
   443   000030                     	ds	1
   444   000031                     dc_motor_init@F3071:
   445                           	callstack 0
   446   000031                     	ds	1
   447                           
   448                           	psect	dataCOMRAM
   449   000063                     __pdataCOMRAM:
   450                           	callstack 0
   451   000063                     _RB7_Flag:
   452                           	callstack 0
   453   000063                     	ds	1
   454   000064                     _RB6_Flag:
   455                           	callstack 0
   456   000064                     	ds	1
   457   000065                     _RB5_Flag:
   458                           	callstack 0
   459   000065                     	ds	1
   460   000066                     _RB4_Flag:
   461                           	callstack 0
   462   000066                     	ds	1
   463   000067                     _led1:
   464                           	callstack 0
   465   000067                     	ds	1
   466                           
   467                           	psect	bssBANK0
   468   0000B5                     __pbssBANK0:
   469                           	callstack 0
   470   0000B5                     _dbuf:
   471                           	callstack 0
   472   0000B5                     	ds	32
   473   0000D5                     	ds	6
   474   0000DB                     _width:
   475                           	callstack 0
   476   0000DB                     	ds	2
   477   0000DD                     _prec:
   478                           	callstack 0
   479   0000DD                     	ds	2
   480   0000DF                     _TIMR3_InterruptHandler:
   481                           	callstack 0
   482   0000DF                     	ds	2
   483   0000E1                     _TIMR2_InterruptHandler:
   484                           	callstack 0
   485   0000E1                     	ds	2
   486                           
   487                           	psect	dataBANK0
   488   000080                     __pdataBANK0:
   489                           	callstack 0
   490   000080                     _port_registers:
   491                           	callstack 0
   492   000080                     	ds	10
   493   00008A                     _lat_registers:
   494                           	callstack 0
   495   00008A                     	ds	10
   496   000094                     _tris_registers:
   497                           	callstack 0
   498   000094                     	ds	10
   499   00009E                     _timer0_obj:
   500                           	callstack 0
   501   00009E                     	ds	6
   502   0000A4                     _timer1_obj:
   503                           	callstack 0
   504   0000A4                     	ds	6
   505   0000AA                     _lcd1:
   506                           	callstack 0
   507   0000AA                     	ds	6
   508   0000B0                     _adc1:
   509                           	callstack 0
   510   0000B0                     	ds	5
   511                           
   512                           	psect	cstackBANK0
   513   0000E3                     __pcstackBANK0:
   514                           	callstack 0
   515   0000E3                     sprintf@ap:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0x0
   519   0000E3                     	ds	1
   520   0000E4                     sprintf@f:
   521                           	callstack 0
   522                           
   523                           ; 12 bytes @ 0x1
   524   0000E4                     	ds	12
   525   0000F0                     main@buff:
   526                           	callstack 0
   527                           
   528                           ; 6 bytes @ 0xD
   529   0000F0                     	ds	6
   530   0000F6                     main@ret:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x13
   534   0000F6                     	ds	1
   535   0000F7                     main@adc_res:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x14
   539   0000F7                     	ds	2
   540                           
   541                           	psect	cstackCOMRAM
   542   000032                     __pcstackCOMRAM:
   543                           	callstack 0
   544   000032                     gpio_pin_toggle@pin:
   545                           	callstack 0
   546   000032                     RB4_ISR@RB_src:
   547                           	callstack 0
   548   000032                     RB5_ISR@RB_src:
   549                           	callstack 0
   550   000032                     RB6_ISR@RB_src:
   551                           	callstack 0
   552   000032                     RB7_ISR@RB_src:
   553                           	callstack 0
   554   000032                     
   555                           ; 1 bytes @ 0x0
   556   000032                     	ds	1
   557   000033                     ??_gpio_pin_toggle:
   558                           
   559                           ; 1 bytes @ 0x1
   560   000033                     	ds	4
   561   000037                     gpio_pin_toggle@ret:
   562                           	callstack 0
   563                           
   564                           ; 1 bytes @ 0x5
   565   000037                     	ds	1
   566   000038                     led_toggle@led:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0x6
   570   000038                     	ds	1
   571   000039                     ??_led_toggle:
   572                           
   573                           ; 1 bytes @ 0x7
   574   000039                     	ds	1
   575   00003A                     led_toggle@pin:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x8
   579   00003A                     	ds	1
   580   00003B                     ??_InterruptManager:
   581   00003B                     
   582                           ; 1 bytes @ 0x9
   583   00003B                     	ds	6
   584   000041                     ??_ADC_Input_Channel_Pin_Config:
   585   000041                     ?___awdiv:
   586                           	callstack 0
   587   000041                     ?___awmod:
   588                           	callstack 0
   589   000041                     ADC_Start@adc:
   590                           	callstack 0
   591   000041                     ADC_Get_Result@adc:
   592                           	callstack 0
   593   000041                     ADC_Select_Result_Format@adc:
   594                           	callstack 0
   595   000041                     ADC_Select_Volt_Ref@adc:
   596                           	callstack 0
   597   000041                     gpio_pin_set_direction@pin:
   598                           	callstack 0
   599   000041                     gpio_pin_write@pin:
   600                           	callstack 0
   601   000041                     Timer1_Mode_Select@timer:
   602                           	callstack 0
   603   000041                     Timer1_RW_Mode_Select@timer:
   604                           	callstack 0
   605   000041                     Timer1_Osc_Config@timer:
   606                           	callstack 0
   607   000041                     memset@dest:
   608                           	callstack 0
   609   000041                     ___awdiv@dividend:
   610                           	callstack 0
   611   000041                     ___awmod@dividend:
   612                           	callstack 0
   613   000041                     fputc@c:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0xF
   617   000041                     	ds	1
   618   000042                     ??_gpio_pin_set_direction:
   619   000042                     ADC_Start@ret:
   620                           	callstack 0
   621   000042                     ADC_Get_Result@adc_res:
   622                           	callstack 0
   623   000042                     gpio_pin_write@logic:
   624                           	callstack 0
   625   000042                     Timer1_Init@timer:
   626                           	callstack 0
   627   000042                     memset@c:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x10
   631   000042                     	ds	1
   632   000043                     ??_gpio_pin_write:
   633   000043                     ??_Timer1_Init:
   634   000043                     ??_ADC_Get_Result:
   635   000043                     ADC_Input_Channel_Pin_Config@channel:
   636                           	callstack 0
   637   000043                     fputc@fp:
   638                           	callstack 0
   639   000043                     ___awdiv@divisor:
   640                           	callstack 0
   641   000043                     ___awmod@divisor:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x11
   645   000043                     	ds	1
   646   000044                     ??_fputc:
   647   000044                     ADC_Init@adc:
   648                           	callstack 0
   649   000044                     ADC_Select_Channel@adc:
   650                           	callstack 0
   651   000044                     memset@n:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x12
   655   000044                     	ds	1
   656   000045                     ??_ADC_Init:
   657   000045                     ADC_Select_Channel@channel:
   658                           	callstack 0
   659   000045                     ___awdiv@counter:
   660                           	callstack 0
   661   000045                     ___awmod@counter:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x13
   665   000045                     	ds	1
   666   000046                     ??_ADC_Select_Channel:
   667   000046                     ADC_Get_Result@ret:
   668                           	callstack 0
   669   000046                     ___awdiv@sign:
   670                           	callstack 0
   671   000046                     ___awmod@sign:
   672                           	callstack 0
   673   000046                     memset@p:
   674                           	callstack 0
   675                           
   676                           ; 1 bytes @ 0x14
   677   000046                     	ds	1
   678   000047                     ?_abs:
   679                           	callstack 0
   680   000047                     ADC_Select_Channel@ret:
   681                           	callstack 0
   682   000047                     gpio_pin_set_direction@ret:
   683                           	callstack 0
   684   000047                     ___awdiv@quotient:
   685                           	callstack 0
   686   000047                     abs@a:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x15
   690   000047                     	ds	1
   691   000048                     ADC_Get_Conversion_Blocking@adc:
   692                           	callstack 0
   693   000048                     gpio_pin_write@ret:
   694                           	callstack 0
   695                           
   696                           ; 1 bytes @ 0x16
   697   000048                     	ds	1
   698   000049                     ??_abs:
   699   000049                     lcd_send_4bits@lcd:
   700                           	callstack 0
   701   000049                     lcd_4bits_send_enable_signal@lcd:
   702                           	callstack 0
   703   000049                     ADC_Get_Conversion_Blocking@channel:
   704                           	callstack 0
   705   000049                     gpio_pin_initialize@pin:
   706                           	callstack 0
   707                           
   708                           ; 1 bytes @ 0x17
   709   000049                     	ds	1
   710   00004A                     ??_gpio_pin_initialize:
   711   00004A                     lcd_send_4bits@_data_cmd:
   712                           	callstack 0
   713   00004A                     lcd_4bits_send_enable_signal@ret:
   714                           	callstack 0
   715   00004A                     ADC_Get_Conversion_Blocking@adc_res:
   716                           	callstack 0
   717                           
   718                           ; 1 bytes @ 0x18
   719   00004A                     	ds	1
   720   00004B                     ??_lcd_send_4bits:
   721   00004B                     ADC_Get_Conversion_Blocking@l_conv_status:
   722                           	callstack 0
   723   00004B                     gpio_pin_initialize@ret:
   724                           	callstack 0
   725   00004B                     vfpfcnvrt@fp:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0x19
   729   00004B                     	ds	1
   730   00004C                     led_init@led:
   731                           	callstack 0
   732   00004C                     ADC_Get_Conversion_Blocking@ret:
   733                           	callstack 0
   734   00004C                     vfpfcnvrt@fmt:
   735                           	callstack 0
   736                           
   737                           ; 1 bytes @ 0x1A
   738   00004C                     	ds	1
   739   00004D                     ??_led_init:
   740   00004D                     lcd_send_4bits@ret:
   741                           	callstack 0
   742   00004D                     vfpfcnvrt@ap:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x1B
   746   00004D                     	ds	1
   747   00004E                     ??_vfpfcnvrt:
   748   00004E                     lcd_send_4bits@l_pin_counter:
   749                           	callstack 0
   750   00004E                     led_init@pin:
   751                           	callstack 0
   752                           
   753                           ; 1 bytes @ 0x1C
   754   00004E                     	ds	1
   755   00004F                     lcd_4bit_send_cmd@lcd:
   756                           	callstack 0
   757   00004F                     lcd_4bit_send_char@lcd:
   758                           	callstack 0
   759   00004F                     vfpfcnvrt@done:
   760                           	callstack 0
   761                           
   762                           ; 1 bytes @ 0x1D
   763   00004F                     	ds	1
   764   000050                     lcd_4bit_send_cmd@cmd:
   765                           	callstack 0
   766   000050                     lcd_4bit_send_char@data:
   767                           	callstack 0
   768   000050                     vfpfcnvrt@cp:
   769                           	callstack 0
   770                           
   771                           ; 1 bytes @ 0x1E
   772   000050                     	ds	1
   773   000051                     lcd_4bit_send_cmd@ret:
   774                           	callstack 0
   775   000051                     lcd_4bit_send_char@ret:
   776                           	callstack 0
   777   000051                     vfpfcnvrt@convarg:
   778                           	callstack 0
   779                           
   780                           ; 4 bytes @ 0x1F
   781   000051                     	ds	1
   782   000052                     lcd_4bit_init@lcd:
   783                           	callstack 0
   784   000052                     lcd_4bit_send_string@lcd:
   785                           	callstack 0
   786   000052                     lcd_4bit_set_cursor@lcd:
   787                           	callstack 0
   788                           
   789                           ; 1 bytes @ 0x20
   790   000052                     	ds	1
   791   000053                     ??_lcd_4bit_init:
   792   000053                     lcd_4bit_set_cursor@row:
   793                           	callstack 0
   794   000053                     lcd_4bit_send_string@str:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x21
   798   000053                     	ds	1
   799   000054                     lcd_4bit_init@ret:
   800                           	callstack 0
   801   000054                     lcd_4bit_set_cursor@column:
   802                           	callstack 0
   803                           
   804                           ; 1 bytes @ 0x22
   805   000054                     	ds	1
   806   000055                     lcd_4bit_init@pins_counter:
   807                           	callstack 0
   808   000055                     lcd_4bit_send_string@ret:
   809                           	callstack 0
   810   000055                     lcd_4bit_set_cursor@ret:
   811                           	callstack 0
   812   000055                     vfpfcnvrt@c:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x23
   816   000055                     	ds	1
   817   000056                     ?_vfprintf:
   818                           	callstack 0
   819   000056                     lcd_4bit_send_char_pos@lcd:
   820                           	callstack 0
   821   000056                     lcd_4bit_send_string_pos@lcd:
   822                           	callstack 0
   823   000056                     vfprintf@fp:
   824                           	callstack 0
   825                           
   826                           ; 1 bytes @ 0x24
   827   000056                     	ds	1
   828   000057                     lcd_4bit_send_char_pos@data:
   829                           	callstack 0
   830   000057                     lcd_4bit_send_string_pos@str:
   831                           	callstack 0
   832   000057                     vfprintf@fmt:
   833                           	callstack 0
   834                           
   835                           ; 1 bytes @ 0x25
   836   000057                     	ds	1
   837   000058                     lcd_4bit_send_char_pos@row:
   838                           	callstack 0
   839   000058                     lcd_4bit_send_string_pos@row:
   840                           	callstack 0
   841   000058                     vfprintf@ap:
   842                           	callstack 0
   843                           
   844                           ; 1 bytes @ 0x26
   845   000058                     	ds	1
   846   000059                     lcd_4bit_send_char_pos@column:
   847                           	callstack 0
   848   000059                     lcd_4bit_send_string_pos@column:
   849                           	callstack 0
   850   000059                     vfprintf@cfmt:
   851                           	callstack 0
   852                           
   853                           ; 1 bytes @ 0x27
   854   000059                     	ds	1
   855   00005A                     ?_sprintf:
   856                           	callstack 0
   857   00005A                     lcd_4bit_send_char_pos@ret:
   858                           	callstack 0
   859   00005A                     sprintf@s:
   860                           	callstack 0
   861                           
   862                           ; 1 bytes @ 0x28
   863   00005A                     	ds	1
   864   00005B                     sprintf@fmt:
   865                           	callstack 0
   866                           
   867                           ; 1 bytes @ 0x29
   868   00005B                     	ds	5
   869   000060                     convert_uint16_to_string@value:
   870                           	callstack 0
   871                           
   872                           ; 2 bytes @ 0x2E
   873   000060                     	ds	2
   874   000062                     convert_uint16_to_string@str:
   875                           	callstack 0
   876                           
   877                           ; 1 bytes @ 0x30
   878   000062                     	ds	1
   879   000063                     
   880                           ; 1 bytes @ 0x31
   881 ;;
   882 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   883 ;;
   884 ;; *************** function _main *****************
   885 ;; Defined at:
   886 ;;		line 76 in file "main.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;  buff            6   13[BANK0 ] unsigned char [6]
   891 ;;  adc_res         2   20[BANK0 ] unsigned short 
   892 ;;  ret             1   19[BANK0 ] volatile unsigned char 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  2  910[None  ] int 
   895 ;; Registers used:
   896 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   903 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   905 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;Total ram usage:        9 bytes
   907 ;; Hardware stack levels required when called: 11
   908 ;; This function calls:
   909 ;;		_ADC_Get_Conversion_Blocking
   910 ;;		_ADC_Init
   911 ;;		_Timer1_Init
   912 ;;		_convert_uint16_to_string
   913 ;;		_lcd_4bit_init
   914 ;;		_lcd_4bit_send_char
   915 ;;		_lcd_4bit_send_char_pos
   916 ;;		_lcd_4bit_send_string
   917 ;;		_lcd_4bit_send_string_pos
   918 ;;		_led_init
   919 ;; This function is called by:
   920 ;;		Startup code after reset
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text0
   925   001B14                     __ptext0:
   926                           	callstack 0
   927   001B14                     _main:
   928                           	callstack 20
   929   001B14                     
   930                           ;main.c: 77:     led_init(&led1);
   931   001B14  0E67               	movlw	low _led1
   932   001B16  6E4C               	movwf	led_init@led^0,c
   933   001B18  EC91  F00E         	call	_led_init	;wreg free
   934                           
   935                           ;main.c: 79:     lcd_4bit_init(&lcd1);
   936   001B1C  0EAA               	movlw	low _lcd1
   937   001B1E  6E52               	movwf	lcd_4bit_init@lcd^0,c
   938   001B20  EC3B  F00B         	call	_lcd_4bit_init	;wreg free
   939                           
   940                           ;main.c: 81:     lcd_4bit_send_char(&lcd1, 'A');
   941   001B24  0EAA               	movlw	low _lcd1
   942   001B26  6E4F               	movwf	lcd_4bit_send_char@lcd^0,c
   943   001B28  0E41               	movlw	65
   944   001B2A  6E50               	movwf	lcd_4bit_send_char@data^0,c
   945   001B2C  EC1B  F011         	call	_lcd_4bit_send_char	;wreg free
   946                           
   947                           ;main.c: 83:     lcd_4bit_send_char_pos(&lcd1, 'C', 1, 2);
   948   001B30  0EAA               	movlw	low _lcd1
   949   001B32  6E56               	movwf	lcd_4bit_send_char_pos@lcd^0,c
   950   001B34  0E43               	movlw	67
   951   001B36  6E57               	movwf	lcd_4bit_send_char_pos@data^0,c
   952   001B38  0E01               	movlw	1
   953   001B3A  6E58               	movwf	lcd_4bit_send_char_pos@row^0,c
   954   001B3C  0E02               	movlw	2
   955   001B3E  6E59               	movwf	lcd_4bit_send_char_pos@column^0,c
   956   001B40  EC77  F012         	call	_lcd_4bit_send_char_pos	;wreg free
   957   001B44                     
   958                           ;main.c: 85:     (ADCON1bits.PCFG = 0x0E);
   959   001B44  50C1               	movf	193,w,c	;volatile
   960   001B46  0BF0               	andlw	-16
   961   001B48  090E               	iorlw	14
   962   001B4A  6EC1               	movwf	193,c	;volatile
   963   001B4C                     
   964                           ;main.c: 86:     ADC_Init(&adc1);
   965   001B4C  0EB0               	movlw	low _adc1
   966   001B4E  6E44               	movwf	ADC_Init@adc^0,c
   967   001B50  EC0B  F010         	call	_ADC_Init	;wreg free
   968   001B54                     
   969                           ;main.c: 88:     uint16 adc_res = 0;
   970   001B54  0E00               	movlw	0
   971   001B56  0100               	movlb	0	; () banked
   972   001B58  6FF8               	movwf	(main@adc_res+1)& (0+255),b
   973   001B5A  0E00               	movlw	0
   974   001B5C  6FF7               	movwf	main@adc_res& (0+255),b
   975   001B5E                     
   976                           ; BSR set to: 0
   977                           ;main.c: 91:     Timer1_Init(&timer1_obj);
   978   001B5E  0EA4               	movlw	low _timer1_obj
   979   001B60  6E42               	movwf	Timer1_Init@timer^0,c
   980   001B62  ECE1  F00E         	call	_Timer1_Init	;wreg free
   981   001B66                     
   982                           ;main.c: 93:     volatile Std_ReturnType ret = 0x01;
   983   001B66  0E01               	movlw	1
   984   001B68  0100               	movlb	0	; () banked
   985   001B6A  6FF6               	movwf	main@ret& (0+255),b	;volatile
   986   001B6C                     l6128:
   987                           
   988                           ;main.c: 100:         ADC_Get_Conversion_Blocking(&adc1,ADC_CHANNEL_AN0,&adc_res);
   989   001B6C  0EB0               	movlw	low _adc1
   990   001B6E  6E48               	movwf	ADC_Get_Conversion_Blocking@adc^0,c
   991   001B70  0E00               	movlw	0
   992   001B72  6E49               	movwf	ADC_Get_Conversion_Blocking@channel^0,c
   993   001B74  0EF7               	movlw	low main@adc_res
   994   001B76  6E4A               	movwf	ADC_Get_Conversion_Blocking@adc_res^0,c
   995   001B78  EC77  F011         	call	_ADC_Get_Conversion_Blocking	;wreg free
   996   001B7C                     
   997                           ;main.c: 101:         uint8 buff[6] = {0};
   998   001B7C  EE20  F0F0         	lfsr	2,main@buff
   999   001B80  0E05               	movlw	5
  1000   001B82                     u5901:
  1001   001B82  6ADE               	clrf	postinc2,c
  1002   001B84  06E8               	decf	wreg,f,c
  1003   001B86  E2FD               	bc	u5901
  1004   001B88                     
  1005                           ;main.c: 102:         convert_uint16_to_string(adc_res,buff);
  1006   001B88  C0F7  F060         	movff	main@adc_res,convert_uint16_to_string@value
  1007   001B8C  C0F8  F061         	movff	main@adc_res+1,convert_uint16_to_string@value+1
  1008   001B90  0EF0               	movlw	low main@buff
  1009   001B92  6E62               	movwf	convert_uint16_to_string@str^0,c
  1010   001B94  EC15  F012         	call	_convert_uint16_to_string	;wreg free
  1011   001B98                     
  1012                           ;main.c: 103:         lcd_4bit_send_string_pos(&lcd1,buff,1,1);
  1013   001B98  0EAA               	movlw	low _lcd1
  1014   001B9A  6E56               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1015   001B9C  0EF0               	movlw	low main@buff
  1016   001B9E  6E57               	movwf	lcd_4bit_send_string_pos@str^0,c
  1017   001BA0  0E01               	movlw	1
  1018   001BA2  6E58               	movwf	lcd_4bit_send_string_pos@row^0,c
  1019   001BA4  0E01               	movlw	1
  1020   001BA6  6E59               	movwf	lcd_4bit_send_string_pos@column^0,c
  1021   001BA8  ECD1  F011         	call	_lcd_4bit_send_string_pos	;wreg free
  1022   001BAC                     
  1023                           ;main.c: 104:         lcd_4bit_send_string(&lcd1,"     ");
  1024   001BAC  0EAA               	movlw	low _lcd1
  1025   001BAE  6E52               	movwf	lcd_4bit_send_string@lcd^0,c
  1026   001BB0  0E11               	movlw	low STR_4
  1027   001BB2  6E53               	movwf	lcd_4bit_send_string@str^0,c
  1028   001BB4  5053               	movf	lcd_4bit_send_string@str^0,w,c
  1029   001BB6  A4D8               	btfss	status,2,c
  1030   001BB8  0E10               	movlw	high __smallconst
  1031   001BBA  6E54               	movwf	(lcd_4bit_send_string@str+1)^0,c
  1032   001BBC  EC30  F00F         	call	_lcd_4bit_send_string	;wreg free
  1033                           
  1034                           ;main.c: 105:     }
  1035   001BC0  EFB6  F00D         	goto	l6128
  1036   001BC4  EF07  F000         	goto	start
  1037   001BC8                     __end_of_main:
  1038                           	callstack 0
  1039                           
  1040 ;; *************** function _led_init *****************
  1041 ;; Defined at:
  1042 ;;		line 30 in file "ECU_Layer/LED/led.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  led             1   26[COMRAM] PTR const struct .
  1045 ;;		 -> led1(1), 
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;  pin             1   28[COMRAM] struct .
  1048 ;;  ret             1    0        unsigned char 
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      unsigned char 
  1051 ;; Registers used:
  1052 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1058 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1059 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1060 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1061 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;Total ram usage:        3 bytes
  1063 ;; Hardware stack levels used: 1
  1064 ;; Hardware stack levels required when called: 7
  1065 ;; This function calls:
  1066 ;;		_gpio_pin_initialize
  1067 ;; This function is called by:
  1068 ;;		_main
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           	psect	text1
  1073   001D22                     __ptext1:
  1074                           	callstack 0
  1075   001D22                     _led_init:
  1076                           	callstack 23
  1077   001D22                     
  1078                           ;ECU_Layer/LED/led.c: 33:     if (((void*)0) == led) {
  1079   001D22  504C               	movf	led_init@led^0,w,c
  1080   001D24  A4D8               	btfss	status,2,c
  1081   001D26  EF97  F00E         	goto	u5461
  1082   001D2A  EF99  F00E         	goto	u5460
  1083   001D2E                     u5461:
  1084   001D2E  EF9B  F00E         	goto	l231
  1085   001D32                     u5460:
  1086   001D32                     
  1087                           ;ECU_Layer/LED/led.c: 35:     } else {
  1088   001D32  EFE0  F00E         	goto	l235
  1089   001D36                     l231:
  1090                           
  1091                           ;ECU_Layer/LED/led.c: 36:         pin_config_t pin ={
  1092   001D36  C029  F04E         	movff	led_init@F3078,led_init@pin
  1093   001D3A  504C               	movf	led_init@led^0,w,c
  1094   001D3C  6ED9               	movwf	fsr2l,c
  1095   001D3E  6ADA               	clrf	fsr2h,c
  1096   001D40  50DF               	movf	223,w,c
  1097   001D42  0B07               	andlw	7
  1098   001D44  6E4D               	movwf	??_led_init^0,c
  1099   001D46  504E               	movf	led_init@pin^0,w,c
  1100   001D48  184D               	xorwf	??_led_init^0,w,c
  1101   001D4A  0BF8               	andlw	-8
  1102   001D4C  184D               	xorwf	??_led_init^0,w,c
  1103   001D4E  6E4E               	movwf	led_init@pin^0,c
  1104   001D50  504C               	movf	led_init@led^0,w,c
  1105   001D52  6ED9               	movwf	fsr2l,c
  1106   001D54  6ADA               	clrf	fsr2h,c
  1107   001D56  30DF               	rrcf	223,w,c
  1108   001D58  32E8               	rrcf	wreg,f,c
  1109   001D5A  32E8               	rrcf	wreg,f,c
  1110   001D5C  0B07               	andlw	7
  1111   001D5E  6E4D               	movwf	??_led_init^0,c
  1112   001D60  464D               	rlncf	??_led_init^0,f,c
  1113   001D62  464D               	rlncf	??_led_init^0,f,c
  1114   001D64  464D               	rlncf	??_led_init^0,f,c
  1115   001D66  504E               	movf	led_init@pin^0,w,c
  1116   001D68  184D               	xorwf	??_led_init^0,w,c
  1117   001D6A  0BC7               	andlw	-57
  1118   001D6C  184D               	xorwf	??_led_init^0,w,c
  1119   001D6E  6E4E               	movwf	led_init@pin^0,c
  1120   001D70  9C4E               	bcf	led_init@pin^0,6,c
  1121   001D72  504C               	movf	led_init@led^0,w,c
  1122   001D74  6ED9               	movwf	fsr2l,c
  1123   001D76  6ADA               	clrf	fsr2h,c
  1124   001D78  BCDF               	btfsc	indf2,6,c
  1125   001D7A  EFC1  F00E         	goto	u5471
  1126   001D7E  EFC4  F00E         	goto	u5470
  1127   001D82                     u5471:
  1128   001D82  0E01               	movlw	1
  1129   001D84  EFC5  F00E         	goto	u5472
  1130   001D88                     u5470:
  1131   001D88  0E00               	movlw	0
  1132   001D8A                     u5472:
  1133   001D8A  6E4D               	movwf	??_led_init^0,c
  1134   001D8C  504C               	movf	led_init@led^0,w,c
  1135   001D8E  6ED9               	movwf	fsr2l,c
  1136   001D90  6ADA               	clrf	fsr2h,c
  1137   001D92  BEDF               	btfsc	indf2,7,c
  1138   001D94  EFCE  F00E         	goto	u5481
  1139   001D98  EFD1  F00E         	goto	u5480
  1140   001D9C                     u5481:
  1141   001D9C  0E01               	movlw	1
  1142   001D9E  EFD2  F00E         	goto	u5482
  1143   001DA2                     u5480:
  1144   001DA2  0E00               	movlw	0
  1145   001DA4                     u5482:
  1146   001DA4  1A4D               	xorwf	??_led_init^0,f,c
  1147   001DA6  A4D8               	btfss	status,2,c
  1148   001DA8  EFD8  F00E         	goto	u5491
  1149   001DAC  EFDB  F00E         	goto	u5490
  1150   001DB0                     u5491:
  1151   001DB0  8E4E               	bsf	led_init@pin^0,7,c
  1152   001DB2  EFDC  F00E         	goto	u5505
  1153   001DB6                     u5490:
  1154   001DB6  9E4E               	bcf	led_init@pin^0,7,c
  1155   001DB8                     u5505:
  1156   001DB8  0E4E               	movlw	low led_init@pin
  1157   001DBA  6E49               	movwf	gpio_pin_initialize@pin^0,c
  1158   001DBC  ECEC  F010         	call	_gpio_pin_initialize	;wreg free
  1159   001DC0                     l235:
  1160   001DC0  0012               	return		;funcret
  1161   001DC2                     __end_of_led_init:
  1162                           	callstack 0
  1163                           
  1164 ;; *************** function _lcd_4bit_send_string_pos *****************
  1165 ;; Defined at:
  1166 ;;		line 134 in file "ECU_Layer/Chr_LCD/chr_lcd.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;  lcd             1   36[COMRAM] PTR const struct .
  1169 ;;		 -> lcd1(6), 
  1170 ;;  str             1   37[COMRAM] PTR unsigned char 
  1171 ;;		 -> main@buff(6), 
  1172 ;;  row             1   38[COMRAM] unsigned char 
  1173 ;;  column          1   39[COMRAM] unsigned char 
  1174 ;; Auto vars:     Size  Location     Type
  1175 ;;  ret             1    0        unsigned char 
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      unsigned char 
  1178 ;; Registers used:
  1179 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1185 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1189 ;;Total ram usage:        4 bytes
  1190 ;; Hardware stack levels used: 1
  1191 ;; Hardware stack levels required when called: 9
  1192 ;; This function calls:
  1193 ;;		_lcd_4bit_send_string
  1194 ;;		_lcd_4bit_set_cursor
  1195 ;; This function is called by:
  1196 ;;		_main
  1197 ;; This function uses a non-reentrant model
  1198 ;;
  1199                           
  1200                           	psect	text2
  1201   0023A2                     __ptext2:
  1202                           	callstack 0
  1203   0023A2                     _lcd_4bit_send_string_pos:
  1204                           	callstack 21
  1205   0023A2                     
  1206                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 137:     if (((void*)0) == lcd || ((void*)0) == str) {
  1207   0023A2  5056               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  1208   0023A4  B4D8               	btfsc	status,2,c
  1209   0023A6  EFD7  F011         	goto	u5431
  1210   0023AA  EFD9  F011         	goto	u5430
  1211   0023AE                     u5431:
  1212   0023AE  EFE1  F011         	goto	l5644
  1213   0023B2                     u5430:
  1214   0023B2  5057               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1215   0023B4  A4D8               	btfss	status,2,c
  1216   0023B6  EFDF  F011         	goto	u5441
  1217   0023BA  EFE1  F011         	goto	u5440
  1218   0023BE                     u5441:
  1219   0023BE  EFE3  F011         	goto	l5646
  1220   0023C2                     u5440:
  1221   0023C2                     l5644:
  1222                           
  1223                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 139:     } else {
  1224   0023C2  EFF2  F011         	goto	l97
  1225   0023C6                     l5646:
  1226   0023C6  C056  F052         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  1227   0023CA  C058  F053         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  1228   0023CE  C059  F054         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@column
  1229   0023D2  EC7B  F00F         	call	_lcd_4bit_set_cursor	;wreg free
  1230   0023D6  C056  F052         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_string@lcd
  1231   0023DA  C057  F053         	movff	lcd_4bit_send_string_pos@str,lcd_4bit_send_string@str
  1232   0023DE  6A54               	clrf	(lcd_4bit_send_string@str+1)^0,c
  1233   0023E0  EC30  F00F         	call	_lcd_4bit_send_string	;wreg free
  1234   0023E4                     l97:
  1235   0023E4  0012               	return		;funcret
  1236   0023E6                     __end_of_lcd_4bit_send_string_pos:
  1237                           	callstack 0
  1238                           
  1239 ;; *************** function _lcd_4bit_send_string *****************
  1240 ;; Defined at:
  1241 ;;		line 121 in file "ECU_Layer/Chr_LCD/chr_lcd.c"
  1242 ;; Parameters:    Size  Location     Type
  1243 ;;  lcd             1   32[COMRAM] PTR const struct .
  1244 ;;		 -> lcd1(6), 
  1245 ;;  str             2   33[COMRAM] PTR unsigned char 
  1246 ;;		 -> STR_4(6), main@buff(6), 
  1247 ;; Auto vars:     Size  Location     Type
  1248 ;;  ret             1   35[COMRAM] unsigned char 
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      unsigned char 
  1251 ;; Registers used:
  1252 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1258 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1259 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1261 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1262 ;;Total ram usage:        4 bytes
  1263 ;; Hardware stack levels used: 1
  1264 ;; Hardware stack levels required when called: 8
  1265 ;; This function calls:
  1266 ;;		_lcd_4bit_send_char
  1267 ;; This function is called by:
  1268 ;;		_lcd_4bit_send_string_pos
  1269 ;;		_main
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           	psect	text3
  1274   001E60                     __ptext3:
  1275                           	callstack 0
  1276   001E60                     _lcd_4bit_send_string:
  1277                           	callstack 21
  1278   001E60                     
  1279                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 122:     Std_ReturnType ret = 0x01;
  1280   001E60  0E01               	movlw	1
  1281   001E62  6E55               	movwf	lcd_4bit_send_string@ret^0,c
  1282                           
  1283                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 124:     if (((void*)0) == lcd || ((void*)0) == str) {
  1284   001E64  5052               	movf	lcd_4bit_send_string@lcd^0,w,c
  1285   001E66  B4D8               	btfsc	status,2,c
  1286   001E68  EF38  F00F         	goto	u5151
  1287   001E6C  EF3A  F00F         	goto	u5150
  1288   001E70                     u5151:
  1289   001E70  EF43  F00F         	goto	l5468
  1290   001E74                     u5150:
  1291   001E74  5053               	movf	lcd_4bit_send_string@str^0,w,c
  1292   001E76  1054               	iorwf	(lcd_4bit_send_string@str+1)^0,w,c
  1293   001E78  A4D8               	btfss	status,2,c
  1294   001E7A  EF41  F00F         	goto	u5161
  1295   001E7E  EF43  F00F         	goto	u5160
  1296   001E82                     u5161:
  1297   001E82  EF60  F00F         	goto	l5474
  1298   001E86                     u5160:
  1299   001E86                     l5468:
  1300                           
  1301                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 125:         ret = 0x00;
  1302   001E86  0E00               	movlw	0
  1303   001E88  6E55               	movwf	lcd_4bit_send_string@ret^0,c
  1304                           
  1305                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 126:     } else {
  1306   001E8A  EF79  F00F         	goto	l5476
  1307   001E8E                     l5470:
  1308                           
  1309                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 128:             ret = lcd_4bit_send_char(lcd, *str++);
  1310   001E8E  C052  F04F         	movff	lcd_4bit_send_string@lcd,lcd_4bit_send_char@lcd
  1311   001E92  C053  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  1312   001E96  C054  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
  1313   001E9A  0E00               	movlw	low (__smallconst shr (0+16))
  1314   001E9C  6EF8               	movwf	tblptru,c
  1315   001E9E  0E0F               	movlw	(high __ramtop+-1)
  1316   001EA0  64F7               	cpfsgt	tblptrh,c
  1317   001EA2  D003               	bra	u5177
  1318   001EA4  0008               	tblrd		*
  1319   001EA6  50F5               	movf	tablat,w,c
  1320   001EA8  D005               	bra	u5170
  1321   001EAA                     u5177:
  1322   001EAA  CFF6 FFE9          	movff	tblptrl,fsr0l
  1323   001EAE  CFF7 FFEA          	movff	tblptrh,fsr0h
  1324   001EB2  50EF               	movf	indf0,w,c
  1325   001EB4                     u5170:
  1326   001EB4  6E50               	movwf	lcd_4bit_send_char@data^0,c
  1327   001EB6  EC1B  F011         	call	_lcd_4bit_send_char	;wreg free
  1328   001EBA  6E55               	movwf	lcd_4bit_send_string@ret^0,c
  1329   001EBC  4A53               	infsnz	lcd_4bit_send_string@str^0,f,c
  1330   001EBE  2A54               	incf	(lcd_4bit_send_string@str+1)^0,f,c
  1331   001EC0                     l5474:
  1332                           
  1333                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 127:         while (*str) {
  1334   001EC0  C053  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  1335   001EC4  C054  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
  1336   001EC8  0E00               	movlw	low (__smallconst shr (0+16))
  1337   001ECA  6EF8               	movwf	tblptru,c
  1338   001ECC  0E0F               	movlw	(high __ramtop+-1)
  1339   001ECE  64F7               	cpfsgt	tblptrh,c
  1340   001ED0  D003               	bra	u5187
  1341   001ED2  0008               	tblrd		*
  1342   001ED4  50F5               	movf	tablat,w,c
  1343   001ED6  D005               	bra	u5180
  1344   001ED8                     u5187:
  1345   001ED8  CFF6 FFE9          	movff	tblptrl,fsr0l
  1346   001EDC  CFF7 FFEA          	movff	tblptrh,fsr0h
  1347   001EE0  50EF               	movf	indf0,w,c
  1348   001EE2                     u5180:
  1349   001EE2  0900               	iorlw	0
  1350   001EE4  A4D8               	btfss	status,2,c
  1351   001EE6  EF77  F00F         	goto	u5191
  1352   001EEA  EF79  F00F         	goto	u5190
  1353   001EEE                     u5191:
  1354   001EEE  EF47  F00F         	goto	l5470
  1355   001EF2                     u5190:
  1356   001EF2                     l5476:
  1357                           
  1358                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 131:     return ret;
  1359   001EF2  5055               	movf	lcd_4bit_send_string@ret^0,w,c
  1360   001EF4  0012               	return		;funcret
  1361   001EF6                     __end_of_lcd_4bit_send_string:
  1362                           	callstack 0
  1363                           
  1364 ;; *************** function _lcd_4bit_send_char_pos *****************
  1365 ;; Defined at:
  1366 ;;		line 109 in file "ECU_Layer/Chr_LCD/chr_lcd.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;  lcd             1   36[COMRAM] PTR const struct .
  1369 ;;		 -> lcd1(6), 
  1370 ;;  data            1   37[COMRAM] unsigned char 
  1371 ;;  row             1   38[COMRAM] unsigned char 
  1372 ;;  column          1   39[COMRAM] unsigned char 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  ret             1   40[COMRAM] unsigned char 
  1375 ;; Return value:  Size  Location     Type
  1376 ;;                  1    wreg      unsigned char 
  1377 ;; Registers used:
  1378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 0/0
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1384 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1385 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1388 ;;Total ram usage:        5 bytes
  1389 ;; Hardware stack levels used: 1
  1390 ;; Hardware stack levels required when called: 9
  1391 ;; This function calls:
  1392 ;;		_lcd_4bit_send_char
  1393 ;;		_lcd_4bit_set_cursor
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;;		_lcd_4bit_send_custom_char
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text4
  1401   0024EE                     __ptext4:
  1402                           	callstack 0
  1403   0024EE                     _lcd_4bit_send_char_pos:
  1404                           	callstack 21
  1405   0024EE                     
  1406                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 112:     if (((void*)0) == lcd) {
  1407   0024EE  5056               	movf	lcd_4bit_send_char_pos@lcd^0,w,c
  1408   0024F0  A4D8               	btfss	status,2,c
  1409   0024F2  EF7D  F012         	goto	u5421
  1410   0024F6  EF7F  F012         	goto	u5420
  1411   0024FA                     u5421:
  1412   0024FA  EF83  F012         	goto	l5634
  1413   0024FE                     u5420:
  1414   0024FE                     
  1415                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 113:         ret = 0x00;
  1416   0024FE  0E00               	movlw	0
  1417   002500  6E5A               	movwf	lcd_4bit_send_char_pos@ret^0,c
  1418                           
  1419                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 114:     } else {
  1420   002502  EF93  F012         	goto	l5636
  1421   002506                     l5634:
  1422                           
  1423                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 115:         ret = lcd_4bit_set_cursor(lcd, row, column);
  1424   002506  C056  F052         	movff	lcd_4bit_send_char_pos@lcd,lcd_4bit_set_cursor@lcd
  1425   00250A  C058  F053         	movff	lcd_4bit_send_char_pos@row,lcd_4bit_set_cursor@row
  1426   00250E  C059  F054         	movff	lcd_4bit_send_char_pos@column,lcd_4bit_set_cursor@column
  1427   002512  EC7B  F00F         	call	_lcd_4bit_set_cursor	;wreg free
  1428   002516  6E5A               	movwf	lcd_4bit_send_char_pos@ret^0,c
  1429                           
  1430                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 116:         ret = lcd_4bit_send_char(lcd, data);
  1431   002518  C056  F04F         	movff	lcd_4bit_send_char_pos@lcd,lcd_4bit_send_char@lcd
  1432   00251C  C057  F050         	movff	lcd_4bit_send_char_pos@data,lcd_4bit_send_char@data
  1433   002520  EC1B  F011         	call	_lcd_4bit_send_char	;wreg free
  1434   002524  6E5A               	movwf	lcd_4bit_send_char_pos@ret^0,c
  1435   002526                     l5636:
  1436                           
  1437                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 118:     return ret;
  1438   002526  505A               	movf	lcd_4bit_send_char_pos@ret^0,w,c
  1439   002528  0012               	return		;funcret
  1440   00252A                     __end_of_lcd_4bit_send_char_pos:
  1441                           	callstack 0
  1442                           
  1443 ;; *************** function _lcd_4bit_set_cursor *****************
  1444 ;; Defined at:
  1445 ;;		line 334 in file "ECU_Layer/Chr_LCD/chr_lcd.c"
  1446 ;; Parameters:    Size  Location     Type
  1447 ;;  lcd             1   32[COMRAM] PTR const struct .
  1448 ;;		 -> lcd1(6), 
  1449 ;;  row             1   33[COMRAM] unsigned char 
  1450 ;;  column          1   34[COMRAM] unsigned char 
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;  ret             1   35[COMRAM] unsigned char 
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      unsigned char 
  1455 ;; Registers used:
  1456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1462 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1463 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;Total ram usage:        4 bytes
  1467 ;; Hardware stack levels used: 1
  1468 ;; Hardware stack levels required when called: 8
  1469 ;; This function calls:
  1470 ;;		_lcd_4bit_send_cmd
  1471 ;; This function is called by:
  1472 ;;		_lcd_4bit_send_char_pos
  1473 ;;		_lcd_4bit_send_string_pos
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           	psect	text5
  1478   001EF6                     __ptext5:
  1479                           	callstack 0
  1480   001EF6                     _lcd_4bit_set_cursor:
  1481                           	callstack 21
  1482   001EF6                     
  1483                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 336:     column--;
  1484   001EF6  0654               	decf	lcd_4bit_set_cursor@column^0,f,c
  1485   001EF8                     
  1486                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 338:     if (((void*)0) == lcd) {
  1487   001EF8  5052               	movf	lcd_4bit_set_cursor@lcd^0,w,c
  1488   001EFA  A4D8               	btfss	status,2,c
  1489   001EFC  EF82  F00F         	goto	u5141
  1490   001F00  EF84  F00F         	goto	u5140
  1491   001F04                     u5141:
  1492   001F04  EFB0  F00F         	goto	l5458
  1493   001F08                     u5140:
  1494   001F08                     l5444:
  1495                           
  1496                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 339:         ret = 0x00;
  1497   001F08  0E00               	movlw	0
  1498   001F0A  6E55               	movwf	lcd_4bit_set_cursor@ret^0,c
  1499                           
  1500                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 340:     } else {
  1501   001F0C  EFC3  F00F         	goto	l5460
  1502   001F10                     l5446:
  1503                           
  1504                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 343:                 ret = lcd_4bit_send_cmd(lcd, (0x80 + 
      +                          column));
  1505   001F10  C052  F04F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_cmd@lcd
  1506   001F14  5054               	movf	lcd_4bit_set_cursor@column^0,w,c
  1507   001F16  0F80               	addlw	128
  1508   001F18  6E50               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1509   001F1A  EC49  F011         	call	_lcd_4bit_send_cmd	;wreg free
  1510   001F1E  6E55               	movwf	lcd_4bit_set_cursor@ret^0,c
  1511                           
  1512                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 344:                 break;
  1513   001F20  EFC3  F00F         	goto	l5460
  1514   001F24                     l5448:
  1515                           
  1516                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 346:                 ret = lcd_4bit_send_cmd(lcd, (0xC0 + 
      +                          column));
  1517   001F24  C052  F04F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_cmd@lcd
  1518   001F28  5054               	movf	lcd_4bit_set_cursor@column^0,w,c
  1519   001F2A  0FC0               	addlw	192
  1520   001F2C  6E50               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1521   001F2E  EC49  F011         	call	_lcd_4bit_send_cmd	;wreg free
  1522   001F32  6E55               	movwf	lcd_4bit_set_cursor@ret^0,c
  1523                           
  1524                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 347:                 break;
  1525   001F34  EFC3  F00F         	goto	l5460
  1526   001F38                     l5450:
  1527                           
  1528                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 349:                 ret = lcd_4bit_send_cmd(lcd, (0x94 + 
      +                          column));
  1529   001F38  C052  F04F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_cmd@lcd
  1530   001F3C  5054               	movf	lcd_4bit_set_cursor@column^0,w,c
  1531   001F3E  0F94               	addlw	148
  1532   001F40  6E50               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1533   001F42  EC49  F011         	call	_lcd_4bit_send_cmd	;wreg free
  1534   001F46  6E55               	movwf	lcd_4bit_set_cursor@ret^0,c
  1535                           
  1536                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 350:                 break;
  1537   001F48  EFC3  F00F         	goto	l5460
  1538   001F4C                     l5452:
  1539                           
  1540                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 352:                 ret = lcd_4bit_send_cmd(lcd, (0xD4 + 
      +                          column));
  1541   001F4C  C052  F04F         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_cmd@lcd
  1542   001F50  5054               	movf	lcd_4bit_set_cursor@column^0,w,c
  1543   001F52  0FD4               	addlw	212
  1544   001F54  6E50               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1545   001F56  EC49  F011         	call	_lcd_4bit_send_cmd	;wreg free
  1546   001F5A  6E55               	movwf	lcd_4bit_set_cursor@ret^0,c
  1547                           
  1548                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 353:                 break;
  1549   001F5C  EFC3  F00F         	goto	l5460
  1550   001F60                     l5458:
  1551   001F60  5053               	movf	lcd_4bit_set_cursor@row^0,w,c
  1552                           
  1553                           ; Switch size 1, requested type "simple"
  1554                           ; Number of cases is 4, Range of values is 1 to 4
  1555                           ; switch strategies available:
  1556                           ; Name         Instructions Cycles
  1557                           ; simple_byte           13     7 (average)
  1558                           ;	Chosen strategy is simple_byte
  1559   001F62  0A01               	xorlw	1	; case 1
  1560   001F64  B4D8               	btfsc	status,2,c
  1561   001F66  EF88  F00F         	goto	l5446
  1562   001F6A  0A03               	xorlw	3	; case 2
  1563   001F6C  B4D8               	btfsc	status,2,c
  1564   001F6E  EF92  F00F         	goto	l5448
  1565   001F72  0A01               	xorlw	1	; case 3
  1566   001F74  B4D8               	btfsc	status,2,c
  1567   001F76  EF9C  F00F         	goto	l5450
  1568   001F7A  0A07               	xorlw	7	; case 4
  1569   001F7C  B4D8               	btfsc	status,2,c
  1570   001F7E  EFA6  F00F         	goto	l5452
  1571   001F82  EF84  F00F         	goto	l5444
  1572   001F86                     l5460:
  1573                           
  1574                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 359:     return ret;
  1575   001F86  5055               	movf	lcd_4bit_set_cursor@ret^0,w,c
  1576   001F88  0012               	return		;funcret
  1577   001F8A                     __end_of_lcd_4bit_set_cursor:
  1578                           	callstack 0
  1579                           
  1580 ;; *************** function _lcd_4bit_send_char *****************
  1581 ;; Defined at:
  1582 ;;		line 92 in file "ECU_Layer/Chr_LCD/chr_lcd.c"
  1583 ;; Parameters:    Size  Location     Type
  1584 ;;  lcd             1   29[COMRAM] PTR const struct .
  1585 ;;		 -> lcd1(6), 
  1586 ;;  data            1   30[COMRAM] unsigned char 
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;  ret             1   31[COMRAM] unsigned char 
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      unsigned char 
  1591 ;; Registers used:
  1592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1598 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1599 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1601 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1602 ;;Total ram usage:        3 bytes
  1603 ;; Hardware stack levels used: 1
  1604 ;; Hardware stack levels required when called: 7
  1605 ;; This function calls:
  1606 ;;		_gpio_pin_write
  1607 ;;		_lcd_4bits_send_enable_signal
  1608 ;;		_lcd_send_4bits
  1609 ;; This function is called by:
  1610 ;;		_lcd_4bit_send_char_pos
  1611 ;;		_lcd_4bit_send_string
  1612 ;;		_main
  1613 ;;		_lcd_4bit_send_custom_char
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617                           	psect	text6
  1618   002236                     __ptext6:
  1619                           	callstack 0
  1620   002236                     _lcd_4bit_send_char:
  1621                           	callstack 21
  1622   002236                     
  1623                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 95:     if (((void*)0) == lcd) {
  1624   002236  504F               	movf	lcd_4bit_send_char@lcd^0,w,c
  1625   002238  A4D8               	btfss	status,2,c
  1626   00223A  EF21  F011         	goto	u5101
  1627   00223E  EF23  F011         	goto	u5100
  1628   002242                     u5101:
  1629   002242  EF27  F011         	goto	l5374
  1630   002246                     u5100:
  1631   002246                     
  1632                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 96:         ret = 0x00;
  1633   002246  0E00               	movlw	0
  1634   002248  6E51               	movwf	lcd_4bit_send_char@ret^0,c
  1635                           
  1636                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 97:     } else {
  1637   00224A  EF47  F011         	goto	l5376
  1638   00224E                     l5374:
  1639                           
  1640                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 98:         ret = gpio_pin_write(&(lcd->lcd_rs), GPIO_HIGH
      +                          );
  1641   00224E  C04F  F041         	movff	lcd_4bit_send_char@lcd,gpio_pin_write@pin
  1642   002252  0E01               	movlw	1
  1643   002254  6E42               	movwf	gpio_pin_write@logic^0,c
  1644   002256  EC8A  F00A         	call	_gpio_pin_write	;wreg free
  1645   00225A  6E51               	movwf	lcd_4bit_send_char@ret^0,c
  1646                           
  1647                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 100:         ret = lcd_send_4bits(lcd, data >> 4);
  1648   00225C  C04F  F049         	movff	lcd_4bit_send_char@lcd,lcd_send_4bits@lcd
  1649   002260  3850               	swapf	lcd_4bit_send_char@data^0,w,c
  1650   002262  0B0F               	andlw	15
  1651   002264  6E4A               	movwf	lcd_send_4bits@_data_cmd^0,c
  1652   002266  ECBB  F010         	call	_lcd_send_4bits	;wreg free
  1653   00226A  6E51               	movwf	lcd_4bit_send_char@ret^0,c
  1654                           
  1655                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 101:         ret = lcd_4bits_send_enable_signal(lcd);
  1656   00226C  C04F  F049         	movff	lcd_4bit_send_char@lcd,lcd_4bits_send_enable_signal@lcd
  1657   002270  EC95  F012         	call	_lcd_4bits_send_enable_signal	;wreg free
  1658   002274  6E51               	movwf	lcd_4bit_send_char@ret^0,c
  1659                           
  1660                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 103:         ret = lcd_send_4bits(lcd, data);
  1661   002276  C04F  F049         	movff	lcd_4bit_send_char@lcd,lcd_send_4bits@lcd
  1662   00227A  C050  F04A         	movff	lcd_4bit_send_char@data,lcd_send_4bits@_data_cmd
  1663   00227E  ECBB  F010         	call	_lcd_send_4bits	;wreg free
  1664   002282  6E51               	movwf	lcd_4bit_send_char@ret^0,c
  1665                           
  1666                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 104:         ret = lcd_4bits_send_enable_signal(lcd);
  1667   002284  C04F  F049         	movff	lcd_4bit_send_char@lcd,lcd_4bits_send_enable_signal@lcd
  1668   002288  EC95  F012         	call	_lcd_4bits_send_enable_signal	;wreg free
  1669   00228C  6E51               	movwf	lcd_4bit_send_char@ret^0,c
  1670   00228E                     l5376:
  1671                           
  1672                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 106:     return ret;
  1673   00228E  5051               	movf	lcd_4bit_send_char@ret^0,w,c
  1674   002290  0012               	return		;funcret
  1675   002292                     __end_of_lcd_4bit_send_char:
  1676                           	callstack 0
  1677                           
  1678 ;; *************** function _lcd_4bit_init *****************
  1679 ;; Defined at:
  1680 ;;		line 30 in file "ECU_Layer/Chr_LCD/chr_lcd.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  lcd             1   32[COMRAM] PTR struct .
  1683 ;;		 -> lcd1(6), 
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;  pins_counter    1   35[COMRAM] unsigned char 
  1686 ;;  ret             1   34[COMRAM] unsigned char 
  1687 ;; Return value:  Size  Location     Type
  1688 ;;                  1    wreg      unsigned char 
  1689 ;; Registers used:
  1690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1691 ;; Tracked objects:
  1692 ;;		On entry : 0/0
  1693 ;;		On exit  : 0/0
  1694 ;;		Unchanged: 0/0
  1695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1696 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1697 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1698 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1699 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1700 ;;Total ram usage:        4 bytes
  1701 ;; Hardware stack levels used: 1
  1702 ;; Hardware stack levels required when called: 8
  1703 ;; This function calls:
  1704 ;;		_gpio_pin_initialize
  1705 ;;		_lcd_4bit_send_cmd
  1706 ;; This function is called by:
  1707 ;;		_main
  1708 ;; This function uses a non-reentrant model
  1709 ;;
  1710                           
  1711                           	psect	text7
  1712   001676                     __ptext7:
  1713                           	callstack 0
  1714   001676                     _lcd_4bit_init:
  1715                           	callstack 22
  1716   001676                     
  1717                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 32:     uint8 pins_counter = 0;
  1718   001676  0E00               	movlw	0
  1719   001678  6E55               	movwf	lcd_4bit_init@pins_counter^0,c
  1720                           
  1721                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 34:     if (((void*)0) == lcd) {
  1722   00167A  5052               	movf	lcd_4bit_init@lcd^0,w,c
  1723   00167C  A4D8               	btfss	status,2,c
  1724   00167E  EF43  F00B         	goto	u5401
  1725   001682  EF45  F00B         	goto	u5400
  1726   001686                     u5401:
  1727   001686  EF47  F00B         	goto	l5590
  1728   00168A                     u5400:
  1729   00168A                     
  1730                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 36:     } else {
  1731   00168A  EFD4  F00B         	goto	l65
  1732   00168E                     l5590:
  1733                           
  1734                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 37:         lcd->lcd_rs.direction = GPIO_DIRECTION_OUTPUT;
  1735   00168E  5052               	movf	lcd_4bit_init@lcd^0,w,c
  1736   001690  6ED9               	movwf	fsr2l,c
  1737   001692  6ADA               	clrf	fsr2h,c
  1738   001694  9CDF               	bcf	indf2,6,c
  1739                           
  1740                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 38:         lcd->lcd_rs.logic = GPIO_LOW;
  1741   001696  5052               	movf	lcd_4bit_init@lcd^0,w,c
  1742   001698  6ED9               	movwf	fsr2l,c
  1743   00169A  6ADA               	clrf	fsr2h,c
  1744   00169C  9EDF               	bcf	indf2,7,c
  1745   00169E                     
  1746                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 39:         lcd->lcd_en.direction = GPIO_DIRECTION_OUTPUT;
  1747   00169E  5052               	movf	lcd_4bit_init@lcd^0,w,c
  1748   0016A0  6ED9               	movwf	fsr2l,c
  1749   0016A2  6ADA               	clrf	fsr2h,c
  1750   0016A4  0E01               	movlw	1
  1751   0016A6  26D9               	addwf	fsr2l,f,c
  1752   0016A8  9CDF               	bcf	indf2,6,c
  1753   0016AA                     
  1754                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 40:         lcd->lcd_en.logic = GPIO_LOW;
  1755   0016AA  5052               	movf	lcd_4bit_init@lcd^0,w,c
  1756   0016AC  6ED9               	movwf	fsr2l,c
  1757   0016AE  6ADA               	clrf	fsr2h,c
  1758   0016B0  0E01               	movlw	1
  1759   0016B2  26D9               	addwf	fsr2l,f,c
  1760   0016B4  9EDF               	bcf	indf2,7,c
  1761   0016B6  C052  F049         	movff	lcd_4bit_init@lcd,gpio_pin_initialize@pin
  1762   0016BA  ECEC  F010         	call	_gpio_pin_initialize	;wreg free
  1763   0016BE  2852               	incf	lcd_4bit_init@lcd^0,w,c
  1764   0016C0  6E49               	movwf	gpio_pin_initialize@pin^0,c
  1765   0016C2  ECEC  F010         	call	_gpio_pin_initialize	;wreg free
  1766   0016C6                     
  1767                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 44:         for (pins_counter = 0; pins_counter < 4; pins_
      +                          counter++) {
  1768   0016C6  0E00               	movlw	0
  1769   0016C8  6E55               	movwf	lcd_4bit_init@pins_counter^0,c
  1770   0016CA                     l5606:
  1771                           
  1772                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 45:             lcd->lcd_data[pins_counter].direction = GP
      +                          IO_DIRECTION_OUTPUT;
  1773   0016CA  5052               	movf	lcd_4bit_init@lcd^0,w,c
  1774   0016CC  2455               	addwf	lcd_4bit_init@pins_counter^0,w,c
  1775   0016CE  6ED9               	movwf	fsr2l,c
  1776   0016D0  6ADA               	clrf	fsr2h,c
  1777   0016D2  0E02               	movlw	2
  1778   0016D4  26D9               	addwf	fsr2l,f,c
  1779   0016D6  9CDF               	bcf	indf2,6,c
  1780                           
  1781                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 46:             lcd->lcd_data[pins_counter].logic = GPIO_L
      +                          OW;
  1782   0016D8  5052               	movf	lcd_4bit_init@lcd^0,w,c
  1783   0016DA  2455               	addwf	lcd_4bit_init@pins_counter^0,w,c
  1784   0016DC  6ED9               	movwf	fsr2l,c
  1785   0016DE  6ADA               	clrf	fsr2h,c
  1786   0016E0  0E02               	movlw	2
  1787   0016E2  26D9               	addwf	fsr2l,f,c
  1788   0016E4  9EDF               	bcf	indf2,7,c
  1789   0016E6  5052               	movf	lcd_4bit_init@lcd^0,w,c
  1790   0016E8  2455               	addwf	lcd_4bit_init@pins_counter^0,w,c
  1791   0016EA  0F02               	addlw	2
  1792   0016EC  6E49               	movwf	gpio_pin_initialize@pin^0,c
  1793   0016EE  ECEC  F010         	call	_gpio_pin_initialize	;wreg free
  1794   0016F2                     
  1795                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 48:         }
  1796   0016F2  2A55               	incf	lcd_4bit_init@pins_counter^0,f,c
  1797   0016F4  0E03               	movlw	3
  1798   0016F6  6455               	cpfsgt	lcd_4bit_init@pins_counter^0,c
  1799   0016F8  EF80  F00B         	goto	u5411
  1800   0016FC  EF82  F00B         	goto	u5410
  1801   001700                     u5411:
  1802   001700  EF65  F00B         	goto	l5606
  1803   001704                     u5410:
  1804   001704                     
  1805                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 49:         _delay((unsigned long)((20)*(4000000UL/4000.0)
      +                          ));
  1806   001704  0E1A               	movlw	26
  1807   001706  6E53               	movwf	??_lcd_4bit_init^0,c
  1808   001708  0EF8               	movlw	248
  1809   00170A                     u5917:
  1810   00170A  2EE8               	decfsz	wreg,f,c
  1811   00170C  D7FE               	bra	u5917
  1812   00170E  2E53               	decfsz	??_lcd_4bit_init^0,f,c
  1813   001710  D7FC               	bra	u5917
  1814   001712  D000               	nop2	
  1815   001714  C052  F04F         	movff	lcd_4bit_init@lcd,lcd_4bit_send_cmd@lcd
  1816   001718  0E38               	movlw	56
  1817   00171A  6E50               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1818   00171C  EC49  F011         	call	_lcd_4bit_send_cmd	;wreg free
  1819   001720                     
  1820                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 51:         _delay((unsigned long)((5)*(4000000UL/4000.0))
      +                          );
  1821   001720  0E07               	movlw	7
  1822   001722  6E53               	movwf	??_lcd_4bit_init^0,c
  1823   001724  0E7D               	movlw	125
  1824   001726                     u5927:
  1825   001726  2EE8               	decfsz	wreg,f,c
  1826   001728  D7FE               	bra	u5927
  1827   00172A  2E53               	decfsz	??_lcd_4bit_init^0,f,c
  1828   00172C  D7FC               	bra	u5927
  1829   00172E  0000               	nop	
  1830   001730  C052  F04F         	movff	lcd_4bit_init@lcd,lcd_4bit_send_cmd@lcd
  1831   001734  0E38               	movlw	56
  1832   001736  6E50               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1833   001738  EC49  F011         	call	_lcd_4bit_send_cmd	;wreg free
  1834   00173C                     
  1835                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 53:         _delay((unsigned long)((120)*(4000000UL/400000
      +                          0.0)));
  1836   00173C  0E28               	movlw	40
  1837   00173E                     u5937:
  1838   00173E  2EE8               	decfsz	wreg,f,c
  1839   001740  D7FE               	bra	u5937
  1840   001742  C052  F04F         	movff	lcd_4bit_init@lcd,lcd_4bit_send_cmd@lcd
  1841   001746  0E38               	movlw	56
  1842   001748  6E50               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1843   00174A  EC49  F011         	call	_lcd_4bit_send_cmd	;wreg free
  1844   00174E  C052  F04F         	movff	lcd_4bit_init@lcd,lcd_4bit_send_cmd@lcd
  1845   001752  0E01               	movlw	1
  1846   001754  6E50               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1847   001756  EC49  F011         	call	_lcd_4bit_send_cmd	;wreg free
  1848   00175A                     
  1849                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 57:         _delay((unsigned long)((1)*(4000000UL/4000.0))
      +                          );
  1850   00175A  0EC8               	movlw	200
  1851   00175C                     u5947:
  1852   00175C  D000               	nop2	
  1853   00175E  2EE8               	decfsz	wreg,f,c
  1854   001760  D7FD               	bra	u5947
  1855                           
  1856                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 58:         ret = lcd_4bit_send_cmd(lcd, 0x02);
  1857   001762  C052  F04F         	movff	lcd_4bit_init@lcd,lcd_4bit_send_cmd@lcd
  1858   001766  0E02               	movlw	2
  1859   001768  6E50               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1860   00176A  EC49  F011         	call	_lcd_4bit_send_cmd	;wreg free
  1861   00176E  6E54               	movwf	lcd_4bit_init@ret^0,c
  1862                           
  1863                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 59:         ret = lcd_4bit_send_cmd(lcd, 0x06);
  1864   001770  C052  F04F         	movff	lcd_4bit_init@lcd,lcd_4bit_send_cmd@lcd
  1865   001774  0E06               	movlw	6
  1866   001776  6E50               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1867   001778  EC49  F011         	call	_lcd_4bit_send_cmd	;wreg free
  1868   00177C  6E54               	movwf	lcd_4bit_init@ret^0,c
  1869                           
  1870                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 60:         ret = lcd_4bit_send_cmd(lcd, 0x0C);
  1871   00177E  C052  F04F         	movff	lcd_4bit_init@lcd,lcd_4bit_send_cmd@lcd
  1872   001782  0E0C               	movlw	12
  1873   001784  6E50               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1874   001786  EC49  F011         	call	_lcd_4bit_send_cmd	;wreg free
  1875   00178A  6E54               	movwf	lcd_4bit_init@ret^0,c
  1876                           
  1877                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 61:         ret = lcd_4bit_send_cmd(lcd, 0x28);
  1878   00178C  C052  F04F         	movff	lcd_4bit_init@lcd,lcd_4bit_send_cmd@lcd
  1879   001790  0E28               	movlw	40
  1880   001792  6E50               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1881   001794  EC49  F011         	call	_lcd_4bit_send_cmd	;wreg free
  1882   001798  6E54               	movwf	lcd_4bit_init@ret^0,c
  1883                           
  1884                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 62:         ret = lcd_4bit_send_cmd(lcd, 0x80);
  1885   00179A  C052  F04F         	movff	lcd_4bit_init@lcd,lcd_4bit_send_cmd@lcd
  1886   00179E  0E80               	movlw	128
  1887   0017A0  6E50               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1888   0017A2  EC49  F011         	call	_lcd_4bit_send_cmd	;wreg free
  1889   0017A6  6E54               	movwf	lcd_4bit_init@ret^0,c
  1890   0017A8                     l65:
  1891   0017A8  0012               	return		;funcret
  1892   0017AA                     __end_of_lcd_4bit_init:
  1893                           	callstack 0
  1894                           
  1895 ;; *************** function _lcd_4bit_send_cmd *****************
  1896 ;; Defined at:
  1897 ;;		line 71 in file "ECU_Layer/Chr_LCD/chr_lcd.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  lcd             1   29[COMRAM] PTR const struct .
  1900 ;;		 -> lcd1(6), 
  1901 ;;  cmd             1   30[COMRAM] unsigned char 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  ret             1   31[COMRAM] unsigned char 
  1904 ;; Return value:  Size  Location     Type
  1905 ;;                  1    wreg      unsigned char 
  1906 ;; Registers used:
  1907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1908 ;; Tracked objects:
  1909 ;;		On entry : 0/0
  1910 ;;		On exit  : 0/0
  1911 ;;		Unchanged: 0/0
  1912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1913 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1914 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1916 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1917 ;;Total ram usage:        3 bytes
  1918 ;; Hardware stack levels used: 1
  1919 ;; Hardware stack levels required when called: 7
  1920 ;; This function calls:
  1921 ;;		_gpio_pin_write
  1922 ;;		_lcd_4bits_send_enable_signal
  1923 ;;		_lcd_send_4bits
  1924 ;; This function is called by:
  1925 ;;		_lcd_4bit_init
  1926 ;;		_lcd_4bit_set_cursor
  1927 ;;		_lcd_4bit_send_custom_char
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931                           	psect	text8
  1932   002292                     __ptext8:
  1933                           	callstack 0
  1934   002292                     _lcd_4bit_send_cmd:
  1935                           	callstack 21
  1936   002292                     
  1937                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 74:     if (((void*)0) == lcd) {
  1938   002292  504F               	movf	lcd_4bit_send_cmd@lcd^0,w,c
  1939   002294  A4D8               	btfss	status,2,c
  1940   002296  EF4F  F011         	goto	u5091
  1941   00229A  EF51  F011         	goto	u5090
  1942   00229E                     u5091:
  1943   00229E  EF55  F011         	goto	l5364
  1944   0022A2                     u5090:
  1945   0022A2                     
  1946                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 75:         ret = 0x00;
  1947   0022A2  0E00               	movlw	0
  1948   0022A4  6E51               	movwf	lcd_4bit_send_cmd@ret^0,c
  1949                           
  1950                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 76:     } else {
  1951   0022A6  EF75  F011         	goto	l5366
  1952   0022AA                     l5364:
  1953                           
  1954                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 77:         ret = gpio_pin_write(&(lcd->lcd_rs), GPIO_LOW)
      +                          ;
  1955   0022AA  C04F  F041         	movff	lcd_4bit_send_cmd@lcd,gpio_pin_write@pin
  1956   0022AE  0E00               	movlw	0
  1957   0022B0  6E42               	movwf	gpio_pin_write@logic^0,c
  1958   0022B2  EC8A  F00A         	call	_gpio_pin_write	;wreg free
  1959   0022B6  6E51               	movwf	lcd_4bit_send_cmd@ret^0,c
  1960                           
  1961                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 79:         ret = lcd_send_4bits(lcd, cmd >> 4);
  1962   0022B8  C04F  F049         	movff	lcd_4bit_send_cmd@lcd,lcd_send_4bits@lcd
  1963   0022BC  3850               	swapf	lcd_4bit_send_cmd@cmd^0,w,c
  1964   0022BE  0B0F               	andlw	15
  1965   0022C0  6E4A               	movwf	lcd_send_4bits@_data_cmd^0,c
  1966   0022C2  ECBB  F010         	call	_lcd_send_4bits	;wreg free
  1967   0022C6  6E51               	movwf	lcd_4bit_send_cmd@ret^0,c
  1968                           
  1969                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 80:         ret = lcd_4bits_send_enable_signal(lcd);
  1970   0022C8  C04F  F049         	movff	lcd_4bit_send_cmd@lcd,lcd_4bits_send_enable_signal@lcd
  1971   0022CC  EC95  F012         	call	_lcd_4bits_send_enable_signal	;wreg free
  1972   0022D0  6E51               	movwf	lcd_4bit_send_cmd@ret^0,c
  1973                           
  1974                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 82:         ret = lcd_send_4bits(lcd, cmd);
  1975   0022D2  C04F  F049         	movff	lcd_4bit_send_cmd@lcd,lcd_send_4bits@lcd
  1976   0022D6  C050  F04A         	movff	lcd_4bit_send_cmd@cmd,lcd_send_4bits@_data_cmd
  1977   0022DA  ECBB  F010         	call	_lcd_send_4bits	;wreg free
  1978   0022DE  6E51               	movwf	lcd_4bit_send_cmd@ret^0,c
  1979                           
  1980                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 83:         ret = lcd_4bits_send_enable_signal(lcd);
  1981   0022E0  C04F  F049         	movff	lcd_4bit_send_cmd@lcd,lcd_4bits_send_enable_signal@lcd
  1982   0022E4  EC95  F012         	call	_lcd_4bits_send_enable_signal	;wreg free
  1983   0022E8  6E51               	movwf	lcd_4bit_send_cmd@ret^0,c
  1984   0022EA                     l5366:
  1985                           
  1986                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 85:     return ret;
  1987   0022EA  5051               	movf	lcd_4bit_send_cmd@ret^0,w,c
  1988   0022EC  0012               	return		;funcret
  1989   0022EE                     __end_of_lcd_4bit_send_cmd:
  1990                           	callstack 0
  1991                           
  1992 ;; *************** function _lcd_send_4bits *****************
  1993 ;; Defined at:
  1994 ;;		line 307 in file "ECU_Layer/Chr_LCD/chr_lcd.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;  lcd             1   23[COMRAM] PTR const struct .
  1997 ;;		 -> lcd1(6), 
  1998 ;;  _data_cmd       1   24[COMRAM] unsigned char 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  l_pin_counte    1   28[COMRAM] unsigned char 
  2001 ;;  ret             1   27[COMRAM] unsigned char 
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      unsigned char 
  2004 ;; Registers used:
  2005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2011 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2013 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2014 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2015 ;;Total ram usage:        6 bytes
  2016 ;; Hardware stack levels used: 1
  2017 ;; Hardware stack levels required when called: 6
  2018 ;; This function calls:
  2019 ;;		_gpio_pin_write
  2020 ;; This function is called by:
  2021 ;;		_lcd_4bit_send_cmd
  2022 ;;		_lcd_4bit_send_char
  2023 ;; This function uses a non-reentrant model
  2024 ;;
  2025                           
  2026                           	psect	text9
  2027   002176                     __ptext9:
  2028                           	callstack 0
  2029   002176                     _lcd_send_4bits:
  2030                           	callstack 21
  2031   002176                     
  2032                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 309:     uint8 l_pin_counter = 0;
  2033   002176  0E00               	movlw	0
  2034   002178  6E4E               	movwf	lcd_send_4bits@l_pin_counter^0,c
  2035                           
  2036                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 311:     if (((void*)0) == lcd) {
  2037   00217A  5049               	movf	lcd_send_4bits@lcd^0,w,c
  2038   00217C  A4D8               	btfss	status,2,c
  2039   00217E  EFC3  F010         	goto	u4901
  2040   002182  EFC5  F010         	goto	u4900
  2041   002186                     u4901:
  2042   002186  EFC9  F010         	goto	l5262
  2043   00218A                     u4900:
  2044   00218A                     
  2045                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 312:         ret = 0x00;
  2046   00218A  0E00               	movlw	0
  2047   00218C  6E4D               	movwf	lcd_send_4bits@ret^0,c
  2048                           
  2049                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 313:     } else {
  2050   00218E  EFEA  F010         	goto	l5274
  2051   002192                     l5262:
  2052                           
  2053                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 314:         for (l_pin_counter = 0; l_pin_counter < 4; l_
      +                          pin_counter++) {
  2054   002192  0E00               	movlw	0
  2055   002194  6E4E               	movwf	lcd_send_4bits@l_pin_counter^0,c
  2056   002196                     l5268:
  2057                           
  2058                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 315:             ret = gpio_pin_write(&(lcd->lcd_data[l_pi
      +                          n_counter]), (_data_cmd >> l_pin_counter) & 0x01);
  2059   002196  5049               	movf	lcd_send_4bits@lcd^0,w,c
  2060   002198  244E               	addwf	lcd_send_4bits@l_pin_counter^0,w,c
  2061   00219A  0F02               	addlw	2
  2062   00219C  6E41               	movwf	gpio_pin_write@pin^0,c
  2063   00219E  C04E  F04B         	movff	lcd_send_4bits@l_pin_counter,??_lcd_send_4bits
  2064   0021A2  C04A  F04C         	movff	lcd_send_4bits@_data_cmd,??_lcd_send_4bits+1
  2065   0021A6  2A4B               	incf	??_lcd_send_4bits^0,f,c
  2066   0021A8  EFD8  F010         	goto	u4914
  2067   0021AC                     u4915:
  2068   0021AC  90D8               	bcf	status,0,c
  2069   0021AE  324C               	rrcf	(??_lcd_send_4bits+1)^0,f,c
  2070   0021B0                     u4914:
  2071   0021B0  2E4B               	decfsz	??_lcd_send_4bits^0,f,c
  2072   0021B2  EFD6  F010         	goto	u4915
  2073   0021B6  504C               	movf	(??_lcd_send_4bits+1)^0,w,c
  2074   0021B8  0B01               	andlw	1
  2075   0021BA  6E42               	movwf	gpio_pin_write@logic^0,c
  2076   0021BC  EC8A  F00A         	call	_gpio_pin_write	;wreg free
  2077   0021C0  6E4D               	movwf	lcd_send_4bits@ret^0,c
  2078   0021C2                     
  2079                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 316:         }
  2080   0021C2  2A4E               	incf	lcd_send_4bits@l_pin_counter^0,f,c
  2081   0021C4  0E03               	movlw	3
  2082   0021C6  644E               	cpfsgt	lcd_send_4bits@l_pin_counter^0,c
  2083   0021C8  EFE8  F010         	goto	u4921
  2084   0021CC  EFEA  F010         	goto	u4920
  2085   0021D0                     u4921:
  2086   0021D0  EFCB  F010         	goto	l5268
  2087   0021D4                     u4920:
  2088   0021D4                     l5274:
  2089                           
  2090                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 318:     return ret;
  2091   0021D4  504D               	movf	lcd_send_4bits@ret^0,w,c
  2092   0021D6  0012               	return		;funcret
  2093   0021D8                     __end_of_lcd_send_4bits:
  2094                           	callstack 0
  2095                           
  2096 ;; *************** function _lcd_4bits_send_enable_signal *****************
  2097 ;; Defined at:
  2098 ;;		line 321 in file "ECU_Layer/Chr_LCD/chr_lcd.c"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;  lcd             1   23[COMRAM] PTR const struct .
  2101 ;;		 -> lcd1(6), 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  ret             1   24[COMRAM] unsigned char 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      unsigned char 
  2106 ;; Registers used:
  2107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2113 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2116 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2117 ;;Total ram usage:        2 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; Hardware stack levels required when called: 6
  2120 ;; This function calls:
  2121 ;;		_gpio_pin_write
  2122 ;; This function is called by:
  2123 ;;		_lcd_4bit_send_cmd
  2124 ;;		_lcd_4bit_send_char
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text10
  2129   00252A                     __ptext10:
  2130                           	callstack 0
  2131   00252A                     _lcd_4bits_send_enable_signal:
  2132                           	callstack 21
  2133   00252A                     
  2134                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 324:     if (((void*)0) == lcd) {
  2135   00252A  5049               	movf	lcd_4bits_send_enable_signal@lcd^0,w,c
  2136   00252C  A4D8               	btfss	status,2,c
  2137   00252E  EF9B  F012         	goto	u4931
  2138   002532  EF9D  F012         	goto	u4930
  2139   002536                     u4931:
  2140   002536  EFA1  F012         	goto	l5282
  2141   00253A                     u4930:
  2142   00253A                     
  2143                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 325:         ret = 0x00;
  2144   00253A  0E00               	movlw	0
  2145   00253C  6E4A               	movwf	lcd_4bits_send_enable_signal@ret^0,c
  2146                           
  2147                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 326:     } else {
  2148   00253E  EFB1  F012         	goto	l5286
  2149   002542                     l5282:
  2150   002542  2849               	incf	lcd_4bits_send_enable_signal@lcd^0,w,c
  2151   002544  6E41               	movwf	gpio_pin_write@pin^0,c
  2152   002546  0E01               	movlw	1
  2153   002548  6E42               	movwf	gpio_pin_write@logic^0,c
  2154   00254A  EC8A  F00A         	call	_gpio_pin_write	;wreg free
  2155   00254E                     
  2156                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 328:         _delay((unsigned long)((5)*(4000000UL/4000000
      +                          .0)));
  2157   00254E  D000               	nop2		;2 cycle nop
  2158   002550  D000               	nop2		;2 cycle nop
  2159   002552  0000               	nop	
  2160                           
  2161                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 329:         ret = gpio_pin_write(&(lcd->lcd_en), GPIO_LOW
      +                          );
  2162   002554  2849               	incf	lcd_4bits_send_enable_signal@lcd^0,w,c
  2163   002556  6E41               	movwf	gpio_pin_write@pin^0,c
  2164   002558  0E00               	movlw	0
  2165   00255A  6E42               	movwf	gpio_pin_write@logic^0,c
  2166   00255C  EC8A  F00A         	call	_gpio_pin_write	;wreg free
  2167   002560  6E4A               	movwf	lcd_4bits_send_enable_signal@ret^0,c
  2168   002562                     l5286:
  2169                           
  2170                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 331:     return ret;
  2171   002562  504A               	movf	lcd_4bits_send_enable_signal@ret^0,w,c
  2172   002564  0012               	return		;funcret
  2173   002566                     __end_of_lcd_4bits_send_enable_signal:
  2174                           	callstack 0
  2175                           
  2176 ;; *************** function _gpio_pin_initialize *****************
  2177 ;; Defined at:
  2178 ;;		line 210 in file "MCAL_Layer/GPIO/gpio.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  pin             1   23[COMRAM] PTR const struct .
  2181 ;;		 -> lcd1$lcd_data(4), lcd1$lcd_en(1), lcd1$lcd_rs(1), lcd1(6), 
  2182 ;;		 -> relay_init@pin(1), led_init@pin(1), dc_motor_init@pin2(1), dc_motor_init@pin1(1), 
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  ret             1   25[COMRAM] unsigned char 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      unsigned char 
  2187 ;; Registers used:
  2188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2194 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2198 ;;Total ram usage:        3 bytes
  2199 ;; Hardware stack levels used: 1
  2200 ;; Hardware stack levels required when called: 6
  2201 ;; This function calls:
  2202 ;;		_gpio_pin_set_direction
  2203 ;;		_gpio_pin_write
  2204 ;; This function is called by:
  2205 ;;		_lcd_4bit_init
  2206 ;;		_led_init
  2207 ;;		_seven_seg_init
  2208 ;;		_dc_motor_init
  2209 ;;		_keypad_init
  2210 ;;		_relay_init
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           	psect	text11
  2215   0021D8                     __ptext11:
  2216                           	callstack 0
  2217   0021D8                     _gpio_pin_initialize:
  2218                           	callstack 23
  2219   0021D8                     
  2220                           ;MCAL_Layer/GPIO/gpio.c: 214:     if(((void*)0) == pin || pin->pin_num > 8 - 1)
  2221   0021D8  5049               	movf	gpio_pin_initialize@pin^0,w,c
  2222   0021DA  B4D8               	btfsc	status,2,c
  2223   0021DC  EFF2  F010         	goto	u5121
  2224   0021E0  EFF4  F010         	goto	u5120
  2225   0021E4                     u5121:
  2226   0021E4  EF04  F011         	goto	l5430
  2227   0021E8                     u5120:
  2228   0021E8  5049               	movf	gpio_pin_initialize@pin^0,w,c
  2229   0021EA  6ED9               	movwf	fsr2l,c
  2230   0021EC  6ADA               	clrf	fsr2h,c
  2231   0021EE  30DF               	rrcf	223,w,c
  2232   0021F0  32E8               	rrcf	wreg,f,c
  2233   0021F2  32E8               	rrcf	wreg,f,c
  2234   0021F4  0B07               	andlw	7
  2235   0021F6  6E4A               	movwf	??_gpio_pin_initialize^0,c
  2236   0021F8  0E07               	movlw	7
  2237   0021FA  644A               	cpfsgt	??_gpio_pin_initialize^0,c
  2238   0021FC  EF02  F011         	goto	u5131
  2239   002200  EF04  F011         	goto	u5130
  2240   002204                     u5131:
  2241   002204  EF08  F011         	goto	l5432
  2242   002208                     u5130:
  2243   002208                     l5430:
  2244                           
  2245                           ;MCAL_Layer/GPIO/gpio.c: 215:     {;MCAL_Layer/GPIO/gpio.c: 216:         ret = 0x00;
  2246   002208  0E00               	movlw	0
  2247   00220A  6E4B               	movwf	gpio_pin_initialize@ret^0,c
  2248                           
  2249                           ;MCAL_Layer/GPIO/gpio.c: 217:     }
  2250   00220C  EF19  F011         	goto	l5434
  2251   002210                     l5432:
  2252                           
  2253                           ;MCAL_Layer/GPIO/gpio.c: 219:     {;MCAL_Layer/GPIO/gpio.c: 220:         ret = gpio_pin_
      +                          set_direction(pin);
  2254   002210  C049  F041         	movff	gpio_pin_initialize@pin,gpio_pin_set_direction@pin
  2255   002214  ECD5  F00B         	call	_gpio_pin_set_direction	;wreg free
  2256   002218  6E4B               	movwf	gpio_pin_initialize@ret^0,c
  2257                           
  2258                           ;MCAL_Layer/GPIO/gpio.c: 221:         ret = gpio_pin_write(pin, pin->logic);
  2259   00221A  C049  F041         	movff	gpio_pin_initialize@pin,gpio_pin_write@pin
  2260   00221E  5049               	movf	gpio_pin_initialize@pin^0,w,c
  2261   002220  6ED9               	movwf	fsr2l,c
  2262   002222  6ADA               	clrf	fsr2h,c
  2263   002224  0E00               	movlw	0
  2264   002226  BEDF               	btfsc	indf2,7,c
  2265   002228  0E01               	movlw	1
  2266   00222A  6E42               	movwf	gpio_pin_write@logic^0,c
  2267   00222C  EC8A  F00A         	call	_gpio_pin_write	;wreg free
  2268   002230  6E4B               	movwf	gpio_pin_initialize@ret^0,c
  2269   002232                     l5434:
  2270                           
  2271                           ;MCAL_Layer/GPIO/gpio.c: 224:     return ret;
  2272   002232  504B               	movf	gpio_pin_initialize@ret^0,w,c
  2273   002234  0012               	return		;funcret
  2274   002236                     __end_of_gpio_pin_initialize:
  2275                           	callstack 0
  2276                           
  2277 ;; *************** function _gpio_pin_write *****************
  2278 ;; Defined at:
  2279 ;;		line 114 in file "MCAL_Layer/GPIO/gpio.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  pin             1   15[COMRAM] PTR const struct .
  2282 ;;		 -> lcd1$lcd_data(4), lcd1$lcd_en(1), lcd1$lcd_rs(1), lcd1(6), 
  2283 ;;		 -> relay_turn_off@pin(1), relay_turn_on@pin(1), relay_init@pin(1), led_turn_off@pin(1), 
  2284 ;;		 -> led_turn_on@pin(1), led_init@pin(1), dc_motor_stop@pin2(1), dc_motor_stop@pin1(1), 
  2285 ;;		 -> dc_motor_move_dir2@pin2(1), dc_motor_move_dir2@pin1(1), dc_motor_move_dir1@pin2(1), dc_motor_move_dir1@pin1(1), 
  2286 ;;		 -> dc_motor_init@pin2(1), dc_motor_init@pin1(1), 
  2287 ;;  logic           1   16[COMRAM] enum E2993
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;  ret             1   22[COMRAM] unsigned char 
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      unsigned char 
  2292 ;; Registers used:
  2293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2299 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2300 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2301 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2302 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2303 ;;Total ram usage:        8 bytes
  2304 ;; Hardware stack levels used: 1
  2305 ;; Hardware stack levels required when called: 5
  2306 ;; This function calls:
  2307 ;;		Nothing
  2308 ;; This function is called by:
  2309 ;;		_lcd_4bit_send_cmd
  2310 ;;		_lcd_4bit_send_char
  2311 ;;		_lcd_send_4bits
  2312 ;;		_lcd_4bits_send_enable_signal
  2313 ;;		_gpio_pin_initialize
  2314 ;;		_seven_seg_write_number
  2315 ;;		_dc_motor_move_dir1
  2316 ;;		_dc_motor_move_dir2
  2317 ;;		_dc_motor_stop
  2318 ;;		_keypad_get_value
  2319 ;;		_led_turn_on
  2320 ;;		_led_turn_off
  2321 ;;		_relay_turn_on
  2322 ;;		_relay_turn_off
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text12
  2327   001514                     __ptext12:
  2328                           	callstack 0
  2329   001514                     _gpio_pin_write:
  2330                           	callstack 23
  2331   001514                     
  2332                           ;MCAL_Layer/GPIO/gpio.c: 114: Std_ReturnType gpio_pin_write(const pin_config_t *pin, log
      +                          ic_t logic);MCAL_Layer/GPIO/gpio.c: 115: {;MCAL_Layer/GPIO/gpio.c: 116:     Std_ReturnTy
      +                          pe ret = 0x01;
  2333   001514  0E01               	movlw	1
  2334   001516  6E48               	movwf	gpio_pin_write@ret^0,c
  2335                           
  2336                           ;MCAL_Layer/GPIO/gpio.c: 118:     if(((void*)0) == pin || pin->pin_num > 8 - 1)
  2337   001518  5041               	movf	gpio_pin_write@pin^0,w,c
  2338   00151A  B4D8               	btfsc	status,2,c
  2339   00151C  EF92  F00A         	goto	u4681
  2340   001520  EF94  F00A         	goto	u4680
  2341   001524                     u4681:
  2342   001524  EFA4  F00A         	goto	l5140
  2343   001528                     u4680:
  2344   001528  5041               	movf	gpio_pin_write@pin^0,w,c
  2345   00152A  6ED9               	movwf	fsr2l,c
  2346   00152C  6ADA               	clrf	fsr2h,c
  2347   00152E  30DF               	rrcf	223,w,c
  2348   001530  32E8               	rrcf	wreg,f,c
  2349   001532  32E8               	rrcf	wreg,f,c
  2350   001534  0B07               	andlw	7
  2351   001536  6E43               	movwf	??_gpio_pin_write^0,c
  2352   001538  0E07               	movlw	7
  2353   00153A  6443               	cpfsgt	??_gpio_pin_write^0,c
  2354   00153C  EFA2  F00A         	goto	u4691
  2355   001540  EFA4  F00A         	goto	u4690
  2356   001544                     u4691:
  2357   001544  EF24  F00B         	goto	l5150
  2358   001548                     u4690:
  2359   001548                     l5140:
  2360                           
  2361                           ;MCAL_Layer/GPIO/gpio.c: 119:     {;MCAL_Layer/GPIO/gpio.c: 120:         ret = 0x00;
  2362   001548  0E00               	movlw	0
  2363   00154A  6E48               	movwf	gpio_pin_write@ret^0,c
  2364                           
  2365                           ;MCAL_Layer/GPIO/gpio.c: 121:     }
  2366   00154C  EF39  F00B         	goto	l5152
  2367   001550                     l5142:
  2368                           
  2369                           ;MCAL_Layer/GPIO/gpio.c: 127:             (*lat_registers[pin->port] &= (~((uint8)1 << p
      +                          in->pin_num)));
  2370   001550  5041               	movf	gpio_pin_write@pin^0,w,c
  2371   001552  6ED9               	movwf	fsr2l,c
  2372   001554  6ADA               	clrf	fsr2h,c
  2373   001556  30DF               	rrcf	223,w,c
  2374   001558  32E8               	rrcf	wreg,f,c
  2375   00155A  32E8               	rrcf	wreg,f,c
  2376   00155C  0B07               	andlw	7
  2377   00155E  6E43               	movwf	??_gpio_pin_write^0,c
  2378   001560  0E01               	movlw	1
  2379   001562  6E44               	movwf	(??_gpio_pin_write+1)^0,c
  2380   001564  2A43               	incf	??_gpio_pin_write^0,f,c
  2381   001566  EFB7  F00A         	goto	u4704
  2382   00156A                     u4705:
  2383   00156A  90D8               	bcf	status,0,c
  2384   00156C  3644               	rlcf	(??_gpio_pin_write+1)^0,f,c
  2385   00156E                     u4704:
  2386   00156E  2E43               	decfsz	??_gpio_pin_write^0,f,c
  2387   001570  EFB5  F00A         	goto	u4705
  2388   001574  5044               	movf	(??_gpio_pin_write+1)^0,w,c
  2389   001576  0AFF               	xorlw	255
  2390   001578  6E45               	movwf	(??_gpio_pin_write+2)^0,c
  2391   00157A  5041               	movf	gpio_pin_write@pin^0,w,c
  2392   00157C  6ED9               	movwf	fsr2l,c
  2393   00157E  6ADA               	clrf	fsr2h,c
  2394   001580  50DF               	movf	223,w,c
  2395   001582  0B07               	andlw	7
  2396   001584  0D02               	mullw	2
  2397   001586  50F3               	movf	243,w,c
  2398   001588  0F8A               	addlw	low _lat_registers
  2399   00158A  6ED9               	movwf	fsr2l,c
  2400   00158C  6ADA               	clrf	fsr2h,c
  2401   00158E  CFDE F046          	movff	postinc2,??_gpio_pin_write+3
  2402   001592  CFDD F047          	movff	postdec2,??_gpio_pin_write+4
  2403   001596  C046  FFD9         	movff	??_gpio_pin_write+3,fsr2l
  2404   00159A  C047  FFDA         	movff	??_gpio_pin_write+4,fsr2h
  2405   00159E  5045               	movf	(??_gpio_pin_write+2)^0,w,c
  2406   0015A0  16DF               	andwf	indf2,f,c
  2407                           
  2408                           ;MCAL_Layer/GPIO/gpio.c: 128:             break;
  2409   0015A2  EF39  F00B         	goto	l5152
  2410   0015A6                     l5144:
  2411                           
  2412                           ;MCAL_Layer/GPIO/gpio.c: 130:             (*lat_registers[pin->port] &= (~((uint8)1 << p
      +                          in->pin_num)));
  2413   0015A6  5041               	movf	gpio_pin_write@pin^0,w,c
  2414   0015A8  6ED9               	movwf	fsr2l,c
  2415   0015AA  6ADA               	clrf	fsr2h,c
  2416   0015AC  30DF               	rrcf	223,w,c
  2417   0015AE  32E8               	rrcf	wreg,f,c
  2418   0015B0  32E8               	rrcf	wreg,f,c
  2419   0015B2  0B07               	andlw	7
  2420   0015B4  6E43               	movwf	??_gpio_pin_write^0,c
  2421   0015B6  0E01               	movlw	1
  2422   0015B8  6E44               	movwf	(??_gpio_pin_write+1)^0,c
  2423   0015BA  2A43               	incf	??_gpio_pin_write^0,f,c
  2424   0015BC  EFE2  F00A         	goto	u4714
  2425   0015C0                     u4715:
  2426   0015C0  90D8               	bcf	status,0,c
  2427   0015C2  3644               	rlcf	(??_gpio_pin_write+1)^0,f,c
  2428   0015C4                     u4714:
  2429   0015C4  2E43               	decfsz	??_gpio_pin_write^0,f,c
  2430   0015C6  EFE0  F00A         	goto	u4715
  2431   0015CA  5044               	movf	(??_gpio_pin_write+1)^0,w,c
  2432   0015CC  0AFF               	xorlw	255
  2433   0015CE  6E45               	movwf	(??_gpio_pin_write+2)^0,c
  2434   0015D0  5041               	movf	gpio_pin_write@pin^0,w,c
  2435   0015D2  6ED9               	movwf	fsr2l,c
  2436   0015D4  6ADA               	clrf	fsr2h,c
  2437   0015D6  50DF               	movf	223,w,c
  2438   0015D8  0B07               	andlw	7
  2439   0015DA  0D02               	mullw	2
  2440   0015DC  50F3               	movf	243,w,c
  2441   0015DE  0F8A               	addlw	low _lat_registers
  2442   0015E0  6ED9               	movwf	fsr2l,c
  2443   0015E2  6ADA               	clrf	fsr2h,c
  2444   0015E4  CFDE F046          	movff	postinc2,??_gpio_pin_write+3
  2445   0015E8  CFDD F047          	movff	postdec2,??_gpio_pin_write+4
  2446   0015EC  C046  FFD9         	movff	??_gpio_pin_write+3,fsr2l
  2447   0015F0  C047  FFDA         	movff	??_gpio_pin_write+4,fsr2h
  2448   0015F4  5045               	movf	(??_gpio_pin_write+2)^0,w,c
  2449   0015F6  16DF               	andwf	indf2,f,c
  2450                           
  2451                           ;MCAL_Layer/GPIO/gpio.c: 131:             (*lat_registers[pin->port] |= ((uint8)1 << pin
      +                          ->pin_num));
  2452   0015F8  5041               	movf	gpio_pin_write@pin^0,w,c
  2453   0015FA  6ED9               	movwf	fsr2l,c
  2454   0015FC  6ADA               	clrf	fsr2h,c
  2455   0015FE  30DF               	rrcf	223,w,c
  2456   001600  32E8               	rrcf	wreg,f,c
  2457   001602  32E8               	rrcf	wreg,f,c
  2458   001604  0B07               	andlw	7
  2459   001606  6E43               	movwf	??_gpio_pin_write^0,c
  2460   001608  0E01               	movlw	1
  2461   00160A  6E44               	movwf	(??_gpio_pin_write+1)^0,c
  2462   00160C  2A43               	incf	??_gpio_pin_write^0,f,c
  2463   00160E  EF0B  F00B         	goto	u4724
  2464   001612                     u4725:
  2465   001612  90D8               	bcf	status,0,c
  2466   001614  3644               	rlcf	(??_gpio_pin_write+1)^0,f,c
  2467   001616                     u4724:
  2468   001616  2E43               	decfsz	??_gpio_pin_write^0,f,c
  2469   001618  EF09  F00B         	goto	u4725
  2470   00161C  5041               	movf	gpio_pin_write@pin^0,w,c
  2471   00161E  6ED9               	movwf	fsr2l,c
  2472   001620  6ADA               	clrf	fsr2h,c
  2473   001622  50DF               	movf	223,w,c
  2474   001624  0B07               	andlw	7
  2475   001626  0D02               	mullw	2
  2476   001628  50F3               	movf	243,w,c
  2477   00162A  0F8A               	addlw	low _lat_registers
  2478   00162C  6ED9               	movwf	fsr2l,c
  2479   00162E  6ADA               	clrf	fsr2h,c
  2480   001630  CFDE F045          	movff	postinc2,??_gpio_pin_write+2
  2481   001634  CFDD F046          	movff	postdec2,??_gpio_pin_write+3
  2482   001638  C045  FFD9         	movff	??_gpio_pin_write+2,fsr2l
  2483   00163C  C046  FFDA         	movff	??_gpio_pin_write+3,fsr2h
  2484   001640  5044               	movf	(??_gpio_pin_write+1)^0,w,c
  2485   001642  12DF               	iorwf	indf2,f,c
  2486                           
  2487                           ;MCAL_Layer/GPIO/gpio.c: 132:             break;
  2488   001644  EF39  F00B         	goto	l5152
  2489   001648                     l5150:
  2490   001648  5042               	movf	gpio_pin_write@logic^0,w,c
  2491   00164A  6E43               	movwf	??_gpio_pin_write^0,c
  2492   00164C  6A44               	clrf	(??_gpio_pin_write+1)^0,c
  2493                           
  2494                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2495                           ; Switch size 1, requested type "simple"
  2496                           ; Number of cases is 1, Range of values is 0 to 0
  2497                           ; switch strategies available:
  2498                           ; Name         Instructions Cycles
  2499                           ; simple_byte            4     3 (average)
  2500                           ;	Chosen strategy is simple_byte
  2501   00164E  5044               	movf	(??_gpio_pin_write+1)^0,w,c
  2502   001650  0A00               	xorlw	0	; case 0
  2503   001652  B4D8               	btfsc	status,2,c
  2504   001654  EF2E  F00B         	goto	l6178
  2505   001658  EFA4  F00A         	goto	l5140
  2506   00165C                     l6178:
  2507                           
  2508                           ; Switch size 1, requested type "simple"
  2509                           ; Number of cases is 2, Range of values is 0 to 1
  2510                           ; switch strategies available:
  2511                           ; Name         Instructions Cycles
  2512                           ; simple_byte            7     4 (average)
  2513                           ;	Chosen strategy is simple_byte
  2514   00165C  5043               	movf	??_gpio_pin_write^0,w,c
  2515   00165E  0A00               	xorlw	0	; case 0
  2516   001660  B4D8               	btfsc	status,2,c
  2517   001662  EFA8  F00A         	goto	l5142
  2518   001666  0A01               	xorlw	1	; case 1
  2519   001668  B4D8               	btfsc	status,2,c
  2520   00166A  EFD3  F00A         	goto	l5144
  2521   00166E  EFA4  F00A         	goto	l5140
  2522   001672                     l5152:
  2523                           
  2524                           ;MCAL_Layer/GPIO/gpio.c: 139:     return ret;
  2525   001672  5048               	movf	gpio_pin_write@ret^0,w,c
  2526   001674  0012               	return		;funcret
  2527   001676                     __end_of_gpio_pin_write:
  2528                           	callstack 0
  2529                           
  2530 ;; *************** function _gpio_pin_set_direction *****************
  2531 ;; Defined at:
  2532 ;;		line 47 in file "MCAL_Layer/GPIO/gpio.c"
  2533 ;; Parameters:    Size  Location     Type
  2534 ;;  pin             1   15[COMRAM] PTR const struct .
  2535 ;;		 -> lcd1$lcd_data(4), lcd1$lcd_en(1), lcd1$lcd_rs(1), lcd1(6), 
  2536 ;;		 -> relay_init@pin(1), led_init@pin(1), dc_motor_init@pin2(1), dc_motor_init@pin1(1), 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;  ret             1   21[COMRAM] unsigned char 
  2539 ;; Return value:  Size  Location     Type
  2540 ;;                  1    wreg      unsigned char 
  2541 ;; Registers used:
  2542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2543 ;; Tracked objects:
  2544 ;;		On entry : 0/0
  2545 ;;		On exit  : 0/0
  2546 ;;		Unchanged: 0/0
  2547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2548 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2549 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2550 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2551 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2552 ;;Total ram usage:        7 bytes
  2553 ;; Hardware stack levels used: 1
  2554 ;; Hardware stack levels required when called: 5
  2555 ;; This function calls:
  2556 ;;		Nothing
  2557 ;; This function is called by:
  2558 ;;		_gpio_pin_initialize
  2559 ;;		_button_init
  2560 ;;		_keypad_init
  2561 ;;		_Interrupt_RBx_Init
  2562 ;;		_Interrupt_INTx_Pin_Init
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text13
  2567   0017AA                     __ptext13:
  2568                           	callstack 0
  2569   0017AA                     _gpio_pin_set_direction:
  2570                           	callstack 23
  2571   0017AA                     
  2572                           ;MCAL_Layer/GPIO/gpio.c: 47: Std_ReturnType gpio_pin_set_direction(const pin_config_t *p
      +                          in);MCAL_Layer/GPIO/gpio.c: 48: {;MCAL_Layer/GPIO/gpio.c: 49:     Std_ReturnType ret = 0
      +                          x01;
  2573   0017AA  0E01               	movlw	1
  2574   0017AC  6E47               	movwf	gpio_pin_set_direction@ret^0,c
  2575                           
  2576                           ;MCAL_Layer/GPIO/gpio.c: 51:     if(((void*)0) == pin || pin->pin_num > 8 - 1)
  2577   0017AE  5041               	movf	gpio_pin_set_direction@pin^0,w,c
  2578   0017B0  B4D8               	btfsc	status,2,c
  2579   0017B2  EFDD  F00B         	goto	u5041
  2580   0017B6  EFDF  F00B         	goto	u5040
  2581   0017BA                     u5041:
  2582   0017BA  EFEF  F00B         	goto	l5344
  2583   0017BE                     u5040:
  2584   0017BE  5041               	movf	gpio_pin_set_direction@pin^0,w,c
  2585   0017C0  6ED9               	movwf	fsr2l,c
  2586   0017C2  6ADA               	clrf	fsr2h,c
  2587   0017C4  30DF               	rrcf	223,w,c
  2588   0017C6  32E8               	rrcf	wreg,f,c
  2589   0017C8  32E8               	rrcf	wreg,f,c
  2590   0017CA  0B07               	andlw	7
  2591   0017CC  6E42               	movwf	??_gpio_pin_set_direction^0,c
  2592   0017CE  0E07               	movlw	7
  2593   0017D0  6442               	cpfsgt	??_gpio_pin_set_direction^0,c
  2594   0017D2  EFED  F00B         	goto	u5051
  2595   0017D6  EFEF  F00B         	goto	u5050
  2596   0017DA                     u5051:
  2597   0017DA  EF46  F00C         	goto	l5354
  2598   0017DE                     u5050:
  2599   0017DE                     l5344:
  2600                           
  2601                           ;MCAL_Layer/GPIO/gpio.c: 52:     {;MCAL_Layer/GPIO/gpio.c: 53:         ret = 0x00;
  2602   0017DE  0E00               	movlw	0
  2603   0017E0  6E47               	movwf	gpio_pin_set_direction@ret^0,c
  2604                           
  2605                           ;MCAL_Layer/GPIO/gpio.c: 54:     }
  2606   0017E2  EF5C  F00C         	goto	l5356
  2607   0017E6                     l5346:
  2608                           
  2609                           ;MCAL_Layer/GPIO/gpio.c: 60:             (*tris_registers[pin->port] |= ((uint8)1 << pin
      +                          ->pin_num));
  2610   0017E6  5041               	movf	gpio_pin_set_direction@pin^0,w,c
  2611   0017E8  6ED9               	movwf	fsr2l,c
  2612   0017EA  6ADA               	clrf	fsr2h,c
  2613   0017EC  30DF               	rrcf	223,w,c
  2614   0017EE  32E8               	rrcf	wreg,f,c
  2615   0017F0  32E8               	rrcf	wreg,f,c
  2616   0017F2  0B07               	andlw	7
  2617   0017F4  6E42               	movwf	??_gpio_pin_set_direction^0,c
  2618   0017F6  0E01               	movlw	1
  2619   0017F8  6E43               	movwf	(??_gpio_pin_set_direction+1)^0,c
  2620   0017FA  2A42               	incf	??_gpio_pin_set_direction^0,f,c
  2621   0017FC  EF02  F00C         	goto	u5064
  2622   001800                     u5065:
  2623   001800  90D8               	bcf	status,0,c
  2624   001802  3643               	rlcf	(??_gpio_pin_set_direction+1)^0,f,c
  2625   001804                     u5064:
  2626   001804  2E42               	decfsz	??_gpio_pin_set_direction^0,f,c
  2627   001806  EF00  F00C         	goto	u5065
  2628   00180A  5041               	movf	gpio_pin_set_direction@pin^0,w,c
  2629   00180C  6ED9               	movwf	fsr2l,c
  2630   00180E  6ADA               	clrf	fsr2h,c
  2631   001810  50DF               	movf	223,w,c
  2632   001812  0B07               	andlw	7
  2633   001814  0D02               	mullw	2
  2634   001816  50F3               	movf	243,w,c
  2635   001818  0F94               	addlw	low _tris_registers
  2636   00181A  6ED9               	movwf	fsr2l,c
  2637   00181C  6ADA               	clrf	fsr2h,c
  2638   00181E  CFDE F044          	movff	postinc2,??_gpio_pin_set_direction+2
  2639   001822  CFDD F045          	movff	postdec2,??_gpio_pin_set_direction+3
  2640   001826  C044  FFD9         	movff	??_gpio_pin_set_direction+2,fsr2l
  2641   00182A  C045  FFDA         	movff	??_gpio_pin_set_direction+3,fsr2h
  2642   00182E  5043               	movf	(??_gpio_pin_set_direction+1)^0,w,c
  2643   001830  12DF               	iorwf	indf2,f,c
  2644                           
  2645                           ;MCAL_Layer/GPIO/gpio.c: 61:             break;
  2646   001832  EF5C  F00C         	goto	l5356
  2647   001836                     l5348:
  2648                           
  2649                           ;MCAL_Layer/GPIO/gpio.c: 63:             (*tris_registers[pin->port] &= (~((uint8)1 << p
      +                          in->pin_num)));
  2650   001836  5041               	movf	gpio_pin_set_direction@pin^0,w,c
  2651   001838  6ED9               	movwf	fsr2l,c
  2652   00183A  6ADA               	clrf	fsr2h,c
  2653   00183C  30DF               	rrcf	223,w,c
  2654   00183E  32E8               	rrcf	wreg,f,c
  2655   001840  32E8               	rrcf	wreg,f,c
  2656   001842  0B07               	andlw	7
  2657   001844  6E42               	movwf	??_gpio_pin_set_direction^0,c
  2658   001846  0E01               	movlw	1
  2659   001848  6E43               	movwf	(??_gpio_pin_set_direction+1)^0,c
  2660   00184A  2A42               	incf	??_gpio_pin_set_direction^0,f,c
  2661   00184C  EF2A  F00C         	goto	u5074
  2662   001850                     u5075:
  2663   001850  90D8               	bcf	status,0,c
  2664   001852  3643               	rlcf	(??_gpio_pin_set_direction+1)^0,f,c
  2665   001854                     u5074:
  2666   001854  2E42               	decfsz	??_gpio_pin_set_direction^0,f,c
  2667   001856  EF28  F00C         	goto	u5075
  2668   00185A  5043               	movf	(??_gpio_pin_set_direction+1)^0,w,c
  2669   00185C  0AFF               	xorlw	255
  2670   00185E  6E44               	movwf	(??_gpio_pin_set_direction+2)^0,c
  2671   001860  5041               	movf	gpio_pin_set_direction@pin^0,w,c
  2672   001862  6ED9               	movwf	fsr2l,c
  2673   001864  6ADA               	clrf	fsr2h,c
  2674   001866  50DF               	movf	223,w,c
  2675   001868  0B07               	andlw	7
  2676   00186A  0D02               	mullw	2
  2677   00186C  50F3               	movf	243,w,c
  2678   00186E  0F94               	addlw	low _tris_registers
  2679   001870  6ED9               	movwf	fsr2l,c
  2680   001872  6ADA               	clrf	fsr2h,c
  2681   001874  CFDE F045          	movff	postinc2,??_gpio_pin_set_direction+3
  2682   001878  CFDD F046          	movff	postdec2,??_gpio_pin_set_direction+4
  2683   00187C  C045  FFD9         	movff	??_gpio_pin_set_direction+3,fsr2l
  2684   001880  C046  FFDA         	movff	??_gpio_pin_set_direction+4,fsr2h
  2685   001884  5044               	movf	(??_gpio_pin_set_direction+2)^0,w,c
  2686   001886  16DF               	andwf	indf2,f,c
  2687                           
  2688                           ;MCAL_Layer/GPIO/gpio.c: 64:             break;
  2689   001888  EF5C  F00C         	goto	l5356
  2690   00188C                     l5354:
  2691   00188C  5041               	movf	gpio_pin_set_direction@pin^0,w,c
  2692   00188E  6ED9               	movwf	fsr2l,c
  2693   001890  6ADA               	clrf	fsr2h,c
  2694   001892  BCDF               	btfsc	indf2,6,c
  2695   001894  EF4E  F00C         	goto	u5081
  2696   001898  EF51  F00C         	goto	u5080
  2697   00189C                     u5081:
  2698   00189C  0E01               	movlw	1
  2699   00189E  EF52  F00C         	goto	u5086
  2700   0018A2                     u5080:
  2701   0018A2  0E00               	movlw	0
  2702   0018A4                     u5086:
  2703                           
  2704                           ; Switch size 1, requested type "simple"
  2705                           ; Number of cases is 2, Range of values is 0 to 1
  2706                           ; switch strategies available:
  2707                           ; Name         Instructions Cycles
  2708                           ; simple_byte            7     4 (average)
  2709                           ;	Chosen strategy is simple_byte
  2710   0018A4  0A00               	xorlw	0	; case 0
  2711   0018A6  B4D8               	btfsc	status,2,c
  2712   0018A8  EF1B  F00C         	goto	l5348
  2713   0018AC  0A01               	xorlw	1	; case 1
  2714   0018AE  B4D8               	btfsc	status,2,c
  2715   0018B0  EFF3  F00B         	goto	l5346
  2716   0018B4  EFEF  F00B         	goto	l5344
  2717   0018B8                     l5356:
  2718                           
  2719                           ;MCAL_Layer/GPIO/gpio.c: 71:     return ret;
  2720   0018B8  5047               	movf	gpio_pin_set_direction@ret^0,w,c
  2721   0018BA  0012               	return		;funcret
  2722   0018BC                     __end_of_gpio_pin_set_direction:
  2723                           	callstack 0
  2724                           
  2725 ;; *************** function _convert_uint16_to_string *****************
  2726 ;; Defined at:
  2727 ;;		line 420 in file "ECU_Layer/Chr_LCD/chr_lcd.c"
  2728 ;; Parameters:    Size  Location     Type
  2729 ;;  value           2   46[COMRAM] unsigned short 
  2730 ;;  str             1   48[COMRAM] PTR unsigned char 
  2731 ;;		 -> main@buff(6), 
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;  ret             1    0        unsigned char 
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      unsigned char 
  2736 ;; Registers used:
  2737 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2743 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2747 ;;Total ram usage:        3 bytes
  2748 ;; Hardware stack levels used: 1
  2749 ;; Hardware stack levels required when called: 10
  2750 ;; This function calls:
  2751 ;;		_memset
  2752 ;;		_sprintf
  2753 ;; This function is called by:
  2754 ;;		_main
  2755 ;; This function uses a non-reentrant model
  2756 ;;
  2757                           
  2758                           	psect	text14
  2759   00242A                     __ptext14:
  2760                           	callstack 0
  2761   00242A                     _convert_uint16_to_string:
  2762                           	callstack 20
  2763   00242A                     
  2764                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 423:     if (((void*)0) == str) {
  2765   00242A  5062               	movf	convert_uint16_to_string@str^0,w,c
  2766   00242C  A4D8               	btfss	status,2,c
  2767   00242E  EF1B  F012         	goto	u5451
  2768   002432  EF1D  F012         	goto	u5450
  2769   002436                     u5451:
  2770   002436  EF1F  F012         	goto	l5656
  2771   00243A                     u5450:
  2772   00243A                     
  2773                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 425:     } else {
  2774   00243A  EF35  F012         	goto	l138
  2775   00243E                     l5656:
  2776                           
  2777                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 426:         memset(str,0,6);
  2778   00243E  C062  F041         	movff	convert_uint16_to_string@str,memset@dest
  2779   002442  0E00               	movlw	0
  2780   002444  6E43               	movwf	(memset@c+1)^0,c
  2781   002446  0E00               	movlw	0
  2782   002448  6E42               	movwf	memset@c^0,c
  2783   00244A  0E00               	movlw	0
  2784   00244C  6E45               	movwf	(memset@n+1)^0,c
  2785   00244E  0E06               	movlw	6
  2786   002450  6E44               	movwf	memset@n^0,c
  2787   002452  EC90  F013         	call	_memset	;wreg free
  2788   002456                     
  2789                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 427:         sprintf(str,"%d",value);
  2790   002456  C062  F05A         	movff	convert_uint16_to_string@str,sprintf@s
  2791   00245A  0E17               	movlw	low STR_1
  2792   00245C  6E5B               	movwf	sprintf@fmt^0,c
  2793   00245E  C060  F05C         	movff	convert_uint16_to_string@value,?_sprintf+2
  2794   002462  C061  F05D         	movff	convert_uint16_to_string@value+1,?_sprintf+3
  2795   002466  ECED  F012         	call	_sprintf	;wreg free
  2796   00246A                     l138:
  2797   00246A  0012               	return		;funcret
  2798   00246C                     __end_of_convert_uint16_to_string:
  2799                           	callstack 0
  2800                           
  2801 ;; *************** function _sprintf *****************
  2802 ;; Defined at:
  2803 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  2804 ;; Parameters:    Size  Location     Type
  2805 ;;  s               1   40[COMRAM] PTR unsigned char 
  2806 ;;		 -> main@buff(6), 
  2807 ;;  fmt             1   41[COMRAM] PTR const unsigned char 
  2808 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;  f              12    1[BANK0 ] struct _IO_FILE
  2811 ;;  ret             2    0        int 
  2812 ;;  ap              1    0[BANK0 ] PTR void [1]
  2813 ;;		 -> ?_sprintf(2), 
  2814 ;; Return value:  Size  Location     Type
  2815 ;;                  2   40[COMRAM] int 
  2816 ;; Registers used:
  2817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2818 ;; Tracked objects:
  2819 ;;		On entry : 0/0
  2820 ;;		On exit  : 0/0
  2821 ;;		Unchanged: 0/0
  2822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2823 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2824 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Totals:         6      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;Total ram usage:       19 bytes
  2828 ;; Hardware stack levels used: 1
  2829 ;; Hardware stack levels required when called: 9
  2830 ;; This function calls:
  2831 ;;		_vfprintf
  2832 ;; This function is called by:
  2833 ;;		_convert_uint16_to_string
  2834 ;;		_convert_uint8_to_string
  2835 ;;		_convert_uint32_to_string
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           	psect	text15
  2840   0025DA                     __ptext15:
  2841                           	callstack 0
  2842   0025DA                     _sprintf:
  2843                           	callstack 20
  2844   0025DA  0E5C               	movlw	low (?_sprintf+2)
  2845   0025DC  0100               	movlb	0	; () banked
  2846   0025DE  6FE3               	movwf	sprintf@ap& (0+255),b
  2847   0025E0  C05A  F0E4         	movff	sprintf@s,sprintf@f
  2848   0025E4                     
  2849                           ; BSR set to: 0
  2850   0025E4  0E00               	movlw	0
  2851   0025E6  6FE8               	movwf	(sprintf@f+4)& (0+255),b
  2852   0025E8  0E00               	movlw	0
  2853   0025EA  6FE7               	movwf	(sprintf@f+3)& (0+255),b
  2854   0025EC                     
  2855                           ; BSR set to: 0
  2856   0025EC  0E00               	movlw	0
  2857   0025EE  6FEF               	movwf	(sprintf@f+11)& (0+255),b
  2858   0025F0  0E00               	movlw	0
  2859   0025F2  6FEE               	movwf	(sprintf@f+10)& (0+255),b
  2860   0025F4                     
  2861                           ; BSR set to: 0
  2862   0025F4  0EE4               	movlw	low sprintf@f
  2863   0025F6  6E56               	movwf	vfprintf@fp^0,c
  2864   0025F8  C05B  F057         	movff	sprintf@fmt,vfprintf@fmt
  2865   0025FC  0EE3               	movlw	low sprintf@ap
  2866   0025FE  6E58               	movwf	vfprintf@ap^0,c
  2867   002600  EC57  F012         	call	_vfprintf	;wreg free
  2868   002604  505A               	movf	sprintf@s^0,w,c
  2869   002606  0100               	movlb	0	; () banked
  2870   002608  25E7               	addwf	(sprintf@f+3)& (0+255),w,b
  2871   00260A  6ED9               	movwf	fsr2l,c
  2872   00260C  6ADA               	clrf	fsr2h,c
  2873   00260E  6ADF               	clrf	indf2,c
  2874   002610                     
  2875                           ; BSR set to: 0
  2876   002610  0012               	return		;funcret
  2877   002612                     __end_of_sprintf:
  2878                           	callstack 0
  2879                           
  2880 ;; *************** function _vfprintf *****************
  2881 ;; Defined at:
  2882 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;  fp              1   36[COMRAM] PTR struct _IO_FILE
  2885 ;;		 -> sprintf@f(12), 
  2886 ;;  fmt             1   37[COMRAM] PTR const unsigned char 
  2887 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2888 ;;  ap              1   38[COMRAM] PTR PTR void 
  2889 ;;		 -> sprintf@ap(1), 
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;  cfmt            1   39[COMRAM] PTR unsigned char 
  2892 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  2   36[COMRAM] int 
  2895 ;; Registers used:
  2896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2902 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2903 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2905 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2906 ;;Total ram usage:        4 bytes
  2907 ;; Hardware stack levels used: 1
  2908 ;; Hardware stack levels required when called: 8
  2909 ;; This function calls:
  2910 ;;		_vfpfcnvrt
  2911 ;; This function is called by:
  2912 ;;		_sprintf
  2913 ;; This function uses a non-reentrant model
  2914 ;;
  2915                           
  2916                           	psect	text16
  2917   0024AE                     __ptext16:
  2918                           	callstack 0
  2919   0024AE                     _vfprintf:
  2920                           	callstack 20
  2921   0024AE                     
  2922                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2923   0024AE  C057  F059         	movff	vfprintf@fmt,vfprintf@cfmt
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2926   0024B2  EF63  F012         	goto	l5420
  2927   0024B6                     l5418:
  2928                           
  2929                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2930   0024B6  C056  F04B         	movff	vfprintf@fp,vfpfcnvrt@fp
  2931   0024BA  0E59               	movlw	low vfprintf@cfmt
  2932   0024BC  6E4C               	movwf	vfpfcnvrt@fmt^0,c
  2933   0024BE  C058  F04D         	movff	vfprintf@ap,vfpfcnvrt@ap
  2934   0024C2  ECA9  F009         	call	_vfpfcnvrt	;wreg free
  2935   0024C6                     l5420:
  2936                           
  2937                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2938   0024C6  C059  FFF6         	movff	vfprintf@cfmt,tblptrl
  2939   0024CA                     	if	1	;There is more than 1 active tblptr byte
  2940   0024CA  0E10               	movlw	high __smallconst
  2941   0024CC  6EF7               	movwf	tblptrh,c
  2942   0024CE                     	endif
  2943   0024CE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2944   0024CE  6AF8               	clrf	tblptru,c
  2945   0024D0                     	endif
  2946   0024D0                     	if	0	;tblptru may be non-zero
  2947   0024D0                     	endif
  2948   0024D0  0008               	tblrd		*
  2949   0024D2  50F5               	movf	tablat,w,c
  2950   0024D4  0900               	iorlw	0
  2951   0024D6  A4D8               	btfss	status,2,c
  2952   0024D8  EF70  F012         	goto	u5111
  2953   0024DC  EF72  F012         	goto	u5110
  2954   0024E0                     u5111:
  2955   0024E0  EF5B  F012         	goto	l5418
  2956   0024E4                     u5110:
  2957   0024E4                     
  2958                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2959   0024E4  0E00               	movlw	0
  2960   0024E6  6E57               	movwf	(?_vfprintf+1)^0,c
  2961   0024E8  0E00               	movlw	0
  2962   0024EA  6E56               	movwf	?_vfprintf^0,c
  2963   0024EC  0012               	return		;funcret
  2964   0024EE                     __end_of_vfprintf:
  2965                           	callstack 0
  2966                           
  2967 ;; *************** function _vfpfcnvrt *****************
  2968 ;; Defined at:
  2969 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;  fp              1   25[COMRAM] PTR struct _IO_FILE
  2972 ;;		 -> sprintf@f(12), 
  2973 ;;  fmt             1   26[COMRAM] PTR PTR unsigned char 
  2974 ;;		 -> vfprintf@cfmt(1), 
  2975 ;;  ap              1   27[COMRAM] PTR PTR void 
  2976 ;;		 -> sprintf@ap(1), 
  2977 ;; Auto vars:     Size  Location     Type
  2978 ;;  convarg         4   31[COMRAM] struct .
  2979 ;;  c               1   35[COMRAM] unsigned char 
  2980 ;;  cp              1   30[COMRAM] PTR unsigned char 
  2981 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2982 ;;  done            1   29[COMRAM] _Bool 
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  1    wreg      void 
  2985 ;; Registers used:
  2986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2992 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2995 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2996 ;;Total ram usage:       11 bytes
  2997 ;; Hardware stack levels used: 1
  2998 ;; Hardware stack levels required when called: 7
  2999 ;; This function calls:
  3000 ;;		___awdiv
  3001 ;;		___awmod
  3002 ;;		_abs
  3003 ;;		_fputc
  3004 ;; This function is called by:
  3005 ;;		_vfprintf
  3006 ;; This function uses a non-reentrant model
  3007 ;;
  3008                           
  3009                           	psect	text17
  3010   001352                     __ptext17:
  3011                           	callstack 0
  3012   001352                     _vfpfcnvrt:
  3013                           	callstack 20
  3014   001352                     
  3015                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3016   001352  504C               	movf	vfpfcnvrt@fmt^0,w,c
  3017   001354  6ED9               	movwf	fsr2l,c
  3018   001356  6ADA               	clrf	fsr2h,c
  3019   001358  CFDF FFF6          	movff	indf2,tblptrl
  3020   00135C                     	if	1	;There is more than 1 active tblptr byte
  3021   00135C  0E10               	movlw	high __smallconst
  3022   00135E  6EF7               	movwf	tblptrh,c
  3023   001360                     	endif
  3024   001360                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3025   001360  6AF8               	clrf	tblptru,c
  3026   001362                     	endif
  3027   001362                     	if	0	;tblptru may be non-zero
  3028   001362                     	endif
  3029   001362  0008               	tblrd		*
  3030   001364  50F5               	movf	tablat,w,c
  3031   001366  0A25               	xorlw	37
  3032   001368  A4D8               	btfss	status,2,c
  3033   00136A  EFB9  F009         	goto	u4941
  3034   00136E  EFBB  F009         	goto	u4940
  3035   001372                     u4941:
  3036   001372  EF77  F00A         	goto	l5334
  3037   001376                     u4940:
  3038   001376                     
  3039                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3040   001376  504C               	movf	vfpfcnvrt@fmt^0,w,c
  3041   001378  6ED9               	movwf	fsr2l,c
  3042   00137A  6ADA               	clrf	fsr2h,c
  3043   00137C  2ADF               	incf	indf2,f,c
  3044   00137E                     
  3045                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3046   00137E  0E00               	movlw	0
  3047   001380  0100               	movlb	0	; () banked
  3048   001382  6FDC               	movwf	(_width+1)& (0+255),b
  3049   001384  0E00               	movlw	0
  3050   001386  6FDB               	movwf	_width& (0+255),b
  3051   001388  C0DB  F021         	movff	_width,_flags
  3052   00138C                     
  3053                           ; BSR set to: 0
  3054                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3055   00138C  69DD               	setf	_prec& (0+255),b
  3056   00138E  69DE               	setf	(_prec+1)& (0+255),b
  3057   001390                     
  3058                           ; BSR set to: 0
  3059                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3060   001390  504C               	movf	vfpfcnvrt@fmt^0,w,c
  3061   001392  6ED9               	movwf	fsr2l,c
  3062   001394  6ADA               	clrf	fsr2h,c
  3063   001396  50DF               	movf	indf2,w,c
  3064   001398  6E50               	movwf	vfpfcnvrt@cp^0,c
  3065   00139A                     
  3066                           ; BSR set to: 0
  3067                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3068   00139A  C050  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3069   00139E                     	if	1	;There is more than 1 active tblptr byte
  3070   00139E  0E10               	movlw	high __smallconst
  3071   0013A0  6EF7               	movwf	tblptrh,c
  3072   0013A2                     	endif
  3073   0013A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3074   0013A2  6AF8               	clrf	tblptru,c
  3075   0013A4                     	endif
  3076   0013A4                     	if	0	;tblptru may be non-zero
  3077   0013A4                     	endif
  3078   0013A4  0008               	tblrd		*
  3079   0013A6  50F5               	movf	tablat,w,c
  3080   0013A8  0A64               	xorlw	100
  3081   0013AA  B4D8               	btfsc	status,2,c
  3082   0013AC  EFDA  F009         	goto	u4951
  3083   0013B0  EFDC  F009         	goto	u4950
  3084   0013B4                     u4951:
  3085   0013B4  EFEB  F009         	goto	l5304
  3086   0013B8                     u4950:
  3087   0013B8                     
  3088                           ; BSR set to: 0
  3089   0013B8  C050  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3090   0013BC                     	if	1	;There is more than 1 active tblptr byte
  3091   0013BC  0E10               	movlw	high __smallconst
  3092   0013BE  6EF7               	movwf	tblptrh,c
  3093   0013C0                     	endif
  3094   0013C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3095   0013C0  6AF8               	clrf	tblptru,c
  3096   0013C2                     	endif
  3097   0013C2                     	if	0	;tblptru may be non-zero
  3098   0013C2                     	endif
  3099   0013C2  0008               	tblrd		*
  3100   0013C4  50F5               	movf	tablat,w,c
  3101   0013C6  0A69               	xorlw	105
  3102   0013C8  A4D8               	btfss	status,2,c
  3103   0013CA  EFE9  F009         	goto	u4961
  3104   0013CE  EFEB  F009         	goto	u4960
  3105   0013D2                     u4961:
  3106   0013D2  EF71  F00A         	goto	l5330
  3107   0013D6                     u4960:
  3108   0013D6                     l5304:
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3112   0013D6  504D               	movf	vfpfcnvrt@ap^0,w,c
  3113   0013D8  6ED9               	movwf	fsr2l,c
  3114   0013DA  6ADA               	clrf	fsr2h,c
  3115   0013DC  0E02               	movlw	2
  3116   0013DE  26DF               	addwf	indf2,f,c
  3117   0013E0  5CDF               	subwf	indf2,w,c
  3118   0013E2  6ED9               	movwf	fsr2l,c
  3119   0013E4  6ADA               	clrf	fsr2h,c
  3120   0013E6  CFDE F051          	movff	postinc2,vfpfcnvrt@convarg
  3121   0013EA  CFDE F052          	movff	postinc2,vfpfcnvrt@convarg+1
  3122   0013EE                     
  3123                           ; BSR set to: 0
  3124                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3125   0013EE  504C               	movf	vfpfcnvrt@fmt^0,w,c
  3126   0013F0  6ED9               	movwf	fsr2l,c
  3127   0013F2  6ADA               	clrf	fsr2h,c
  3128   0013F4  2850               	incf	vfpfcnvrt@cp^0,w,c
  3129   0013F6  6EDF               	movwf	indf2,c
  3130   0013F8                     
  3131                           ; BSR set to: 0
  3132                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3133   0013F8  0E20               	movlw	32
  3134   0013FA  6E55               	movwf	vfpfcnvrt@c^0,c
  3135                           
  3136                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3137   0013FC  BE52               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  3138   0013FE  EF03  F00A         	goto	u4971
  3139   001402  EF06  F00A         	goto	u4970
  3140   001406                     u4971:
  3141   001406  0E01               	movlw	1
  3142   001408  EF07  F00A         	goto	u4980
  3143   00140C                     u4970:
  3144   00140C  0E00               	movlw	0
  3145   00140E                     u4980:
  3146   00140E  6E4F               	movwf	vfpfcnvrt@done^0,c
  3147   001410                     l5310:
  3148                           
  3149                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3150   001410  0655               	decf	vfpfcnvrt@c^0,f,c
  3151   001412  5055               	movf	vfpfcnvrt@c^0,w,c
  3152   001414  0FB5               	addlw	low _dbuf
  3153   001416  6ED9               	movwf	fsr2l,c
  3154   001418  6ADA               	clrf	fsr2h,c
  3155   00141A  C051  F041         	movff	vfpfcnvrt@convarg,___awmod@dividend
  3156   00141E  C052  F042         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  3157   001422  0E00               	movlw	0
  3158   001424  6E44               	movwf	(___awmod@divisor+1)^0,c
  3159   001426  0E0A               	movlw	10
  3160   001428  6E43               	movwf	___awmod@divisor^0,c
  3161   00142A  ECE4  F00D         	call	___awmod	;wreg free
  3162   00142E  C041  F047         	movff	?___awmod,abs@a
  3163   001432  C042  F048         	movff	?___awmod+1,abs@a+1
  3164   001436  EC76  F013         	call	_abs	;wreg free
  3165   00143A  5047               	movf	?_abs^0,w,c
  3166   00143C  0F30               	addlw	48
  3167   00143E  6EDF               	movwf	indf2,c
  3168   001440                     
  3169                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3170   001440  C051  F041         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  3171   001444  C052  F042         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  3172   001448  0E00               	movlw	0
  3173   00144A  6E44               	movwf	(___awdiv@divisor+1)^0,c
  3174   00144C  0E0A               	movlw	10
  3175   00144E  6E43               	movwf	___awdiv@divisor^0,c
  3176   001450  ECCA  F00C         	call	___awdiv	;wreg free
  3177   001454  C041  F051         	movff	?___awdiv,vfpfcnvrt@convarg
  3178   001458  C042  F052         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  3179   00145C                     
  3180                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3181   00145C  5051               	movf	vfpfcnvrt@convarg^0,w,c
  3182   00145E  1052               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3183   001460  B4D8               	btfsc	status,2,c
  3184   001462  EF35  F00A         	goto	u4991
  3185   001466  EF37  F00A         	goto	u4990
  3186   00146A                     u4991:
  3187   00146A  EF3F  F00A         	goto	l5318
  3188   00146E                     u4990:
  3189   00146E  5055               	movf	vfpfcnvrt@c^0,w,c
  3190   001470  A4D8               	btfss	status,2,c
  3191   001472  EF3D  F00A         	goto	u5001
  3192   001476  EF3F  F00A         	goto	u5000
  3193   00147A                     u5001:
  3194   00147A  EF08  F00A         	goto	l5310
  3195   00147E                     u5000:
  3196   00147E                     l5318:
  3197                           
  3198                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3199   00147E  5055               	movf	vfpfcnvrt@c^0,w,c
  3200   001480  B4D8               	btfsc	status,2,c
  3201   001482  EF45  F00A         	goto	u5011
  3202   001486  EF47  F00A         	goto	u5010
  3203   00148A                     u5011:
  3204   00148A  EF66  F00A         	goto	l5328
  3205   00148E                     u5010:
  3206   00148E  504F               	movf	vfpfcnvrt@done^0,w,c
  3207   001490  B4D8               	btfsc	status,2,c
  3208   001492  EF4D  F00A         	goto	u5021
  3209   001496  EF4F  F00A         	goto	u5020
  3210   00149A                     u5021:
  3211   00149A  EF66  F00A         	goto	l5328
  3212   00149E                     u5020:
  3213   00149E                     
  3214                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3215   00149E  0655               	decf	vfpfcnvrt@c^0,f,c
  3216   0014A0  5055               	movf	vfpfcnvrt@c^0,w,c
  3217   0014A2  0FB5               	addlw	low _dbuf
  3218   0014A4  6ED9               	movwf	fsr2l,c
  3219   0014A6  6ADA               	clrf	fsr2h,c
  3220   0014A8  0E2D               	movlw	45
  3221   0014AA  6EDF               	movwf	indf2,c
  3222   0014AC  EF66  F00A         	goto	l5328
  3223   0014B0                     l5324:
  3224                           
  3225                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3226   0014B0  5055               	movf	vfpfcnvrt@c^0,w,c
  3227   0014B2  0FB5               	addlw	low _dbuf
  3228   0014B4  6ED9               	movwf	fsr2l,c
  3229   0014B6  6ADA               	clrf	fsr2h,c
  3230   0014B8  50DF               	movf	indf2,w,c
  3231   0014BA  6E4E               	movwf	??_vfpfcnvrt^0,c
  3232   0014BC  504E               	movf	??_vfpfcnvrt^0,w,c
  3233   0014BE  6E41               	movwf	fputc@c^0,c
  3234   0014C0  6A42               	clrf	(fputc@c+1)^0,c
  3235   0014C2  C04B  F043         	movff	vfpfcnvrt@fp,fputc@fp
  3236   0014C6  EC3C  F00E         	call	_fputc	;wreg free
  3237   0014CA  2A55               	incf	vfpfcnvrt@c^0,f,c
  3238   0014CC                     l5328:
  3239                           
  3240                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3241   0014CC  0E20               	movlw	32
  3242   0014CE  1855               	xorwf	vfpfcnvrt@c^0,w,c
  3243   0014D0  A4D8               	btfss	status,2,c
  3244   0014D2  EF6D  F00A         	goto	u5031
  3245   0014D6  EF6F  F00A         	goto	u5030
  3246   0014DA                     u5031:
  3247   0014DA  EF58  F00A         	goto	l5324
  3248   0014DE                     u5030:
  3249   0014DE  EF89  F00A         	goto	l1824
  3250   0014E2                     l5330:
  3251                           
  3252                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3253   0014E2  504C               	movf	vfpfcnvrt@fmt^0,w,c
  3254   0014E4  6ED9               	movwf	fsr2l,c
  3255   0014E6  6ADA               	clrf	fsr2h,c
  3256   0014E8  2ADF               	incf	indf2,f,c
  3257   0014EA  EF89  F00A         	goto	l1824
  3258   0014EE                     l5334:
  3259                           
  3260                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3261   0014EE  504C               	movf	vfpfcnvrt@fmt^0,w,c
  3262   0014F0  6ED9               	movwf	fsr2l,c
  3263   0014F2  6ADA               	clrf	fsr2h,c
  3264   0014F4  CFDF FFF6          	movff	indf2,tblptrl
  3265   0014F8                     	if	1	;There is more than 1 active tblptr byte
  3266   0014F8  0E10               	movlw	high __smallconst
  3267   0014FA  6EF7               	movwf	tblptrh,c
  3268   0014FC                     	endif
  3269   0014FC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3270   0014FC  6AF8               	clrf	tblptru,c
  3271   0014FE                     	endif
  3272   0014FE                     	if	0	;tblptru may be non-zero
  3273   0014FE                     	endif
  3274   0014FE  0008               	tblrd		*
  3275   001500  50F5               	movf	tablat,w,c
  3276   001502  6E41               	movwf	fputc@c^0,c
  3277   001504  6A42               	clrf	(fputc@c+1)^0,c
  3278   001506  C04B  F043         	movff	vfpfcnvrt@fp,fputc@fp
  3279   00150A  EC3C  F00E         	call	_fputc	;wreg free
  3280   00150E  EF71  F00A         	goto	l5330
  3281   001512                     l1824:
  3282   001512  0012               	return		;funcret
  3283   001514                     __end_of_vfpfcnvrt:
  3284                           	callstack 0
  3285                           
  3286 ;; *************** function _fputc *****************
  3287 ;; Defined at:
  3288 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  c               2   15[COMRAM] int 
  3291 ;;  fp              1   17[COMRAM] PTR struct _IO_FILE
  3292 ;;		 -> sprintf@f(12), 
  3293 ;; Auto vars:     Size  Location     Type
  3294 ;;		None
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  2   15[COMRAM] int 
  3297 ;; Registers used:
  3298 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3304 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3306 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3307 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3308 ;;Total ram usage:        8 bytes
  3309 ;; Hardware stack levels used: 1
  3310 ;; Hardware stack levels required when called: 6
  3311 ;; This function calls:
  3312 ;;		_putch
  3313 ;; This function is called by:
  3314 ;;		_vfpfcnvrt
  3315 ;; This function uses a non-reentrant model
  3316 ;;
  3317                           
  3318                           	psect	text18
  3319   001C78                     __ptext18:
  3320                           	callstack 0
  3321   001C78                     _fputc:
  3322                           	callstack 20
  3323   001C78  5043               	movf	fputc@fp^0,w,c
  3324   001C7A  B4D8               	btfsc	status,2,c
  3325   001C7C  EF42  F00E         	goto	u4851
  3326   001C80  EF44  F00E         	goto	u4850
  3327   001C84                     u4851:
  3328   001C84  EF4C  F00E         	goto	l5244
  3329   001C88                     u4850:
  3330   001C88  5043               	movf	fputc@fp^0,w,c
  3331   001C8A  A4D8               	btfss	status,2,c
  3332   001C8C  EF4A  F00E         	goto	u4861
  3333   001C90  EF4C  F00E         	goto	u4860
  3334   001C94                     u4861:
  3335   001C94  EF51  F00E         	goto	l5246
  3336   001C98                     u4860:
  3337   001C98                     l5244:
  3338   001C98  5041               	movf	fputc@c^0,w,c
  3339   001C9A  EC0A  F014         	call	_putch
  3340   001C9E  EF90  F00E         	goto	l1849
  3341   001CA2                     l5246:
  3342   001CA2  5043               	movf	fputc@fp^0,w,c
  3343   001CA4  6ED9               	movwf	fsr2l,c
  3344   001CA6  6ADA               	clrf	fsr2h,c
  3345   001CA8  0E0A               	movlw	10
  3346   001CAA  26D9               	addwf	fsr2l,f,c
  3347   001CAC  50DE               	movf	postinc2,w,c
  3348   001CAE  10DE               	iorwf	postinc2,w,c
  3349   001CB0  B4D8               	btfsc	status,2,c
  3350   001CB2  EF5D  F00E         	goto	u4871
  3351   001CB6  EF5F  F00E         	goto	u4870
  3352   001CBA                     u4871:
  3353   001CBA  EF78  F00E         	goto	l5250
  3354   001CBE                     u4870:
  3355   001CBE  5043               	movf	fputc@fp^0,w,c
  3356   001CC0  6ED9               	movwf	fsr2l,c
  3357   001CC2  6ADA               	clrf	fsr2h,c
  3358   001CC4  0E0A               	movlw	10
  3359   001CC6  26D9               	addwf	fsr2l,f,c
  3360   001CC8  5043               	movf	fputc@fp^0,w,c
  3361   001CCA  6EE1               	movwf	fsr1l,c
  3362   001CCC  6AE2               	clrf	fsr1h,c
  3363   001CCE  0E03               	movlw	3
  3364   001CD0  26E1               	addwf	fsr1l,f,c
  3365   001CD2  50DE               	movf	postinc2,w,c
  3366   001CD4  5CE6               	subwf	postinc1,w,c
  3367   001CD6  50E6               	movf	postinc1,w,c
  3368   001CD8  0A80               	xorlw	128
  3369   001CDA  6E48               	movwf	(??_fputc+4)^0,c
  3370   001CDC  50DE               	movf	postinc2,w,c
  3371   001CDE  0A80               	xorlw	128
  3372   001CE0  5848               	subwfb	(??_fputc+4)^0,w,c
  3373   001CE2  B0D8               	btfsc	status,0,c
  3374   001CE4  EF76  F00E         	goto	u4881
  3375   001CE8  EF78  F00E         	goto	u4880
  3376   001CEC                     u4881:
  3377   001CEC  EF90  F00E         	goto	l1849
  3378   001CF0                     u4880:
  3379   001CF0                     l5250:
  3380   001CF0  5043               	movf	fputc@fp^0,w,c
  3381   001CF2  6ED9               	movwf	fsr2l,c
  3382   001CF4  6ADA               	clrf	fsr2h,c
  3383   001CF6  0E03               	movlw	3
  3384   001CF8  26D9               	addwf	fsr2l,f,c
  3385   001CFA  50DF               	movf	indf2,w,c
  3386   001CFC  6E44               	movwf	??_fputc^0,c
  3387   001CFE  5043               	movf	fputc@fp^0,w,c
  3388   001D00  6ED9               	movwf	fsr2l,c
  3389   001D02  6ADA               	clrf	fsr2h,c
  3390   001D04  50DF               	movf	indf2,w,c
  3391   001D06  2444               	addwf	??_fputc^0,w,c
  3392   001D08  6ED9               	movwf	fsr2l,c
  3393   001D0A  6ADA               	clrf	fsr2h,c
  3394   001D0C  C041  FFDF         	movff	fputc@c,indf2
  3395   001D10  5043               	movf	fputc@fp^0,w,c
  3396   001D12  6ED9               	movwf	fsr2l,c
  3397   001D14  6ADA               	clrf	fsr2h,c
  3398   001D16  0E03               	movlw	3
  3399   001D18  26D9               	addwf	fsr2l,f,c
  3400   001D1A  2ADE               	incf	postinc2,f,c
  3401   001D1C  0E00               	movlw	0
  3402   001D1E  22DD               	addwfc	postdec2,f,c
  3403   001D20                     l1849:
  3404   001D20  0012               	return		;funcret
  3405   001D22                     __end_of_fputc:
  3406                           	callstack 0
  3407                           
  3408 ;; *************** function _putch *****************
  3409 ;; Defined at:
  3410 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  3411 ;; Parameters:    Size  Location     Type
  3412 ;;  c               1    wreg     unsigned char 
  3413 ;; Auto vars:     Size  Location     Type
  3414 ;;  c               1    0[COMRAM] unsigned char 
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg
  3419 ;; Tracked objects:
  3420 ;;		On entry : 0/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3428 ;;Total ram usage:        0 bytes
  3429 ;; Hardware stack levels used: 1
  3430 ;; Hardware stack levels required when called: 5
  3431 ;; This function calls:
  3432 ;;		Nothing
  3433 ;; This function is called by:
  3434 ;;		_fputc
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text19
  3439   002814                     __ptext19:
  3440                           	callstack 0
  3441   002814                     _putch:
  3442                           	callstack 20
  3443   002814  0012               	return		;funcret
  3444   002816                     __end_of_putch:
  3445                           	callstack 0
  3446                           
  3447 ;; *************** function _abs *****************
  3448 ;; Defined at:
  3449 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  3450 ;; Parameters:    Size  Location     Type
  3451 ;;  a               2   21[COMRAM] int 
  3452 ;; Auto vars:     Size  Location     Type
  3453 ;;		None
  3454 ;; Return value:  Size  Location     Type
  3455 ;;                  2   21[COMRAM] int 
  3456 ;; Registers used:
  3457 ;;		wreg, status,2, status,0
  3458 ;; Tracked objects:
  3459 ;;		On entry : 0/0
  3460 ;;		On exit  : 0/0
  3461 ;;		Unchanged: 0/0
  3462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3463 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3465 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3466 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3467 ;;Total ram usage:        4 bytes
  3468 ;; Hardware stack levels used: 1
  3469 ;; Hardware stack levels required when called: 5
  3470 ;; This function calls:
  3471 ;;		Nothing
  3472 ;; This function is called by:
  3473 ;;		_vfpfcnvrt
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           	psect	text20
  3478   0026EC                     __ptext20:
  3479                           	callstack 0
  3480   0026EC                     _abs:
  3481                           	callstack 21
  3482   0026EC  BE48               	btfsc	(abs@a+1)^0,7,c
  3483   0026EE  EF7B  F013         	goto	u4891
  3484   0026F2  EF7D  F013         	goto	u4890
  3485   0026F6                     u4891:
  3486   0026F6  EF83  F013         	goto	l1834
  3487   0026FA                     u4890:
  3488   0026FA  C047  F047         	movff	abs@a,?_abs
  3489   0026FE  C048  F048         	movff	abs@a+1,?_abs+1
  3490   002702  EF8F  F013         	goto	l1837
  3491   002706                     l1834:
  3492   002706  C047  F049         	movff	abs@a,??_abs
  3493   00270A  C048  F04A         	movff	abs@a+1,??_abs+1
  3494   00270E  1E49               	comf	??_abs^0,f,c
  3495   002710  1E4A               	comf	(??_abs+1)^0,f,c
  3496   002712  4A49               	infsnz	??_abs^0,f,c
  3497   002714  2A4A               	incf	(??_abs+1)^0,f,c
  3498   002716  C049  F047         	movff	??_abs,?_abs
  3499   00271A  C04A  F048         	movff	??_abs+1,?_abs+1
  3500   00271E                     l1837:
  3501   00271E  0012               	return		;funcret
  3502   002720                     __end_of_abs:
  3503                           	callstack 0
  3504                           
  3505 ;; *************** function ___awmod *****************
  3506 ;; Defined at:
  3507 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  dividend        2   15[COMRAM] int 
  3510 ;;  divisor         2   17[COMRAM] int 
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;  sign            1   20[COMRAM] unsigned char 
  3513 ;;  counter         1   19[COMRAM] unsigned char 
  3514 ;; Return value:  Size  Location     Type
  3515 ;;                  2   15[COMRAM] int 
  3516 ;; Registers used:
  3517 ;;		wreg, status,2, status,0
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3523 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3527 ;;Total ram usage:        6 bytes
  3528 ;; Hardware stack levels used: 1
  3529 ;; Hardware stack levels required when called: 5
  3530 ;; This function calls:
  3531 ;;		Nothing
  3532 ;; This function is called by:
  3533 ;;		_vfpfcnvrt
  3534 ;; This function uses a non-reentrant model
  3535 ;;
  3536                           
  3537                           	psect	text21
  3538   001BC8                     __ptext21:
  3539                           	callstack 0
  3540   001BC8                     ___awmod:
  3541                           	callstack 21
  3542   001BC8  0E00               	movlw	0
  3543   001BCA  6E46               	movwf	___awmod@sign^0,c
  3544   001BCC  BE42               	btfsc	(___awmod@dividend+1)^0,7,c
  3545   001BCE  EFED  F00D         	goto	u4790
  3546   001BD2  EFEB  F00D         	goto	u4791
  3547   001BD6                     u4791:
  3548   001BD6  EFF3  F00D         	goto	l5212
  3549   001BDA                     u4790:
  3550   001BDA  6C41               	negf	___awmod@dividend^0,c
  3551   001BDC  1E42               	comf	(___awmod@dividend+1)^0,f,c
  3552   001BDE  B0D8               	btfsc	status,0,c
  3553   001BE0  2A42               	incf	(___awmod@dividend+1)^0,f,c
  3554   001BE2  0E01               	movlw	1
  3555   001BE4  6E46               	movwf	___awmod@sign^0,c
  3556   001BE6                     l5212:
  3557   001BE6  BE44               	btfsc	(___awmod@divisor+1)^0,7,c
  3558   001BE8  EFFA  F00D         	goto	u4800
  3559   001BEC  EFF8  F00D         	goto	u4801
  3560   001BF0                     u4801:
  3561   001BF0  EFFE  F00D         	goto	l5216
  3562   001BF4                     u4800:
  3563   001BF4  6C43               	negf	___awmod@divisor^0,c
  3564   001BF6  1E44               	comf	(___awmod@divisor+1)^0,f,c
  3565   001BF8  B0D8               	btfsc	status,0,c
  3566   001BFA  2A44               	incf	(___awmod@divisor+1)^0,f,c
  3567   001BFC                     l5216:
  3568   001BFC  5043               	movf	___awmod@divisor^0,w,c
  3569   001BFE  1044               	iorwf	(___awmod@divisor+1)^0,w,c
  3570   001C00  B4D8               	btfsc	status,2,c
  3571   001C02  EF05  F00E         	goto	u4811
  3572   001C06  EF07  F00E         	goto	u4810
  3573   001C0A                     u4811:
  3574   001C0A  EF2B  F00E         	goto	l5232
  3575   001C0E                     u4810:
  3576   001C0E  0E01               	movlw	1
  3577   001C10  6E45               	movwf	___awmod@counter^0,c
  3578   001C12  EF0F  F00E         	goto	l5222
  3579   001C16                     l5220:
  3580   001C16  90D8               	bcf	status,0,c
  3581   001C18  3643               	rlcf	___awmod@divisor^0,f,c
  3582   001C1A  3644               	rlcf	(___awmod@divisor+1)^0,f,c
  3583   001C1C  2A45               	incf	___awmod@counter^0,f,c
  3584   001C1E                     l5222:
  3585   001C1E  AE44               	btfss	(___awmod@divisor+1)^0,7,c
  3586   001C20  EF14  F00E         	goto	u4821
  3587   001C24  EF16  F00E         	goto	u4820
  3588   001C28                     u4821:
  3589   001C28  EF0B  F00E         	goto	l5220
  3590   001C2C                     u4820:
  3591   001C2C                     l5224:
  3592   001C2C  5043               	movf	___awmod@divisor^0,w,c
  3593   001C2E  5C41               	subwf	___awmod@dividend^0,w,c
  3594   001C30  5044               	movf	(___awmod@divisor+1)^0,w,c
  3595   001C32  5842               	subwfb	(___awmod@dividend+1)^0,w,c
  3596   001C34  A0D8               	btfss	status,0,c
  3597   001C36  EF1F  F00E         	goto	u4831
  3598   001C3A  EF21  F00E         	goto	u4830
  3599   001C3E                     u4831:
  3600   001C3E  EF25  F00E         	goto	l5228
  3601   001C42                     u4830:
  3602   001C42  5043               	movf	___awmod@divisor^0,w,c
  3603   001C44  5E41               	subwf	___awmod@dividend^0,f,c
  3604   001C46  5044               	movf	(___awmod@divisor+1)^0,w,c
  3605   001C48  5A42               	subwfb	(___awmod@dividend+1)^0,f,c
  3606   001C4A                     l5228:
  3607   001C4A  90D8               	bcf	status,0,c
  3608   001C4C  3244               	rrcf	(___awmod@divisor+1)^0,f,c
  3609   001C4E  3243               	rrcf	___awmod@divisor^0,f,c
  3610   001C50  2E45               	decfsz	___awmod@counter^0,f,c
  3611   001C52  EF16  F00E         	goto	l5224
  3612   001C56                     l5232:
  3613   001C56  5046               	movf	___awmod@sign^0,w,c
  3614   001C58  B4D8               	btfsc	status,2,c
  3615   001C5A  EF31  F00E         	goto	u4841
  3616   001C5E  EF33  F00E         	goto	u4840
  3617   001C62                     u4841:
  3618   001C62  EF37  F00E         	goto	l5236
  3619   001C66                     u4840:
  3620   001C66  6C41               	negf	___awmod@dividend^0,c
  3621   001C68  1E42               	comf	(___awmod@dividend+1)^0,f,c
  3622   001C6A  B0D8               	btfsc	status,0,c
  3623   001C6C  2A42               	incf	(___awmod@dividend+1)^0,f,c
  3624   001C6E                     l5236:
  3625   001C6E  C041  F041         	movff	___awmod@dividend,?___awmod
  3626   001C72  C042  F042         	movff	___awmod@dividend+1,?___awmod+1
  3627   001C76  0012               	return		;funcret
  3628   001C78                     __end_of___awmod:
  3629                           	callstack 0
  3630                           
  3631 ;; *************** function ___awdiv *****************
  3632 ;; Defined at:
  3633 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;  dividend        2   15[COMRAM] int 
  3636 ;;  divisor         2   17[COMRAM] int 
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;  quotient        2   21[COMRAM] int 
  3639 ;;  sign            1   20[COMRAM] unsigned char 
  3640 ;;  counter         1   19[COMRAM] unsigned char 
  3641 ;; Return value:  Size  Location     Type
  3642 ;;                  2   15[COMRAM] int 
  3643 ;; Registers used:
  3644 ;;		wreg, status,2, status,0
  3645 ;; Tracked objects:
  3646 ;;		On entry : 0/0
  3647 ;;		On exit  : 0/0
  3648 ;;		Unchanged: 0/0
  3649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3650 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3652 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3653 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3654 ;;Total ram usage:        8 bytes
  3655 ;; Hardware stack levels used: 1
  3656 ;; Hardware stack levels required when called: 5
  3657 ;; This function calls:
  3658 ;;		Nothing
  3659 ;; This function is called by:
  3660 ;;		_vfpfcnvrt
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           	psect	text22
  3665   001994                     __ptext22:
  3666                           	callstack 0
  3667   001994                     ___awdiv:
  3668                           	callstack 21
  3669   001994  0E00               	movlw	0
  3670   001996  6E46               	movwf	___awdiv@sign^0,c
  3671   001998  BE44               	btfsc	(___awdiv@divisor+1)^0,7,c
  3672   00199A  EFD3  F00C         	goto	u4730
  3673   00199E  EFD1  F00C         	goto	u4731
  3674   0019A2                     u4731:
  3675   0019A2  EFD9  F00C         	goto	l5168
  3676   0019A6                     u4730:
  3677   0019A6  6C43               	negf	___awdiv@divisor^0,c
  3678   0019A8  1E44               	comf	(___awdiv@divisor+1)^0,f,c
  3679   0019AA  B0D8               	btfsc	status,0,c
  3680   0019AC  2A44               	incf	(___awdiv@divisor+1)^0,f,c
  3681   0019AE  0E01               	movlw	1
  3682   0019B0  6E46               	movwf	___awdiv@sign^0,c
  3683   0019B2                     l5168:
  3684   0019B2  BE42               	btfsc	(___awdiv@dividend+1)^0,7,c
  3685   0019B4  EFE0  F00C         	goto	u4740
  3686   0019B8  EFDE  F00C         	goto	u4741
  3687   0019BC                     u4741:
  3688   0019BC  EFE6  F00C         	goto	l5174
  3689   0019C0                     u4740:
  3690   0019C0  6C41               	negf	___awdiv@dividend^0,c
  3691   0019C2  1E42               	comf	(___awdiv@dividend+1)^0,f,c
  3692   0019C4  B0D8               	btfsc	status,0,c
  3693   0019C6  2A42               	incf	(___awdiv@dividend+1)^0,f,c
  3694   0019C8  0E01               	movlw	1
  3695   0019CA  1A46               	xorwf	___awdiv@sign^0,f,c
  3696   0019CC                     l5174:
  3697   0019CC  0E00               	movlw	0
  3698   0019CE  6E48               	movwf	(___awdiv@quotient+1)^0,c
  3699   0019D0  0E00               	movlw	0
  3700   0019D2  6E47               	movwf	___awdiv@quotient^0,c
  3701   0019D4  5043               	movf	___awdiv@divisor^0,w,c
  3702   0019D6  1044               	iorwf	(___awdiv@divisor+1)^0,w,c
  3703   0019D8  B4D8               	btfsc	status,2,c
  3704   0019DA  EFF1  F00C         	goto	u4751
  3705   0019DE  EFF3  F00C         	goto	u4750
  3706   0019E2                     u4751:
  3707   0019E2  EF1B  F00D         	goto	l5196
  3708   0019E6                     u4750:
  3709   0019E6  0E01               	movlw	1
  3710   0019E8  6E45               	movwf	___awdiv@counter^0,c
  3711   0019EA  EFFB  F00C         	goto	l5182
  3712   0019EE                     l5180:
  3713   0019EE  90D8               	bcf	status,0,c
  3714   0019F0  3643               	rlcf	___awdiv@divisor^0,f,c
  3715   0019F2  3644               	rlcf	(___awdiv@divisor+1)^0,f,c
  3716   0019F4  2A45               	incf	___awdiv@counter^0,f,c
  3717   0019F6                     l5182:
  3718   0019F6  AE44               	btfss	(___awdiv@divisor+1)^0,7,c
  3719   0019F8  EF00  F00D         	goto	u4761
  3720   0019FC  EF02  F00D         	goto	u4760
  3721   001A00                     u4761:
  3722   001A00  EFF7  F00C         	goto	l5180
  3723   001A04                     u4760:
  3724   001A04                     l5184:
  3725   001A04  90D8               	bcf	status,0,c
  3726   001A06  3647               	rlcf	___awdiv@quotient^0,f,c
  3727   001A08  3648               	rlcf	(___awdiv@quotient+1)^0,f,c
  3728   001A0A  5043               	movf	___awdiv@divisor^0,w,c
  3729   001A0C  5C41               	subwf	___awdiv@dividend^0,w,c
  3730   001A0E  5044               	movf	(___awdiv@divisor+1)^0,w,c
  3731   001A10  5842               	subwfb	(___awdiv@dividend+1)^0,w,c
  3732   001A12  A0D8               	btfss	status,0,c
  3733   001A14  EF0E  F00D         	goto	u4771
  3734   001A18  EF10  F00D         	goto	u4770
  3735   001A1C                     u4771:
  3736   001A1C  EF15  F00D         	goto	l5192
  3737   001A20                     u4770:
  3738   001A20  5043               	movf	___awdiv@divisor^0,w,c
  3739   001A22  5E41               	subwf	___awdiv@dividend^0,f,c
  3740   001A24  5044               	movf	(___awdiv@divisor+1)^0,w,c
  3741   001A26  5A42               	subwfb	(___awdiv@dividend+1)^0,f,c
  3742   001A28  8047               	bsf	___awdiv@quotient^0,0,c
  3743   001A2A                     l5192:
  3744   001A2A  90D8               	bcf	status,0,c
  3745   001A2C  3244               	rrcf	(___awdiv@divisor+1)^0,f,c
  3746   001A2E  3243               	rrcf	___awdiv@divisor^0,f,c
  3747   001A30  2E45               	decfsz	___awdiv@counter^0,f,c
  3748   001A32  EF02  F00D         	goto	l5184
  3749   001A36                     l5196:
  3750   001A36  5046               	movf	___awdiv@sign^0,w,c
  3751   001A38  B4D8               	btfsc	status,2,c
  3752   001A3A  EF21  F00D         	goto	u4781
  3753   001A3E  EF23  F00D         	goto	u4780
  3754   001A42                     u4781:
  3755   001A42  EF27  F00D         	goto	l5200
  3756   001A46                     u4780:
  3757   001A46  6C47               	negf	___awdiv@quotient^0,c
  3758   001A48  1E48               	comf	(___awdiv@quotient+1)^0,f,c
  3759   001A4A  B0D8               	btfsc	status,0,c
  3760   001A4C  2A48               	incf	(___awdiv@quotient+1)^0,f,c
  3761   001A4E                     l5200:
  3762   001A4E  C047  F041         	movff	___awdiv@quotient,?___awdiv
  3763   001A52  C048  F042         	movff	___awdiv@quotient+1,?___awdiv+1
  3764   001A56  0012               	return		;funcret
  3765   001A58                     __end_of___awdiv:
  3766                           	callstack 0
  3767                           
  3768 ;; *************** function _memset *****************
  3769 ;; Defined at:
  3770 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
  3771 ;; Parameters:    Size  Location     Type
  3772 ;;  dest            1   15[COMRAM] PTR void 
  3773 ;;		 -> main@buff(6), 
  3774 ;;  c               2   16[COMRAM] int 
  3775 ;;  n               2   18[COMRAM] unsigned int 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  p               1   20[COMRAM] PTR unsigned char 
  3778 ;;		 -> main@buff(6), 
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  1    wreg      PTR void 
  3781 ;; Registers used:
  3782 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3788 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3791 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3792 ;;Total ram usage:        6 bytes
  3793 ;; Hardware stack levels used: 1
  3794 ;; Hardware stack levels required when called: 5
  3795 ;; This function calls:
  3796 ;;		Nothing
  3797 ;; This function is called by:
  3798 ;;		_convert_uint16_to_string
  3799 ;;		_convert_uint8_to_string
  3800 ;;		_convert_uint32_to_string
  3801 ;; This function uses a non-reentrant model
  3802 ;;
  3803                           
  3804                           	psect	text23
  3805   002720                     __ptext23:
  3806                           	callstack 0
  3807   002720                     _memset:
  3808                           	callstack 24
  3809   002720  C041  F046         	movff	memset@dest,memset@p
  3810   002724  EF9A  F013         	goto	l5486
  3811   002728                     l5482:
  3812   002728  5046               	movf	memset@p^0,w,c
  3813   00272A  6ED9               	movwf	fsr2l,c
  3814   00272C  6ADA               	clrf	fsr2h,c
  3815   00272E  C042  FFDF         	movff	memset@c,indf2
  3816   002732  2A46               	incf	memset@p^0,f,c
  3817   002734                     l5486:
  3818   002734  0644               	decf	memset@n^0,f,c
  3819   002736  A0D8               	btfss	status,0,c
  3820   002738  0645               	decf	(memset@n+1)^0,f,c
  3821   00273A  2844               	incf	memset@n^0,w,c
  3822   00273C  E106               	bnz	u5201
  3823   00273E  2845               	incf	(memset@n+1)^0,w,c
  3824   002740  A4D8               	btfss	status,2,c
  3825   002742  EFA5  F013         	goto	u5201
  3826   002746  EFA7  F013         	goto	u5200
  3827   00274A                     u5201:
  3828   00274A  EF94  F013         	goto	l5482
  3829   00274E                     u5200:
  3830   00274E  0012               	return		;funcret
  3831   002750                     __end_of_memset:
  3832                           	callstack 0
  3833                           
  3834 ;; *************** function _Timer1_Init *****************
  3835 ;; Defined at:
  3836 ;;		line 38 in file "MCAL_Layer/Timers/timer1.c"
  3837 ;; Parameters:    Size  Location     Type
  3838 ;;  timer           1   16[COMRAM] PTR const struct .
  3839 ;;		 -> timer1_obj(6), 
  3840 ;; Auto vars:     Size  Location     Type
  3841 ;;  ret             1    0        unsigned char 
  3842 ;; Return value:  Size  Location     Type
  3843 ;;                  1    wreg      unsigned char 
  3844 ;; Registers used:
  3845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3846 ;; Tracked objects:
  3847 ;;		On entry : 0/0
  3848 ;;		On exit  : 0/0
  3849 ;;		Unchanged: 0/0
  3850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3851 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3853 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3854 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3855 ;;Total ram usage:        3 bytes
  3856 ;; Hardware stack levels used: 1
  3857 ;; Hardware stack levels required when called: 6
  3858 ;; This function calls:
  3859 ;;		_Timer1_Mode_Select
  3860 ;;		_Timer1_Osc_Config
  3861 ;;		_Timer1_RW_Mode_Select
  3862 ;; This function is called by:
  3863 ;;		_main
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           	psect	text24
  3868   001DC2                     __ptext24:
  3869                           	callstack 0
  3870   001DC2                     _Timer1_Init:
  3871                           	callstack 24
  3872   001DC2                     
  3873                           ;MCAL_Layer/Timers/timer1.c: 41:     if (((void*)0) == timer) {
  3874   001DC2  5042               	movf	Timer1_Init@timer^0,w,c
  3875   001DC4  A4D8               	btfss	status,2,c
  3876   001DC6  EFE7  F00E         	goto	u5551
  3877   001DCA  EFE9  F00E         	goto	u5550
  3878   001DCE                     u5551:
  3879   001DCE  EFEB  F00E         	goto	l944
  3880   001DD2                     u5550:
  3881   001DD2                     
  3882                           ;MCAL_Layer/Timers/timer1.c: 43:     } else {
  3883   001DD2  EF2F  F00F         	goto	l946
  3884   001DD6                     l944:
  3885                           
  3886                           ;MCAL_Layer/Timers/timer1.c: 45:         (T1CONbits.TMR1ON = 0);
  3887   001DD6  90CD               	bcf	205,0,c	;volatile
  3888   001DD8                     
  3889                           ;MCAL_Layer/Timers/timer1.c: 47:         T1CONbits.T1CKPS = timer->prescaler;
  3890   001DD8  5042               	movf	Timer1_Init@timer^0,w,c
  3891   001DDA  6ED9               	movwf	fsr2l,c
  3892   001DDC  6ADA               	clrf	fsr2h,c
  3893   001DDE  0E02               	movlw	2
  3894   001DE0  26D9               	addwf	fsr2l,f,c
  3895   001DE2  50DF               	movf	indf2,w,c
  3896   001DE4  6E43               	movwf	??_Timer1_Init^0,c
  3897   001DE6  3A43               	swapf	??_Timer1_Init^0,f,c
  3898   001DE8  50CD               	movf	205,w,c	;volatile
  3899   001DEA  1843               	xorwf	??_Timer1_Init^0,w,c
  3900   001DEC  0BCF               	andlw	-49
  3901   001DEE  1843               	xorwf	??_Timer1_Init^0,w,c
  3902   001DF0  6ECD               	movwf	205,c	;volatile
  3903   001DF2                     
  3904                           ;MCAL_Layer/Timers/timer1.c: 49:         Timer1_Mode_Select(timer);
  3905   001DF2  C042  F041         	movff	Timer1_Init@timer,Timer1_Mode_Select@timer
  3906   001DF6  EC4F  F010         	call	_Timer1_Mode_Select	;wreg free
  3907   001DFA                     
  3908                           ;MCAL_Layer/Timers/timer1.c: 51:         Timer1_RW_Mode_Select(timer);
  3909   001DFA  C042  F041         	movff	Timer1_Init@timer,Timer1_RW_Mode_Select@timer
  3910   001DFE  ECB3  F012         	call	_Timer1_RW_Mode_Select	;wreg free
  3911                           
  3912                           ;MCAL_Layer/Timers/timer1.c: 53:         TMR0H = (timer->preload >> 8);
  3913   001E02  5042               	movf	Timer1_Init@timer^0,w,c
  3914   001E04  6ED9               	movwf	fsr2l,c
  3915   001E06  6ADA               	clrf	fsr2h,c
  3916   001E08  0E03               	movlw	3
  3917   001E0A  26D9               	addwf	fsr2l,f,c
  3918   001E0C  CFDE F043          	movff	postinc2,??_Timer1_Init
  3919   001E10  CFDD F044          	movff	postdec2,??_Timer1_Init+1
  3920   001E14  C044  F043         	movff	??_Timer1_Init+1,??_Timer1_Init
  3921   001E18  6A44               	clrf	(??_Timer1_Init+1)^0,c
  3922   001E1A  5043               	movf	??_Timer1_Init^0,w,c
  3923   001E1C  6ED7               	movwf	215,c	;volatile
  3924                           
  3925                           ;MCAL_Layer/Timers/timer1.c: 54:         TMR0L = (uint8) (timer->preload);
  3926   001E1E  5042               	movf	Timer1_Init@timer^0,w,c
  3927   001E20  6ED9               	movwf	fsr2l,c
  3928   001E22  6ADA               	clrf	fsr2h,c
  3929   001E24  0E03               	movlw	3
  3930   001E26  26D9               	addwf	fsr2l,f,c
  3931   001E28  50DF               	movf	indf2,w,c
  3932   001E2A  6ED6               	movwf	214,c	;volatile
  3933                           
  3934                           ;MCAL_Layer/Timers/timer1.c: 56:         preload = timer->preload;
  3935   001E2C  5042               	movf	Timer1_Init@timer^0,w,c
  3936   001E2E  6ED9               	movwf	fsr2l,c
  3937   001E30  6ADA               	clrf	fsr2h,c
  3938   001E32  0E03               	movlw	3
  3939   001E34  26D9               	addwf	fsr2l,f,c
  3940   001E36  CFDE F003          	movff	postinc2,_preload@timer1$F2331
  3941   001E3A  CFDD F004          	movff	postdec2,_preload@timer1$F2331+1
  3942   001E3E                     
  3943                           ;MCAL_Layer/Timers/timer1.c: 58:         Timer1_Osc_Config(timer);
  3944   001E3E  C042  F041         	movff	Timer1_Init@timer,Timer1_Osc_Config@timer
  3945   001E42  ECD0  F012         	call	_Timer1_Osc_Config	;wreg free
  3946   001E46                     
  3947                           ;MCAL_Layer/Timers/timer1.c: 61:         (PIE1bits.TMR1IE = 1);
  3948   001E46  809D               	bsf	157,0,c	;volatile
  3949   001E48                     
  3950                           ;MCAL_Layer/Timers/timer1.c: 62:         (PIR1bits.TMR1IF = 0);
  3951   001E48  909E               	bcf	158,0,c	;volatile
  3952   001E4A                     
  3953                           ;MCAL_Layer/Timers/timer1.c: 63:         TIMR1_InterruptHandler = timer->TIMR1_Interrupt
      +                          Handler;
  3954   001E4A  5042               	movf	Timer1_Init@timer^0,w,c
  3955   001E4C  6ED9               	movwf	fsr2l,c
  3956   001E4E  6ADA               	clrf	fsr2h,c
  3957   001E50  CFDE F005          	movff	postinc2,_TIMR1_InterruptHandler
  3958   001E54  CFDD F006          	movff	postdec2,_TIMR1_InterruptHandler+1
  3959   001E58                     
  3960                           ;MCAL_Layer/Timers/timer1.c: 79:         (INTCONbits.GIE = 1);
  3961   001E58  8EF2               	bsf	242,7,c	;volatile
  3962   001E5A                     
  3963                           ;MCAL_Layer/Timers/timer1.c: 80:         (INTCONbits.PEIE = 1);
  3964   001E5A  8CF2               	bsf	242,6,c	;volatile
  3965   001E5C                     
  3966                           ;MCAL_Layer/Timers/timer1.c: 84:         (T1CONbits.TMR1ON = 1);
  3967   001E5C  80CD               	bsf	205,0,c	;volatile
  3968   001E5E                     l946:
  3969   001E5E  0012               	return		;funcret
  3970   001E60                     __end_of_Timer1_Init:
  3971                           	callstack 0
  3972                           
  3973 ;; *************** function _Timer1_RW_Mode_Select *****************
  3974 ;; Defined at:
  3975 ;;		line 188 in file "MCAL_Layer/Timers/timer1.c"
  3976 ;; Parameters:    Size  Location     Type
  3977 ;;  timer           1   15[COMRAM] PTR const struct .
  3978 ;;		 -> timer1_obj(6), 
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      void 
  3983 ;; Registers used:
  3984 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3990 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3993 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3994 ;;Total ram usage:        1 bytes
  3995 ;; Hardware stack levels used: 1
  3996 ;; Hardware stack levels required when called: 5
  3997 ;; This function calls:
  3998 ;;		Nothing
  3999 ;; This function is called by:
  4000 ;;		_Timer1_Init
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text25
  4005   002566                     __ptext25:
  4006                           	callstack 0
  4007   002566                     _Timer1_RW_Mode_Select:
  4008                           	callstack 24
  4009   002566                     
  4010                           ;MCAL_Layer/Timers/timer1.c: 189:     if (1 == timer->rw_mode) {
  4011   002566  5041               	movf	Timer1_RW_Mode_Select@timer^0,w,c
  4012   002568  6ED9               	movwf	fsr2l,c
  4013   00256A  6ADA               	clrf	fsr2h,c
  4014   00256C  0E05               	movlw	5
  4015   00256E  26D9               	addwf	fsr2l,f,c
  4016   002570  A6DF               	btfss	indf2,3,c
  4017   002572  EFBD  F012         	goto	u5361
  4018   002576  EFBF  F012         	goto	u5360
  4019   00257A                     u5361:
  4020   00257A  EFC2  F012         	goto	l5574
  4021   00257E                     u5360:
  4022   00257E                     
  4023                           ;MCAL_Layer/Timers/timer1.c: 190:         (T1CONbits.RD16 = 1);
  4024   00257E  8ECD               	bsf	205,7,c	;volatile
  4025                           
  4026                           ;MCAL_Layer/Timers/timer1.c: 191:     } else if (0 == timer->rw_mode) {
  4027   002580  EFCF  F012         	goto	l981
  4028   002584                     l5574:
  4029   002584  5041               	movf	Timer1_RW_Mode_Select@timer^0,w,c
  4030   002586  6ED9               	movwf	fsr2l,c
  4031   002588  6ADA               	clrf	fsr2h,c
  4032   00258A  0E05               	movlw	5
  4033   00258C  26D9               	addwf	fsr2l,f,c
  4034   00258E  B6DF               	btfsc	indf2,3,c
  4035   002590  EFCC  F012         	goto	u5371
  4036   002594  EFCE  F012         	goto	u5370
  4037   002598                     u5371:
  4038   002598  EFCF  F012         	goto	l981
  4039   00259C                     u5370:
  4040   00259C                     
  4041                           ;MCAL_Layer/Timers/timer1.c: 192:         (T1CONbits.RD16 = 0);
  4042   00259C  9ECD               	bcf	205,7,c	;volatile
  4043   00259E                     l981:
  4044   00259E  0012               	return		;funcret
  4045   0025A0                     __end_of_Timer1_RW_Mode_Select:
  4046                           	callstack 0
  4047                           
  4048 ;; *************** function _Timer1_Osc_Config *****************
  4049 ;; Defined at:
  4050 ;;		line 203 in file "MCAL_Layer/Timers/timer1.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;  timer           1   15[COMRAM] PTR const struct .
  4053 ;;		 -> timer1_obj(6), 
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1    wreg      void 
  4058 ;; Registers used:
  4059 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4065 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;Total ram usage:        1 bytes
  4070 ;; Hardware stack levels used: 1
  4071 ;; Hardware stack levels required when called: 5
  4072 ;; This function calls:
  4073 ;;		Nothing
  4074 ;; This function is called by:
  4075 ;;		_Timer1_Init
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079                           	psect	text26
  4080   0025A0                     __ptext26:
  4081                           	callstack 0
  4082   0025A0                     _Timer1_Osc_Config:
  4083                           	callstack 24
  4084   0025A0                     
  4085                           ;MCAL_Layer/Timers/timer1.c: 204:     if (1 == timer->osc_enable) {
  4086   0025A0  5041               	movf	Timer1_Osc_Config@timer^0,w,c
  4087   0025A2  6ED9               	movwf	fsr2l,c
  4088   0025A4  6ADA               	clrf	fsr2h,c
  4089   0025A6  0E05               	movlw	5
  4090   0025A8  26D9               	addwf	fsr2l,f,c
  4091   0025AA  A4DF               	btfss	indf2,2,c
  4092   0025AC  EFDA  F012         	goto	u5381
  4093   0025B0  EFDC  F012         	goto	u5380
  4094   0025B4                     u5381:
  4095   0025B4  EFDF  F012         	goto	l5582
  4096   0025B8                     u5380:
  4097   0025B8                     
  4098                           ;MCAL_Layer/Timers/timer1.c: 205:         (T1CONbits.T1OSCEN = 1);
  4099   0025B8  86CD               	bsf	205,3,c	;volatile
  4100                           
  4101                           ;MCAL_Layer/Timers/timer1.c: 206:     } else if (0 == timer->osc_enable) {
  4102   0025BA  EFEC  F012         	goto	l988
  4103   0025BE                     l5582:
  4104   0025BE  5041               	movf	Timer1_Osc_Config@timer^0,w,c
  4105   0025C0  6ED9               	movwf	fsr2l,c
  4106   0025C2  6ADA               	clrf	fsr2h,c
  4107   0025C4  0E05               	movlw	5
  4108   0025C6  26D9               	addwf	fsr2l,f,c
  4109   0025C8  B4DF               	btfsc	indf2,2,c
  4110   0025CA  EFE9  F012         	goto	u5391
  4111   0025CE  EFEB  F012         	goto	u5390
  4112   0025D2                     u5391:
  4113   0025D2  EFEC  F012         	goto	l988
  4114   0025D6                     u5390:
  4115   0025D6                     
  4116                           ;MCAL_Layer/Timers/timer1.c: 207:         (T1CONbits.T1OSCEN = 0);
  4117   0025D6  96CD               	bcf	205,3,c	;volatile
  4118   0025D8                     l988:
  4119   0025D8  0012               	return		;funcret
  4120   0025DA                     __end_of_Timer1_Osc_Config:
  4121                           	callstack 0
  4122                           
  4123 ;; *************** function _Timer1_Mode_Select *****************
  4124 ;; Defined at:
  4125 ;;		line 166 in file "MCAL_Layer/Timers/timer1.c"
  4126 ;; Parameters:    Size  Location     Type
  4127 ;;  timer           1   15[COMRAM] PTR const struct .
  4128 ;;		 -> timer1_obj(6), 
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;		None
  4131 ;; Return value:  Size  Location     Type
  4132 ;;                  1    wreg      void 
  4133 ;; Registers used:
  4134 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 0/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4140 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4143 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4144 ;;Total ram usage:        1 bytes
  4145 ;; Hardware stack levels used: 1
  4146 ;; Hardware stack levels required when called: 5
  4147 ;; This function calls:
  4148 ;;		Nothing
  4149 ;; This function is called by:
  4150 ;;		_Timer1_Init
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           	psect	text27
  4155   00209E                     __ptext27:
  4156                           	callstack 0
  4157   00209E                     _Timer1_Mode_Select:
  4158                           	callstack 24
  4159   00209E                     
  4160                           ;MCAL_Layer/Timers/timer1.c: 167:     if (0 == timer->mode) {
  4161   00209E  5041               	movf	Timer1_Mode_Select@timer^0,w,c
  4162   0020A0  6ED9               	movwf	fsr2l,c
  4163   0020A2  6ADA               	clrf	fsr2h,c
  4164   0020A4  0E05               	movlw	5
  4165   0020A6  26D9               	addwf	fsr2l,f,c
  4166   0020A8  B0DF               	btfsc	indf2,0,c
  4167   0020AA  EF59  F010         	goto	u5321
  4168   0020AE  EF5B  F010         	goto	u5320
  4169   0020B2                     u5321:
  4170   0020B2  EF5E  F010         	goto	l5558
  4171   0020B6                     u5320:
  4172   0020B6                     
  4173                           ;MCAL_Layer/Timers/timer1.c: 168:         (T1CONbits.TMR1CS = 0);
  4174   0020B6  92CD               	bcf	205,1,c	;volatile
  4175                           
  4176                           ;MCAL_Layer/Timers/timer1.c: 169:     } else if (1 == timer->mode) {
  4177   0020B8  EF89  F010         	goto	l974
  4178   0020BC                     l5558:
  4179   0020BC  5041               	movf	Timer1_Mode_Select@timer^0,w,c
  4180   0020BE  6ED9               	movwf	fsr2l,c
  4181   0020C0  6ADA               	clrf	fsr2h,c
  4182   0020C2  0E05               	movlw	5
  4183   0020C4  26D9               	addwf	fsr2l,f,c
  4184   0020C6  A0DF               	btfss	indf2,0,c
  4185   0020C8  EF68  F010         	goto	u5331
  4186   0020CC  EF6A  F010         	goto	u5330
  4187   0020D0                     u5331:
  4188   0020D0  EF89  F010         	goto	l974
  4189   0020D4                     u5330:
  4190   0020D4                     
  4191                           ;MCAL_Layer/Timers/timer1.c: 170:         (T1CONbits.TMR1CS = 1);
  4192   0020D4  82CD               	bsf	205,1,c	;volatile
  4193   0020D6                     
  4194                           ;MCAL_Layer/Timers/timer1.c: 171:         if (0 == timer->counter_sync) {
  4195   0020D6  5041               	movf	Timer1_Mode_Select@timer^0,w,c
  4196   0020D8  6ED9               	movwf	fsr2l,c
  4197   0020DA  6ADA               	clrf	fsr2h,c
  4198   0020DC  0E05               	movlw	5
  4199   0020DE  26D9               	addwf	fsr2l,f,c
  4200   0020E0  B2DF               	btfsc	indf2,1,c
  4201   0020E2  EF75  F010         	goto	u5341
  4202   0020E6  EF77  F010         	goto	u5340
  4203   0020EA                     u5341:
  4204   0020EA  EF7A  F010         	goto	l5566
  4205   0020EE                     u5340:
  4206   0020EE                     
  4207                           ;MCAL_Layer/Timers/timer1.c: 172:             (T1CONbits.T1SYNC = 0);
  4208   0020EE  94CD               	bcf	205,2,c	;volatile
  4209                           
  4210                           ;MCAL_Layer/Timers/timer1.c: 173:         } else if (1 == timer->counter_sync) {
  4211   0020F0  EF89  F010         	goto	l974
  4212   0020F4                     l5566:
  4213   0020F4  5041               	movf	Timer1_Mode_Select@timer^0,w,c
  4214   0020F6  6ED9               	movwf	fsr2l,c
  4215   0020F8  6ADA               	clrf	fsr2h,c
  4216   0020FA  0E05               	movlw	5
  4217   0020FC  26D9               	addwf	fsr2l,f,c
  4218   0020FE  A2DF               	btfss	indf2,1,c
  4219   002100  EF84  F010         	goto	u5351
  4220   002104  EF86  F010         	goto	u5350
  4221   002108                     u5351:
  4222   002108  EF89  F010         	goto	l973
  4223   00210C                     u5350:
  4224   00210C                     
  4225                           ;MCAL_Layer/Timers/timer1.c: 174:             (T1CONbits.T1SYNC = 1);
  4226   00210C  84CD               	bsf	205,2,c	;volatile
  4227                           
  4228                           ;MCAL_Layer/Timers/timer1.c: 175:         } else {
  4229   00210E  EF89  F010         	goto	l974
  4230   002112                     l973:
  4231   002112                     l974:
  4232   002112  0012               	return		;funcret
  4233   002114                     __end_of_Timer1_Mode_Select:
  4234                           	callstack 0
  4235                           
  4236 ;; *************** function _ADC_Init *****************
  4237 ;; Defined at:
  4238 ;;		line 37 in file "MCAL_Layer/ADC/adc.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;  adc             1   18[COMRAM] PTR const struct .
  4241 ;;		 -> adc1(5), 
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;  ret             1    0        unsigned char 
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  1    wreg      unsigned char 
  4246 ;; Registers used:
  4247 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4253 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;Total ram usage:        2 bytes
  4258 ;; Hardware stack levels used: 1
  4259 ;; Hardware stack levels required when called: 6
  4260 ;; This function calls:
  4261 ;;		_ADC_Input_Channel_Pin_Config
  4262 ;;		_ADC_Select_Result_Format
  4263 ;;		_ADC_Select_Volt_Ref
  4264 ;; This function is called by:
  4265 ;;		_main
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           	psect	text28
  4270   002016                     __ptext28:
  4271                           	callstack 0
  4272   002016                     _ADC_Init:
  4273                           	callstack 24
  4274   002016                     
  4275                           ;MCAL_Layer/ADC/adc.c: 40:     if (((void*)0) == adc) {
  4276   002016  5044               	movf	ADC_Init@adc^0,w,c
  4277   002018  A4D8               	btfss	status,2,c
  4278   00201A  EF11  F010         	goto	u5511
  4279   00201E  EF13  F010         	goto	u5510
  4280   002022                     u5511:
  4281   002022  EF15  F010         	goto	l306
  4282   002026                     u5510:
  4283   002026                     
  4284                           ;MCAL_Layer/ADC/adc.c: 42:     } else {
  4285   002026  EF4E  F010         	goto	l308
  4286   00202A                     l306:
  4287                           
  4288                           ;MCAL_Layer/ADC/adc.c: 44:         (ADCON0bits.ADON = 0);
  4289   00202A  90C2               	bcf	194,0,c	;volatile
  4290   00202C                     
  4291                           ;MCAL_Layer/ADC/adc.c: 46:         ADCON2bits.ACQT = adc->acq_time;
  4292   00202C  5044               	movf	ADC_Init@adc^0,w,c
  4293   00202E  6ED9               	movwf	fsr2l,c
  4294   002030  6ADA               	clrf	fsr2h,c
  4295   002032  50DF               	movf	indf2,w,c
  4296   002034  6E45               	movwf	??_ADC_Init^0,c
  4297   002036  4645               	rlncf	??_ADC_Init^0,f,c
  4298   002038  4645               	rlncf	??_ADC_Init^0,f,c
  4299   00203A  4645               	rlncf	??_ADC_Init^0,f,c
  4300   00203C  50C0               	movf	192,w,c	;volatile
  4301   00203E  1845               	xorwf	??_ADC_Init^0,w,c
  4302   002040  0BC7               	andlw	-57
  4303   002042  1845               	xorwf	??_ADC_Init^0,w,c
  4304   002044  6EC0               	movwf	192,c	;volatile
  4305                           
  4306                           ;MCAL_Layer/ADC/adc.c: 48:         ADCON2bits.ADCS = adc->clock;
  4307   002046  5044               	movf	ADC_Init@adc^0,w,c
  4308   002048  6ED9               	movwf	fsr2l,c
  4309   00204A  6ADA               	clrf	fsr2h,c
  4310   00204C  0E01               	movlw	1
  4311   00204E  26D9               	addwf	fsr2l,f,c
  4312   002050  50DF               	movf	indf2,w,c
  4313   002052  6E45               	movwf	??_ADC_Init^0,c
  4314   002054  50C0               	movf	192,w,c	;volatile
  4315   002056  1845               	xorwf	??_ADC_Init^0,w,c
  4316   002058  0BF8               	andlw	-8
  4317   00205A  1845               	xorwf	??_ADC_Init^0,w,c
  4318   00205C  6EC0               	movwf	192,c	;volatile
  4319                           
  4320                           ;MCAL_Layer/ADC/adc.c: 50:         ADCON0bits.CHS = adc->channel;
  4321   00205E  5044               	movf	ADC_Init@adc^0,w,c
  4322   002060  6ED9               	movwf	fsr2l,c
  4323   002062  6ADA               	clrf	fsr2h,c
  4324   002064  0E02               	movlw	2
  4325   002066  26D9               	addwf	fsr2l,f,c
  4326   002068  50DF               	movf	indf2,w,c
  4327   00206A  6E45               	movwf	??_ADC_Init^0,c
  4328   00206C  4645               	rlncf	??_ADC_Init^0,f,c
  4329   00206E  4645               	rlncf	??_ADC_Init^0,f,c
  4330   002070  50C2               	movf	194,w,c	;volatile
  4331   002072  1845               	xorwf	??_ADC_Init^0,w,c
  4332   002074  0BC3               	andlw	-61
  4333   002076  1845               	xorwf	??_ADC_Init^0,w,c
  4334   002078  6EC2               	movwf	194,c	;volatile
  4335   00207A                     
  4336                           ;MCAL_Layer/ADC/adc.c: 51:         ADC_Input_Channel_Pin_Config(adc->channel);
  4337   00207A  5044               	movf	ADC_Init@adc^0,w,c
  4338   00207C  6ED9               	movwf	fsr2l,c
  4339   00207E  6ADA               	clrf	fsr2h,c
  4340   002080  0E02               	movlw	2
  4341   002082  26D9               	addwf	fsr2l,f,c
  4342   002084  50DF               	movf	indf2,w,c
  4343   002086  EC5E  F00C         	call	_ADC_Input_Channel_Pin_Config
  4344   00208A                     
  4345                           ;MCAL_Layer/ADC/adc.c: 75:         ADC_Select_Result_Format(adc);
  4346   00208A  C044  F041         	movff	ADC_Init@adc,ADC_Select_Result_Format@adc
  4347   00208E  ECF3  F011         	call	_ADC_Select_Result_Format	;wreg free
  4348   002092                     
  4349                           ;MCAL_Layer/ADC/adc.c: 77:         ADC_Select_Volt_Ref(adc);
  4350   002092  C044  F041         	movff	ADC_Init@adc,ADC_Select_Volt_Ref@adc
  4351   002096  EC36  F012         	call	_ADC_Select_Volt_Ref	;wreg free
  4352   00209A                     
  4353                           ;MCAL_Layer/ADC/adc.c: 79:         (ADCON0bits.ADON = 1);
  4354   00209A  80C2               	bsf	194,0,c	;volatile
  4355   00209C                     l308:
  4356   00209C  0012               	return		;funcret
  4357   00209E                     __end_of_ADC_Init:
  4358                           	callstack 0
  4359                           
  4360 ;; *************** function _ADC_Select_Volt_Ref *****************
  4361 ;; Defined at:
  4362 ;;		line 321 in file "MCAL_Layer/ADC/adc.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;  adc             1   15[COMRAM] PTR const struct .
  4365 ;;		 -> adc1(5), 
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;		None
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1    wreg      void 
  4370 ;; Registers used:
  4371 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4372 ;; Tracked objects:
  4373 ;;		On entry : 0/0
  4374 ;;		On exit  : 0/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4377 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4380 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4381 ;;Total ram usage:        1 bytes
  4382 ;; Hardware stack levels used: 1
  4383 ;; Hardware stack levels required when called: 5
  4384 ;; This function calls:
  4385 ;;		Nothing
  4386 ;; This function is called by:
  4387 ;;		_ADC_Init
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text29
  4392   00246C                     __ptext29:
  4393                           	callstack 0
  4394   00246C                     _ADC_Select_Volt_Ref:
  4395                           	callstack 24
  4396   00246C                     
  4397                           ;MCAL_Layer/ADC/adc.c: 322:     if (0x01U == adc->volt_P_reference) {
  4398   00246C  5041               	movf	ADC_Select_Volt_Ref@adc^0,w,c
  4399   00246E  6ED9               	movwf	fsr2l,c
  4400   002470  6ADA               	clrf	fsr2h,c
  4401   002472  0E04               	movlw	4
  4402   002474  26D9               	addwf	fsr2l,f,c
  4403   002476  A0DF               	btfss	indf2,0,c
  4404   002478  EF40  F012         	goto	u5231
  4405   00247C  EF42  F012         	goto	u5230
  4406   002480                     u5231:
  4407   002480  EF45  F012         	goto	l384
  4408   002484                     u5230:
  4409   002484                     
  4410                           ;MCAL_Layer/ADC/adc.c: 323:         (ADCON1bits.VCFG0 = 1);
  4411   002484  88C1               	bsf	193,4,c	;volatile
  4412                           
  4413                           ;MCAL_Layer/ADC/adc.c: 324:     } else {
  4414   002486  EF46  F012         	goto	l5512
  4415   00248A                     l384:
  4416                           
  4417                           ;MCAL_Layer/ADC/adc.c: 325:         (ADCON1bits.VCFG0 = 0);
  4418   00248A  98C1               	bcf	193,4,c	;volatile
  4419   00248C                     l5512:
  4420                           
  4421                           ;MCAL_Layer/ADC/adc.c: 327:     if (0x01U == adc->volt_N_reference) {
  4422   00248C  5041               	movf	ADC_Select_Volt_Ref@adc^0,w,c
  4423   00248E  6ED9               	movwf	fsr2l,c
  4424   002490  6ADA               	clrf	fsr2h,c
  4425   002492  0E04               	movlw	4
  4426   002494  26D9               	addwf	fsr2l,f,c
  4427   002496  A2DF               	btfss	indf2,1,c
  4428   002498  EF50  F012         	goto	u5241
  4429   00249C  EF52  F012         	goto	u5240
  4430   0024A0                     u5241:
  4431   0024A0  EF55  F012         	goto	l386
  4432   0024A4                     u5240:
  4433   0024A4                     
  4434                           ;MCAL_Layer/ADC/adc.c: 328:         (ADCON1bits.VCFG1 = 1);
  4435   0024A4  8AC1               	bsf	193,5,c	;volatile
  4436                           
  4437                           ;MCAL_Layer/ADC/adc.c: 329:     } else {
  4438   0024A6  EF56  F012         	goto	l388
  4439   0024AA                     l386:
  4440                           
  4441                           ;MCAL_Layer/ADC/adc.c: 330:         (ADCON1bits.VCFG1 = 0);
  4442   0024AA  9AC1               	bcf	193,5,c	;volatile
  4443   0024AC                     l388:
  4444   0024AC  0012               	return		;funcret
  4445   0024AE                     __end_of_ADC_Select_Volt_Ref:
  4446                           	callstack 0
  4447                           
  4448 ;; *************** function _ADC_Select_Result_Format *****************
  4449 ;; Defined at:
  4450 ;;		line 308 in file "MCAL_Layer/ADC/adc.c"
  4451 ;; Parameters:    Size  Location     Type
  4452 ;;  adc             1   15[COMRAM] PTR const struct .
  4453 ;;		 -> adc1(5), 
  4454 ;; Auto vars:     Size  Location     Type
  4455 ;;		None
  4456 ;; Return value:  Size  Location     Type
  4457 ;;                  1    wreg      void 
  4458 ;; Registers used:
  4459 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4460 ;; Tracked objects:
  4461 ;;		On entry : 0/0
  4462 ;;		On exit  : 0/0
  4463 ;;		Unchanged: 0/0
  4464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4465 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4466 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4467 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4468 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4469 ;;Total ram usage:        2 bytes
  4470 ;; Hardware stack levels used: 1
  4471 ;; Hardware stack levels required when called: 5
  4472 ;; This function calls:
  4473 ;;		Nothing
  4474 ;; This function is called by:
  4475 ;;		_ADC_Init
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           	psect	text30
  4480   0023E6                     __ptext30:
  4481                           	callstack 0
  4482   0023E6                     _ADC_Select_Result_Format:
  4483                           	callstack 24
  4484   0023E6                     
  4485                           ;MCAL_Layer/ADC/adc.c: 309:     if (ADC_RESULT_RIGHT == adc->res_format) {
  4486   0023E6  5041               	movf	ADC_Select_Result_Format@adc^0,w,c
  4487   0023E8  6ED9               	movwf	fsr2l,c
  4488   0023EA  6ADA               	clrf	fsr2h,c
  4489   0023EC  0E03               	movlw	3
  4490   0023EE  26D9               	addwf	fsr2l,f,c
  4491   0023F0  50DF               	movf	indf2,w,c
  4492   0023F2  A4D8               	btfss	status,2,c
  4493   0023F4  EFFE  F011         	goto	u5211
  4494   0023F8  EF00  F012         	goto	u5210
  4495   0023FC                     u5211:
  4496   0023FC  EF03  F012         	goto	l5504
  4497   002400                     u5210:
  4498   002400                     
  4499                           ;MCAL_Layer/ADC/adc.c: 310:         (ADCON2bits.ADFM = 1);
  4500   002400  8EC0               	bsf	192,7,c	;volatile
  4501                           
  4502                           ;MCAL_Layer/ADC/adc.c: 311:     } else if (ADC_RESULT_LEFT == adc->res_format) {
  4503   002402  EF14  F012         	goto	l381
  4504   002406                     l5504:
  4505   002406  5041               	movf	ADC_Select_Result_Format@adc^0,w,c
  4506   002408  6ED9               	movwf	fsr2l,c
  4507   00240A  6ADA               	clrf	fsr2h,c
  4508   00240C  0E03               	movlw	3
  4509   00240E  26D9               	addwf	fsr2l,f,c
  4510   002410  04DE               	decf	postinc2,w,c
  4511   002412  A4D8               	btfss	status,2,c
  4512   002414  EF0E  F012         	goto	u5221
  4513   002418  EF10  F012         	goto	u5220
  4514   00241C                     u5221:
  4515   00241C  EF13  F012         	goto	l379
  4516   002420                     u5220:
  4517   002420                     
  4518                           ;MCAL_Layer/ADC/adc.c: 312:         (ADCON2bits.ADFM = 0);
  4519   002420  9EC0               	bcf	192,7,c	;volatile
  4520                           
  4521                           ;MCAL_Layer/ADC/adc.c: 313:     } else (ADCON2bits.ADFM = 1);
  4522   002422  EF14  F012         	goto	l381
  4523   002426                     l379:
  4524   002426  8EC0               	bsf	192,7,c	;volatile
  4525   002428                     l381:
  4526   002428  0012               	return		;funcret
  4527   00242A                     __end_of_ADC_Select_Result_Format:
  4528                           	callstack 0
  4529                           
  4530 ;; *************** function _ADC_Get_Conversion_Blocking *****************
  4531 ;; Defined at:
  4532 ;;		line 211 in file "MCAL_Layer/ADC/adc.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;  adc             1   22[COMRAM] PTR const struct .
  4535 ;;		 -> adc1(5), 
  4536 ;;  channel         1   23[COMRAM] enum E3061
  4537 ;;  adc_res         1   24[COMRAM] PTR unsigned short 
  4538 ;;		 -> main@adc_res(2), 
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;  ret             1   26[COMRAM] unsigned char 
  4541 ;;  l_conv_statu    1   25[COMRAM] unsigned char 
  4542 ;; Return value:  Size  Location     Type
  4543 ;;                  1    wreg      unsigned char 
  4544 ;; Registers used:
  4545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4546 ;; Tracked objects:
  4547 ;;		On entry : 0/0
  4548 ;;		On exit  : 0/0
  4549 ;;		Unchanged: 0/0
  4550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4551 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4552 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4554 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4555 ;;Total ram usage:        5 bytes
  4556 ;; Hardware stack levels used: 1
  4557 ;; Hardware stack levels required when called: 7
  4558 ;; This function calls:
  4559 ;;		_ADC_Get_Result
  4560 ;;		_ADC_Select_Channel
  4561 ;;		_ADC_Start
  4562 ;; This function is called by:
  4563 ;;		_main
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567                           	psect	text31
  4568   0022EE                     __ptext31:
  4569                           	callstack 0
  4570   0022EE                     _ADC_Get_Conversion_Blocking:
  4571                           	callstack 23
  4572   0022EE                     
  4573                           ;MCAL_Layer/ADC/adc.c: 214:     uint8 l_conv_status = 0;
  4574   0022EE  0E00               	movlw	0
  4575   0022F0  6E4B               	movwf	ADC_Get_Conversion_Blocking@l_conv_status^0,c
  4576                           
  4577                           ;MCAL_Layer/ADC/adc.c: 216:     if (((void*)0) == adc || ((void*)0) == adc_res) {
  4578   0022F2  5048               	movf	ADC_Get_Conversion_Blocking@adc^0,w,c
  4579   0022F4  B4D8               	btfsc	status,2,c
  4580   0022F6  EF7F  F011         	goto	u5521
  4581   0022FA  EF81  F011         	goto	u5520
  4582   0022FE                     u5521:
  4583   0022FE  EF89  F011         	goto	l5696
  4584   002302                     u5520:
  4585   002302  504A               	movf	ADC_Get_Conversion_Blocking@adc_res^0,w,c
  4586   002304  A4D8               	btfss	status,2,c
  4587   002306  EF87  F011         	goto	u5531
  4588   00230A  EF89  F011         	goto	u5530
  4589   00230E                     u5531:
  4590   00230E  EF8B  F011         	goto	l5698
  4591   002312                     u5530:
  4592   002312                     l5696:
  4593                           
  4594                           ;MCAL_Layer/ADC/adc.c: 218:     } else {
  4595   002312  EFA4  F011         	goto	l350
  4596   002316                     l5698:
  4597                           
  4598                           ;MCAL_Layer/ADC/adc.c: 220:         ret = ADC_Select_Channel(adc, channel);
  4599   002316  C048  F044         	movff	ADC_Get_Conversion_Blocking@adc,ADC_Select_Channel@adc
  4600   00231A  C049  F045         	movff	ADC_Get_Conversion_Blocking@channel,ADC_Select_Channel@channel
  4601   00231E  EC09  F013         	call	_ADC_Select_Channel	;wreg free
  4602   002322  6E4C               	movwf	ADC_Get_Conversion_Blocking@ret^0,c
  4603                           
  4604                           ;MCAL_Layer/ADC/adc.c: 222:         ret = ADC_Start(adc);
  4605   002324  C048  F041         	movff	ADC_Get_Conversion_Blocking@adc,ADC_Start@adc
  4606   002328  ECA8  F013         	call	_ADC_Start	;wreg free
  4607   00232C  6E4C               	movwf	ADC_Get_Conversion_Blocking@ret^0,c
  4608   00232E                     l347:
  4609   00232E  B2C2               	btfsc	194,1,c	;volatile
  4610   002330  EF9C  F011         	goto	u5541
  4611   002334  EF9E  F011         	goto	u5540
  4612   002338                     u5541:
  4613   002338  EF97  F011         	goto	l347
  4614   00233C                     u5540:
  4615   00233C  C048  F041         	movff	ADC_Get_Conversion_Blocking@adc,ADC_Get_Result@adc
  4616   002340  C04A  F042         	movff	ADC_Get_Conversion_Blocking@adc_res,ADC_Get_Result@adc_res
  4617   002344  EC2C  F00D         	call	_ADC_Get_Result	;wreg free
  4618   002348                     l350:
  4619   002348  0012               	return		;funcret
  4620   00234A                     __end_of_ADC_Get_Conversion_Blocking:
  4621                           	callstack 0
  4622                           
  4623 ;; *************** function _ADC_Start *****************
  4624 ;; Defined at:
  4625 ;;		line 141 in file "MCAL_Layer/ADC/adc.c"
  4626 ;; Parameters:    Size  Location     Type
  4627 ;;  adc             1   15[COMRAM] PTR const struct .
  4628 ;;		 -> adc1(5), 
  4629 ;; Auto vars:     Size  Location     Type
  4630 ;;  ret             1   16[COMRAM] unsigned char 
  4631 ;; Return value:  Size  Location     Type
  4632 ;;                  1    wreg      unsigned char 
  4633 ;; Registers used:
  4634 ;;		wreg, status,2
  4635 ;; Tracked objects:
  4636 ;;		On entry : 0/0
  4637 ;;		On exit  : 0/0
  4638 ;;		Unchanged: 0/0
  4639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4640 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4641 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4643 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4644 ;;Total ram usage:        2 bytes
  4645 ;; Hardware stack levels used: 1
  4646 ;; Hardware stack levels required when called: 5
  4647 ;; This function calls:
  4648 ;;		Nothing
  4649 ;; This function is called by:
  4650 ;;		_ADC_Get_Conversion_Blocking
  4651 ;;		_ADC_Start_Conversion_Interrupt
  4652 ;; This function uses a non-reentrant model
  4653 ;;
  4654                           
  4655                           	psect	text32
  4656   002750                     __ptext32:
  4657                           	callstack 0
  4658   002750                     _ADC_Start:
  4659                           	callstack 24
  4660   002750                     
  4661                           ;MCAL_Layer/ADC/adc.c: 142:     Std_ReturnType ret = 0x01;
  4662   002750  0E01               	movlw	1
  4663   002752  6E42               	movwf	ADC_Start@ret^0,c
  4664                           
  4665                           ;MCAL_Layer/ADC/adc.c: 144:     if (((void*)0) == adc) {
  4666   002754  5041               	movf	ADC_Start@adc^0,w,c
  4667   002756  A4D8               	btfss	status,2,c
  4668   002758  EFB0  F013         	goto	u5261
  4669   00275C  EFB2  F013         	goto	u5260
  4670   002760                     u5261:
  4671   002760  EFB6  F013         	goto	l321
  4672   002764                     u5260:
  4673   002764                     
  4674                           ;MCAL_Layer/ADC/adc.c: 145:         ret = 0x00;
  4675   002764  0E00               	movlw	0
  4676   002766  6E42               	movwf	ADC_Start@ret^0,c
  4677                           
  4678                           ;MCAL_Layer/ADC/adc.c: 146:     } else {
  4679   002768  EFB7  F013         	goto	l5532
  4680   00276C                     l321:
  4681                           
  4682                           ;MCAL_Layer/ADC/adc.c: 147:         (ADCON0bits.GODONE = 1);
  4683   00276C  82C2               	bsf	194,1,c	;volatile
  4684   00276E                     l5532:
  4685                           
  4686                           ;MCAL_Layer/ADC/adc.c: 149:     return ret;
  4687   00276E  5042               	movf	ADC_Start@ret^0,w,c
  4688   002770  0012               	return		;funcret
  4689   002772                     __end_of_ADC_Start:
  4690                           	callstack 0
  4691                           
  4692 ;; *************** function _ADC_Select_Channel *****************
  4693 ;; Defined at:
  4694 ;;		line 120 in file "MCAL_Layer/ADC/adc.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;  adc             1   18[COMRAM] PTR const struct .
  4697 ;;		 -> adc1(5), 
  4698 ;;  channel         1   19[COMRAM] enum E3061
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;  ret             1   21[COMRAM] unsigned char 
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  1    wreg      unsigned char 
  4703 ;; Registers used:
  4704 ;;		wreg, status,2, status,0, cstack
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4711 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4713 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4714 ;;Total ram usage:        4 bytes
  4715 ;; Hardware stack levels used: 1
  4716 ;; Hardware stack levels required when called: 6
  4717 ;; This function calls:
  4718 ;;		_ADC_Input_Channel_Pin_Config
  4719 ;; This function is called by:
  4720 ;;		_ADC_Get_Conversion_Blocking
  4721 ;;		_ADC_Start_Conversion_Interrupt
  4722 ;; This function uses a non-reentrant model
  4723 ;;
  4724                           
  4725                           	psect	text33
  4726   002612                     __ptext33:
  4727                           	callstack 0
  4728   002612                     _ADC_Select_Channel:
  4729                           	callstack 23
  4730   002612                     
  4731                           ;MCAL_Layer/ADC/adc.c: 121:     Std_ReturnType ret = 0x01;
  4732   002612  0E01               	movlw	1
  4733   002614  6E47               	movwf	ADC_Select_Channel@ret^0,c
  4734                           
  4735                           ;MCAL_Layer/ADC/adc.c: 123:     if (((void*)0) == adc) {
  4736   002616  5044               	movf	ADC_Select_Channel@adc^0,w,c
  4737   002618  A4D8               	btfss	status,2,c
  4738   00261A  EF11  F013         	goto	u5251
  4739   00261E  EF13  F013         	goto	u5250
  4740   002622                     u5251:
  4741   002622  EF17  F013         	goto	l5520
  4742   002626                     u5250:
  4743   002626                     
  4744                           ;MCAL_Layer/ADC/adc.c: 124:         ret = 0x00;
  4745   002626  0E00               	movlw	0
  4746   002628  6E47               	movwf	ADC_Select_Channel@ret^0,c
  4747                           
  4748                           ;MCAL_Layer/ADC/adc.c: 125:     } else {
  4749   00262A  EF23  F013         	goto	l5524
  4750   00262E                     l5520:
  4751                           
  4752                           ;MCAL_Layer/ADC/adc.c: 127:         ADCON0bits.CHS = channel;
  4753   00262E  C045  F046         	movff	ADC_Select_Channel@channel,??_ADC_Select_Channel
  4754   002632  4646               	rlncf	??_ADC_Select_Channel^0,f,c
  4755   002634  4646               	rlncf	??_ADC_Select_Channel^0,f,c
  4756   002636  50C2               	movf	194,w,c	;volatile
  4757   002638  1846               	xorwf	??_ADC_Select_Channel^0,w,c
  4758   00263A  0BC3               	andlw	-61
  4759   00263C  1846               	xorwf	??_ADC_Select_Channel^0,w,c
  4760   00263E  6EC2               	movwf	194,c	;volatile
  4761   002640                     
  4762                           ;MCAL_Layer/ADC/adc.c: 128:         ADC_Input_Channel_Pin_Config(channel);
  4763   002640  5045               	movf	ADC_Select_Channel@channel^0,w,c
  4764   002642  EC5E  F00C         	call	_ADC_Input_Channel_Pin_Config
  4765   002646                     l5524:
  4766                           
  4767                           ;MCAL_Layer/ADC/adc.c: 130:     return ret;
  4768   002646  5047               	movf	ADC_Select_Channel@ret^0,w,c
  4769   002648  0012               	return		;funcret
  4770   00264A                     __end_of_ADC_Select_Channel:
  4771                           	callstack 0
  4772                           
  4773 ;; *************** function _ADC_Input_Channel_Pin_Config *****************
  4774 ;; Defined at:
  4775 ;;		line 268 in file "MCAL_Layer/ADC/adc.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;  channel         1    wreg     enum E3061
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;  channel         1   17[COMRAM] enum E3061
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  1    wreg      void 
  4782 ;; Registers used:
  4783 ;;		wreg, status,2, status,0
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4790 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4793 ;;Total ram usage:        3 bytes
  4794 ;; Hardware stack levels used: 1
  4795 ;; Hardware stack levels required when called: 5
  4796 ;; This function calls:
  4797 ;;		Nothing
  4798 ;; This function is called by:
  4799 ;;		_ADC_Init
  4800 ;;		_ADC_Select_Channel
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           	psect	text34
  4805   0018BC                     __ptext34:
  4806                           	callstack 0
  4807   0018BC                     _ADC_Input_Channel_Pin_Config:
  4808                           	callstack 24
  4809                           
  4810                           ;incstack = 0
  4811                           ;ADC_Input_Channel_Pin_Config@channel stored from wreg
  4812   0018BC  6E43               	movwf	ADC_Input_Channel_Pin_Config@channel^0,c
  4813   0018BE                     
  4814                           ;MCAL_Layer/ADC/adc.c: 270:     switch (channel) {
  4815   0018BE  EF88  F00C         	goto	l5410
  4816   0018C2                     l5382:
  4817   0018C2  8092               	bsf	146,0,c	;volatile
  4818                           
  4819                           ;MCAL_Layer/ADC/adc.c: 272:             break;
  4820   0018C4  EFC9  F00C         	goto	l374
  4821   0018C8                     l5384:
  4822   0018C8  8292               	bsf	146,1,c	;volatile
  4823                           
  4824                           ;MCAL_Layer/ADC/adc.c: 274:             break;
  4825   0018CA  EFC9  F00C         	goto	l374
  4826   0018CE                     l5386:
  4827   0018CE  8492               	bsf	146,2,c	;volatile
  4828                           
  4829                           ;MCAL_Layer/ADC/adc.c: 276:             break;
  4830   0018D0  EFC9  F00C         	goto	l374
  4831   0018D4                     l5388:
  4832   0018D4  8692               	bsf	146,3,c	;volatile
  4833                           
  4834                           ;MCAL_Layer/ADC/adc.c: 278:             break;
  4835   0018D6  EFC9  F00C         	goto	l374
  4836   0018DA                     l5390:
  4837   0018DA  8A92               	bsf	146,5,c	;volatile
  4838                           
  4839                           ;MCAL_Layer/ADC/adc.c: 280:             break;
  4840   0018DC  EFC9  F00C         	goto	l374
  4841   0018E0                     l5392:
  4842   0018E0  8096               	bsf	150,0,c	;volatile
  4843                           
  4844                           ;MCAL_Layer/ADC/adc.c: 283:             break;
  4845   0018E2  EFC9  F00C         	goto	l374
  4846   0018E6                     l5394:
  4847   0018E6  8296               	bsf	150,1,c	;volatile
  4848                           
  4849                           ;MCAL_Layer/ADC/adc.c: 285:             break;
  4850   0018E8  EFC9  F00C         	goto	l374
  4851   0018EC                     l5396:
  4852   0018EC  8496               	bsf	150,2,c	;volatile
  4853                           
  4854                           ;MCAL_Layer/ADC/adc.c: 287:             break;
  4855   0018EE  EFC9  F00C         	goto	l374
  4856   0018F2                     l5398:
  4857   0018F2  8493               	bsf	147,2,c	;volatile
  4858                           
  4859                           ;MCAL_Layer/ADC/adc.c: 290:             break;
  4860   0018F4  EFC9  F00C         	goto	l374
  4861   0018F8                     l5400:
  4862   0018F8  8693               	bsf	147,3,c	;volatile
  4863                           
  4864                           ;MCAL_Layer/ADC/adc.c: 292:             break;
  4865   0018FA  EFC9  F00C         	goto	l374
  4866   0018FE                     l5402:
  4867   0018FE  8293               	bsf	147,1,c	;volatile
  4868                           
  4869                           ;MCAL_Layer/ADC/adc.c: 294:             break;
  4870   001900  EFC9  F00C         	goto	l374
  4871   001904                     l5404:
  4872   001904  8893               	bsf	147,4,c	;volatile
  4873                           
  4874                           ;MCAL_Layer/ADC/adc.c: 296:             break;
  4875   001906  EFC9  F00C         	goto	l374
  4876   00190A                     l5406:
  4877   00190A  8093               	bsf	147,0,c	;volatile
  4878                           
  4879                           ;MCAL_Layer/ADC/adc.c: 298:             break;
  4880   00190C  EFC9  F00C         	goto	l374
  4881   001910                     l5410:
  4882   001910  5043               	movf	ADC_Input_Channel_Pin_Config@channel^0,w,c
  4883   001912  6E41               	movwf	??_ADC_Input_Channel_Pin_Config^0,c
  4884   001914  6A42               	clrf	(??_ADC_Input_Channel_Pin_Config+1)^0,c
  4885                           
  4886                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4887                           ; Switch size 1, requested type "simple"
  4888                           ; Number of cases is 1, Range of values is 0 to 0
  4889                           ; switch strategies available:
  4890                           ; Name         Instructions Cycles
  4891                           ; simple_byte            4     3 (average)
  4892                           ;	Chosen strategy is simple_byte
  4893   001916  5042               	movf	(??_ADC_Input_Channel_Pin_Config+1)^0,w,c
  4894   001918  0A00               	xorlw	0	; case 0
  4895   00191A  B4D8               	btfsc	status,2,c
  4896   00191C  EF92  F00C         	goto	l6180
  4897   001920  EFC9  F00C         	goto	l374
  4898   001924                     l6180:
  4899                           
  4900                           ; Switch size 1, requested type "simple"
  4901                           ; Number of cases is 13, Range of values is 0 to 12
  4902                           ; switch strategies available:
  4903                           ; Name         Instructions Cycles
  4904                           ; simple_byte           40    21 (average)
  4905                           ;	Chosen strategy is simple_byte
  4906   001924  5041               	movf	??_ADC_Input_Channel_Pin_Config^0,w,c
  4907   001926  0A00               	xorlw	0	; case 0
  4908   001928  B4D8               	btfsc	status,2,c
  4909   00192A  EF61  F00C         	goto	l5382
  4910   00192E  0A01               	xorlw	1	; case 1
  4911   001930  B4D8               	btfsc	status,2,c
  4912   001932  EF64  F00C         	goto	l5384
  4913   001936  0A03               	xorlw	3	; case 2
  4914   001938  B4D8               	btfsc	status,2,c
  4915   00193A  EF67  F00C         	goto	l5386
  4916   00193E  0A01               	xorlw	1	; case 3
  4917   001940  B4D8               	btfsc	status,2,c
  4918   001942  EF6A  F00C         	goto	l5388
  4919   001946  0A07               	xorlw	7	; case 4
  4920   001948  B4D8               	btfsc	status,2,c
  4921   00194A  EF6D  F00C         	goto	l5390
  4922   00194E  0A01               	xorlw	1	; case 5
  4923   001950  B4D8               	btfsc	status,2,c
  4924   001952  EF70  F00C         	goto	l5392
  4925   001956  0A03               	xorlw	3	; case 6
  4926   001958  B4D8               	btfsc	status,2,c
  4927   00195A  EF73  F00C         	goto	l5394
  4928   00195E  0A01               	xorlw	1	; case 7
  4929   001960  B4D8               	btfsc	status,2,c
  4930   001962  EF76  F00C         	goto	l5396
  4931   001966  0A0F               	xorlw	15	; case 8
  4932   001968  B4D8               	btfsc	status,2,c
  4933   00196A  EF79  F00C         	goto	l5398
  4934   00196E  0A01               	xorlw	1	; case 9
  4935   001970  B4D8               	btfsc	status,2,c
  4936   001972  EF7C  F00C         	goto	l5400
  4937   001976  0A03               	xorlw	3	; case 10
  4938   001978  B4D8               	btfsc	status,2,c
  4939   00197A  EF7F  F00C         	goto	l5402
  4940   00197E  0A01               	xorlw	1	; case 11
  4941   001980  B4D8               	btfsc	status,2,c
  4942   001982  EF82  F00C         	goto	l5404
  4943   001986  0A07               	xorlw	7	; case 12
  4944   001988  B4D8               	btfsc	status,2,c
  4945   00198A  EF85  F00C         	goto	l5406
  4946   00198E  EFC9  F00C         	goto	l374
  4947   001992                     l374:
  4948   001992  0012               	return		;funcret
  4949   001994                     __end_of_ADC_Input_Channel_Pin_Config:
  4950                           	callstack 0
  4951                           
  4952 ;; *************** function _ADC_Get_Result *****************
  4953 ;; Defined at:
  4954 ;;		line 183 in file "MCAL_Layer/ADC/adc.c"
  4955 ;; Parameters:    Size  Location     Type
  4956 ;;  adc             1   15[COMRAM] PTR const struct .
  4957 ;;		 -> adc1(5), 
  4958 ;;  adc_res         1   16[COMRAM] PTR unsigned short 
  4959 ;;		 -> main@adc_res(2), 
  4960 ;; Auto vars:     Size  Location     Type
  4961 ;;  ret             1   20[COMRAM] unsigned char 
  4962 ;; Return value:  Size  Location     Type
  4963 ;;                  1    wreg      unsigned char 
  4964 ;; Registers used:
  4965 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4966 ;; Tracked objects:
  4967 ;;		On entry : 0/0
  4968 ;;		On exit  : 0/0
  4969 ;;		Unchanged: 0/0
  4970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4971 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4972 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4973 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4974 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4975 ;;Total ram usage:        6 bytes
  4976 ;; Hardware stack levels used: 1
  4977 ;; Hardware stack levels required when called: 5
  4978 ;; This function calls:
  4979 ;;		Nothing
  4980 ;; This function is called by:
  4981 ;;		_ADC_Get_Conversion_Blocking
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           	psect	text35
  4986   001A58                     __ptext35:
  4987                           	callstack 0
  4988   001A58                     _ADC_Get_Result:
  4989                           	callstack 24
  4990   001A58                     
  4991                           ;MCAL_Layer/ADC/adc.c: 184:     Std_ReturnType ret = 0x01;
  4992   001A58  0E01               	movlw	1
  4993   001A5A  6E46               	movwf	ADC_Get_Result@ret^0,c
  4994                           
  4995                           ;MCAL_Layer/ADC/adc.c: 186:     if (((void*)0) == adc || ((void*)0) == adc_res) {
  4996   001A5C  5041               	movf	ADC_Get_Result@adc^0,w,c
  4997   001A5E  B4D8               	btfsc	status,2,c
  4998   001A60  EF34  F00D         	goto	u5271
  4999   001A64  EF36  F00D         	goto	u5270
  5000   001A68                     u5271:
  5001   001A68  EF3E  F00D         	goto	l5540
  5002   001A6C                     u5270:
  5003   001A6C  5042               	movf	ADC_Get_Result@adc_res^0,w,c
  5004   001A6E  A4D8               	btfss	status,2,c
  5005   001A70  EF3C  F00D         	goto	u5281
  5006   001A74  EF3E  F00D         	goto	u5280
  5007   001A78                     u5281:
  5008   001A78  EF42  F00D         	goto	l5542
  5009   001A7C                     u5280:
  5010   001A7C                     l5540:
  5011                           
  5012                           ;MCAL_Layer/ADC/adc.c: 187:         ret = 0x00;
  5013   001A7C  0E00               	movlw	0
  5014   001A7E  6E46               	movwf	ADC_Get_Result@ret^0,c
  5015                           
  5016                           ;MCAL_Layer/ADC/adc.c: 188:     } else {
  5017   001A80  EF88  F00D         	goto	l5550
  5018   001A84                     l5542:
  5019                           
  5020                           ;MCAL_Layer/ADC/adc.c: 189:         if (ADC_RESULT_RIGHT == adc->res_format) {
  5021   001A84  5041               	movf	ADC_Get_Result@adc^0,w,c
  5022   001A86  6ED9               	movwf	fsr2l,c
  5023   001A88  6ADA               	clrf	fsr2h,c
  5024   001A8A  0E03               	movlw	3
  5025   001A8C  26D9               	addwf	fsr2l,f,c
  5026   001A8E  50DF               	movf	indf2,w,c
  5027   001A90  A4D8               	btfss	status,2,c
  5028   001A92  EF4D  F00D         	goto	u5291
  5029   001A96  EF4F  F00D         	goto	u5290
  5030   001A9A                     u5291:
  5031   001A9A  EF62  F00D         	goto	l5546
  5032   001A9E                     u5290:
  5033   001A9E                     
  5034                           ;MCAL_Layer/ADC/adc.c: 190:             *adc_res = (uint16) ((ADRESH << 8) + ADRESL);
  5035   001A9E  50C3               	movf	195,w,c	;volatile
  5036   001AA0  CFC4 F043          	movff	4036,??_ADC_Get_Result	;volatile
  5037   001AA4  6A44               	clrf	(??_ADC_Get_Result+1)^0,c
  5038   001AA6  C043  F044         	movff	??_ADC_Get_Result,??_ADC_Get_Result+1
  5039   001AAA  6A43               	clrf	??_ADC_Get_Result^0,c
  5040   001AAC  2643               	addwf	??_ADC_Get_Result^0,f,c
  5041   001AAE  0E00               	movlw	0
  5042   001AB0  2244               	addwfc	(??_ADC_Get_Result+1)^0,f,c
  5043   001AB2  5042               	movf	ADC_Get_Result@adc_res^0,w,c
  5044   001AB4  6ED9               	movwf	fsr2l,c
  5045   001AB6  6ADA               	clrf	fsr2h,c
  5046   001AB8  C043  FFDE         	movff	??_ADC_Get_Result,postinc2
  5047   001ABC  C044  FFDD         	movff	??_ADC_Get_Result+1,postdec2
  5048                           
  5049                           ;MCAL_Layer/ADC/adc.c: 191:         } else if (ADC_RESULT_LEFT == adc->res_format) {
  5050   001AC0  EF88  F00D         	goto	l5550
  5051   001AC4                     l5546:
  5052   001AC4  5041               	movf	ADC_Get_Result@adc^0,w,c
  5053   001AC6  6ED9               	movwf	fsr2l,c
  5054   001AC8  6ADA               	clrf	fsr2h,c
  5055   001ACA  0E03               	movlw	3
  5056   001ACC  26D9               	addwf	fsr2l,f,c
  5057   001ACE  04DE               	decf	postinc2,w,c
  5058   001AD0  A4D8               	btfss	status,2,c
  5059   001AD2  EF6D  F00D         	goto	u5301
  5060   001AD6  EF6F  F00D         	goto	u5300
  5061   001ADA                     u5301:
  5062   001ADA  EF88  F00D         	goto	l5550
  5063   001ADE                     u5300:
  5064   001ADE                     
  5065                           ;MCAL_Layer/ADC/adc.c: 192:             *adc_res = (uint16) (((ADRESH << 8) + ADRESL) >>
      +                           6);
  5066   001ADE  50C3               	movf	195,w,c	;volatile
  5067   001AE0  CFC4 F043          	movff	4036,??_ADC_Get_Result	;volatile
  5068   001AE4  6A44               	clrf	(??_ADC_Get_Result+1)^0,c
  5069   001AE6  C043  F044         	movff	??_ADC_Get_Result,??_ADC_Get_Result+1
  5070   001AEA  6A43               	clrf	??_ADC_Get_Result^0,c
  5071   001AEC  2643               	addwf	??_ADC_Get_Result^0,f,c
  5072   001AEE  0E00               	movlw	0
  5073   001AF0  2244               	addwfc	(??_ADC_Get_Result+1)^0,f,c
  5074   001AF2  0E06               	movlw	6
  5075   001AF4  6E45               	movwf	(??_ADC_Get_Result+2)^0,c
  5076   001AF6                     u5315:
  5077   001AF6  3444               	rlcf	(??_ADC_Get_Result+1)^0,w,c
  5078   001AF8  3244               	rrcf	(??_ADC_Get_Result+1)^0,f,c
  5079   001AFA  3243               	rrcf	??_ADC_Get_Result^0,f,c
  5080   001AFC  2E45               	decfsz	(??_ADC_Get_Result+2)^0,f,c
  5081   001AFE  EF7B  F00D         	goto	u5315
  5082   001B02  5042               	movf	ADC_Get_Result@adc_res^0,w,c
  5083   001B04  6ED9               	movwf	fsr2l,c
  5084   001B06  6ADA               	clrf	fsr2h,c
  5085   001B08  C043  FFDE         	movff	??_ADC_Get_Result,postinc2
  5086   001B0C  C044  FFDD         	movff	??_ADC_Get_Result+1,postdec2
  5087   001B10                     l5550:
  5088                           
  5089                           ;MCAL_Layer/ADC/adc.c: 195:     return ret;
  5090   001B10  5046               	movf	ADC_Get_Result@ret^0,w,c
  5091   001B12  0012               	return		;funcret
  5092   001B14                     __end_of_ADC_Get_Result:
  5093                           	callstack 0
  5094                           
  5095 ;; *************** function _InterruptManager *****************
  5096 ;; Defined at:
  5097 ;;		line 46 in file "MCAL_Layer/Interrupt/interrupt_manager.c"
  5098 ;; Parameters:    Size  Location     Type
  5099 ;;		None
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;		None
  5102 ;; Return value:  Size  Location     Type
  5103 ;;                  1    wreg      void 
  5104 ;; Registers used:
  5105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5113 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5114 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5115 ;;Total ram usage:        6 bytes
  5116 ;; Hardware stack levels used: 1
  5117 ;; Hardware stack levels required when called: 4
  5118 ;; This function calls:
  5119 ;;		_INT0_ISR
  5120 ;;		_INT1_ISR
  5121 ;;		_INT2_ISR
  5122 ;;		_RB4_ISR
  5123 ;;		_RB5_ISR
  5124 ;;		_RB6_ISR
  5125 ;;		_RB7_ISR
  5126 ;;		_TIMR0_ISR
  5127 ;;		_TIMR1_ISR
  5128 ;;		_TIMR2_ISR
  5129 ;;		_TIMR3_ISR
  5130 ;; This function is called by:
  5131 ;;		Interrupt level 2
  5132 ;; This function uses a non-reentrant model
  5133 ;;
  5134                           
  5135                           	psect	intcode
  5136   000008                     __pintcode:
  5137                           	callstack 0
  5138   000008                     _InterruptManager:
  5139                           	callstack 20
  5140                           
  5141                           ;incstack = 0
  5142   000008  8268               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  5143   00000A  ED0E  F008         	call	int_func,f	;refresh shadow registers
  5144                           
  5145                           	psect	intcode_body
  5146   00101C                     __pintcode_body:
  5147                           	callstack 20
  5148   00101C                     int_func:
  5149                           	callstack 20
  5150   00101C  0006               	pop		; remove dummy address from shadow register refresh
  5151   00101E  CFFA F03B          	movff	pclath,??_InterruptManager
  5152   001022  CFFB F03C          	movff	pclatu,??_InterruptManager+1
  5153   001026  CFD9 F03D          	movff	fsr2l,??_InterruptManager+2
  5154   00102A  CFDA F03E          	movff	fsr2h,??_InterruptManager+3
  5155   00102E  CFF3 F03F          	movff	prodl,??_InterruptManager+4
  5156   001032  CFF4 F040          	movff	prodh,??_InterruptManager+5
  5157   001036                     
  5158                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 49:     if(1 == INTCONbits.INT0IE && 1 == INT
      +                          CONbits.INT0IF)
  5159   001036  A8F2               	btfss	242,4,c	;volatile
  5160   001038  EF20  F008         	goto	i2u413_41
  5161   00103C  EF22  F008         	goto	i2u413_40
  5162   001040                     i2u413_41:
  5163   001040  EF2B  F008         	goto	i2l4870
  5164   001044                     i2u413_40:
  5165   001044  A2F2               	btfss	242,1,c	;volatile
  5166   001046  EF27  F008         	goto	i2u414_41
  5167   00104A  EF29  F008         	goto	i2u414_40
  5168   00104E                     i2u414_41:
  5169   00104E  EF2B  F008         	goto	i2l4870
  5170   001052                     i2u414_40:
  5171   001052                     
  5172                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 50:     {;MCAL_Layer/Interrupt/interrupt_mana
      +                          ger.c: 51:         INT0_ISR();
  5173   001052  EC08  F014         	call	_INT0_ISR	;wreg free
  5174   001056                     i2l4870:
  5175                           
  5176                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 53:     if(1 == INTCON3bits.INT1IE && 1 == IN
      +                          TCON3bits.INT1IF)
  5177   001056  A6F0               	btfss	240,3,c	;volatile
  5178   001058  EF30  F008         	goto	i2u415_41
  5179   00105C  EF32  F008         	goto	i2u415_40
  5180   001060                     i2u415_41:
  5181   001060  EF3B  F008         	goto	i2l4876
  5182   001064                     i2u415_40:
  5183   001064  A0F0               	btfss	240,0,c	;volatile
  5184   001066  EF37  F008         	goto	i2u416_41
  5185   00106A  EF39  F008         	goto	i2u416_40
  5186   00106E                     i2u416_41:
  5187   00106E  EF3B  F008         	goto	i2l4876
  5188   001072                     i2u416_40:
  5189   001072                     
  5190                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 54:     {;MCAL_Layer/Interrupt/interrupt_mana
      +                          ger.c: 55:         INT1_ISR();
  5191   001072  EC06  F014         	call	_INT1_ISR	;wreg free
  5192   001076                     i2l4876:
  5193                           
  5194                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 57:     if(1 == INTCON3bits.INT2IE && 1 == IN
      +                          TCON3bits.INT2IF)
  5195   001076  A8F0               	btfss	240,4,c	;volatile
  5196   001078  EF40  F008         	goto	i2u417_41
  5197   00107C  EF42  F008         	goto	i2u417_40
  5198   001080                     i2u417_41:
  5199   001080  EF4B  F008         	goto	i2l4882
  5200   001084                     i2u417_40:
  5201   001084  A2F0               	btfss	240,1,c	;volatile
  5202   001086  EF47  F008         	goto	i2u418_41
  5203   00108A  EF49  F008         	goto	i2u418_40
  5204   00108E                     i2u418_41:
  5205   00108E  EF4B  F008         	goto	i2l4882
  5206   001092                     i2u418_40:
  5207   001092                     
  5208                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 58:     {;MCAL_Layer/Interrupt/interrupt_mana
      +                          ger.c: 59:         INT2_ISR();
  5209   001092  EC04  F014         	call	_INT2_ISR	;wreg free
  5210   001096                     i2l4882:
  5211                           
  5212                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 65:     if(1 == INTCONbits.RBIE && 1 == INTCO
      +                          Nbits.RBIF
  5213   001096  A6F2               	btfss	242,3,c	;volatile
  5214   001098  EF50  F008         	goto	i2u419_41
  5215   00109C  EF52  F008         	goto	i2u419_40
  5216   0010A0                     i2u419_41:
  5217   0010A0  EF6D  F008         	goto	i2l4894
  5218   0010A4                     i2u419_40:
  5219   0010A4  A0F2               	btfss	242,0,c	;volatile
  5220   0010A6  EF57  F008         	goto	i2u420_41
  5221   0010AA  EF59  F008         	goto	i2u420_40
  5222   0010AE                     i2u420_41:
  5223   0010AE  EF6D  F008         	goto	i2l4894
  5224   0010B2                     i2u420_40:
  5225   0010B2  A881               	btfss	129,4,c	;volatile
  5226   0010B4  EF5E  F008         	goto	i2u421_41
  5227   0010B8  EF60  F008         	goto	i2u421_40
  5228   0010BC                     i2u421_41:
  5229   0010BC  EF6D  F008         	goto	i2l4894
  5230   0010C0                     i2u421_40:
  5231   0010C0  0466               	decf	_RB4_Flag^0,w,c	;volatile
  5232   0010C2  A4D8               	btfss	status,2,c
  5233   0010C4  EF66  F008         	goto	i2u422_41
  5234   0010C8  EF68  F008         	goto	i2u422_40
  5235   0010CC                     i2u422_41:
  5236   0010CC  EF6D  F008         	goto	i2l4894
  5237   0010D0                     i2u422_40:
  5238   0010D0                     
  5239                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 67:     {;MCAL_Layer/Interrupt/interrupt_mana
      +                          ger.c: 68:         RB4_Flag = 0;
  5240   0010D0  0E00               	movlw	0
  5241   0010D2  6E66               	movwf	_RB4_Flag^0,c	;volatile
  5242   0010D4                     
  5243                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 69:         RB4_ISR(1);
  5244   0010D4  0E01               	movlw	1
  5245   0010D6  ECE0  F013         	call	_RB4_ISR
  5246   0010DA                     i2l4894:
  5247                           
  5248                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 71:     if(1 == INTCONbits.RBIE && 1 == INTCO
      +                          Nbits.RBIF
  5249   0010DA  A6F2               	btfss	242,3,c	;volatile
  5250   0010DC  EF72  F008         	goto	i2u423_41
  5251   0010E0  EF74  F008         	goto	i2u423_40
  5252   0010E4                     i2u423_41:
  5253   0010E4  EF8F  F008         	goto	i2l4906
  5254   0010E8                     i2u423_40:
  5255   0010E8  A0F2               	btfss	242,0,c	;volatile
  5256   0010EA  EF79  F008         	goto	i2u424_41
  5257   0010EE  EF7B  F008         	goto	i2u424_40
  5258   0010F2                     i2u424_41:
  5259   0010F2  EF8F  F008         	goto	i2l4906
  5260   0010F6                     i2u424_40:
  5261   0010F6  B881               	btfsc	129,4,c	;volatile
  5262   0010F8  EF80  F008         	goto	i2u425_41
  5263   0010FC  EF82  F008         	goto	i2u425_40
  5264   001100                     i2u425_41:
  5265   001100  EF8F  F008         	goto	i2l4906
  5266   001104                     i2u425_40:
  5267   001104  5066               	movf	_RB4_Flag^0,w,c	;volatile
  5268   001106  A4D8               	btfss	status,2,c
  5269   001108  EF88  F008         	goto	i2u426_41
  5270   00110C  EF8A  F008         	goto	i2u426_40
  5271   001110                     i2u426_41:
  5272   001110  EF8F  F008         	goto	i2l4906
  5273   001114                     i2u426_40:
  5274   001114                     
  5275                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 73:     {;MCAL_Layer/Interrupt/interrupt_mana
      +                          ger.c: 74:         RB4_Flag = 1;
  5276   001114  0E01               	movlw	1
  5277   001116  6E66               	movwf	_RB4_Flag^0,c	;volatile
  5278   001118                     
  5279                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 75:         RB4_ISR(0);
  5280   001118  0E00               	movlw	0
  5281   00111A  ECE0  F013         	call	_RB4_ISR
  5282   00111E                     i2l4906:
  5283                           
  5284                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 79:     if(1 == INTCONbits.RBIE && 1 == INTCO
      +                          Nbits.RBIF
  5285   00111E  A6F2               	btfss	242,3,c	;volatile
  5286   001120  EF94  F008         	goto	i2u427_41
  5287   001124  EF96  F008         	goto	i2u427_40
  5288   001128                     i2u427_41:
  5289   001128  EFB1  F008         	goto	i2l4918
  5290   00112C                     i2u427_40:
  5291   00112C  A0F2               	btfss	242,0,c	;volatile
  5292   00112E  EF9B  F008         	goto	i2u428_41
  5293   001132  EF9D  F008         	goto	i2u428_40
  5294   001136                     i2u428_41:
  5295   001136  EFB1  F008         	goto	i2l4918
  5296   00113A                     i2u428_40:
  5297   00113A  AA81               	btfss	129,5,c	;volatile
  5298   00113C  EFA2  F008         	goto	i2u429_41
  5299   001140  EFA4  F008         	goto	i2u429_40
  5300   001144                     i2u429_41:
  5301   001144  EFB1  F008         	goto	i2l4918
  5302   001148                     i2u429_40:
  5303   001148  0465               	decf	_RB5_Flag^0,w,c	;volatile
  5304   00114A  A4D8               	btfss	status,2,c
  5305   00114C  EFAA  F008         	goto	i2u430_41
  5306   001150  EFAC  F008         	goto	i2u430_40
  5307   001154                     i2u430_41:
  5308   001154  EFB1  F008         	goto	i2l4918
  5309   001158                     i2u430_40:
  5310   001158                     
  5311                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 81:     {;MCAL_Layer/Interrupt/interrupt_mana
      +                          ger.c: 82:         RB5_Flag = 0;
  5312   001158  0E00               	movlw	0
  5313   00115A  6E65               	movwf	_RB5_Flag^0,c	;volatile
  5314   00115C                     
  5315                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 83:         RB5_ISR(1);
  5316   00115C  0E01               	movlw	1
  5317   00115E  ECD3  F013         	call	_RB5_ISR
  5318   001162                     i2l4918:
  5319                           
  5320                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 85:     if(1 == INTCONbits.RBIE && 1 == INTCO
      +                          Nbits.RBIF
  5321   001162  A6F2               	btfss	242,3,c	;volatile
  5322   001164  EFB6  F008         	goto	i2u431_41
  5323   001168  EFB8  F008         	goto	i2u431_40
  5324   00116C                     i2u431_41:
  5325   00116C  EFD3  F008         	goto	i2l4930
  5326   001170                     i2u431_40:
  5327   001170  A0F2               	btfss	242,0,c	;volatile
  5328   001172  EFBD  F008         	goto	i2u432_41
  5329   001176  EFBF  F008         	goto	i2u432_40
  5330   00117A                     i2u432_41:
  5331   00117A  EFD3  F008         	goto	i2l4930
  5332   00117E                     i2u432_40:
  5333   00117E  BA81               	btfsc	129,5,c	;volatile
  5334   001180  EFC4  F008         	goto	i2u433_41
  5335   001184  EFC6  F008         	goto	i2u433_40
  5336   001188                     i2u433_41:
  5337   001188  EFD3  F008         	goto	i2l4930
  5338   00118C                     i2u433_40:
  5339   00118C  5065               	movf	_RB5_Flag^0,w,c	;volatile
  5340   00118E  A4D8               	btfss	status,2,c
  5341   001190  EFCC  F008         	goto	i2u434_41
  5342   001194  EFCE  F008         	goto	i2u434_40
  5343   001198                     i2u434_41:
  5344   001198  EFD3  F008         	goto	i2l4930
  5345   00119C                     i2u434_40:
  5346   00119C                     
  5347                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 87:     {;MCAL_Layer/Interrupt/interrupt_mana
      +                          ger.c: 88:         RB5_Flag = 1;
  5348   00119C  0E01               	movlw	1
  5349   00119E  6E65               	movwf	_RB5_Flag^0,c	;volatile
  5350   0011A0                     
  5351                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 89:         RB5_ISR(0);
  5352   0011A0  0E00               	movlw	0
  5353   0011A2  ECD3  F013         	call	_RB5_ISR
  5354   0011A6                     i2l4930:
  5355                           
  5356                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 93:     if(1 == INTCONbits.RBIE && 1 == INTCO
      +                          Nbits.RBIF
  5357   0011A6  A6F2               	btfss	242,3,c	;volatile
  5358   0011A8  EFD8  F008         	goto	i2u435_41
  5359   0011AC  EFDA  F008         	goto	i2u435_40
  5360   0011B0                     i2u435_41:
  5361   0011B0  EFF5  F008         	goto	i2l4942
  5362   0011B4                     i2u435_40:
  5363   0011B4  A0F2               	btfss	242,0,c	;volatile
  5364   0011B6  EFDF  F008         	goto	i2u436_41
  5365   0011BA  EFE1  F008         	goto	i2u436_40
  5366   0011BE                     i2u436_41:
  5367   0011BE  EFF5  F008         	goto	i2l4942
  5368   0011C2                     i2u436_40:
  5369   0011C2  AC81               	btfss	129,6,c	;volatile
  5370   0011C4  EFE6  F008         	goto	i2u437_41
  5371   0011C8  EFE8  F008         	goto	i2u437_40
  5372   0011CC                     i2u437_41:
  5373   0011CC  EFF5  F008         	goto	i2l4942
  5374   0011D0                     i2u437_40:
  5375   0011D0  0464               	decf	_RB6_Flag^0,w,c	;volatile
  5376   0011D2  A4D8               	btfss	status,2,c
  5377   0011D4  EFEE  F008         	goto	i2u438_41
  5378   0011D8  EFF0  F008         	goto	i2u438_40
  5379   0011DC                     i2u438_41:
  5380   0011DC  EFF5  F008         	goto	i2l4942
  5381   0011E0                     i2u438_40:
  5382   0011E0                     
  5383                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 95:     {;MCAL_Layer/Interrupt/interrupt_mana
      +                          ger.c: 96:         RB6_Flag = 0;
  5384   0011E0  0E00               	movlw	0
  5385   0011E2  6E64               	movwf	_RB6_Flag^0,c	;volatile
  5386   0011E4                     
  5387                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 97:         RB6_ISR(1);
  5388   0011E4  0E01               	movlw	1
  5389   0011E6  ECC6  F013         	call	_RB6_ISR
  5390   0011EA                     i2l4942:
  5391                           
  5392                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 99:     if(1 == INTCONbits.RBIE && 1 == INTCO
      +                          Nbits.RBIF
  5393   0011EA  A6F2               	btfss	242,3,c	;volatile
  5394   0011EC  EFFA  F008         	goto	i2u439_41
  5395   0011F0  EFFC  F008         	goto	i2u439_40
  5396   0011F4                     i2u439_41:
  5397   0011F4  EF17  F009         	goto	i2l4954
  5398   0011F8                     i2u439_40:
  5399   0011F8  A0F2               	btfss	242,0,c	;volatile
  5400   0011FA  EF01  F009         	goto	i2u440_41
  5401   0011FE  EF03  F009         	goto	i2u440_40
  5402   001202                     i2u440_41:
  5403   001202  EF17  F009         	goto	i2l4954
  5404   001206                     i2u440_40:
  5405   001206  BC81               	btfsc	129,6,c	;volatile
  5406   001208  EF08  F009         	goto	i2u441_41
  5407   00120C  EF0A  F009         	goto	i2u441_40
  5408   001210                     i2u441_41:
  5409   001210  EF17  F009         	goto	i2l4954
  5410   001214                     i2u441_40:
  5411   001214  5064               	movf	_RB6_Flag^0,w,c	;volatile
  5412   001216  A4D8               	btfss	status,2,c
  5413   001218  EF10  F009         	goto	i2u442_41
  5414   00121C  EF12  F009         	goto	i2u442_40
  5415   001220                     i2u442_41:
  5416   001220  EF17  F009         	goto	i2l4954
  5417   001224                     i2u442_40:
  5418   001224                     
  5419                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 101:     {;MCAL_Layer/Interrupt/interrupt_man
      +                          ager.c: 102:         RB6_Flag = 1;
  5420   001224  0E01               	movlw	1
  5421   001226  6E64               	movwf	_RB6_Flag^0,c	;volatile
  5422   001228                     
  5423                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 103:         RB6_ISR(0);
  5424   001228  0E00               	movlw	0
  5425   00122A  ECC6  F013         	call	_RB6_ISR
  5426   00122E                     i2l4954:
  5427                           
  5428                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 107:     if(1 == INTCONbits.RBIE && 1 == INTC
      +                          ONbits.RBIF
  5429   00122E  A6F2               	btfss	242,3,c	;volatile
  5430   001230  EF1C  F009         	goto	i2u443_41
  5431   001234  EF1E  F009         	goto	i2u443_40
  5432   001238                     i2u443_41:
  5433   001238  EF39  F009         	goto	i2l4966
  5434   00123C                     i2u443_40:
  5435   00123C  A0F2               	btfss	242,0,c	;volatile
  5436   00123E  EF23  F009         	goto	i2u444_41
  5437   001242  EF25  F009         	goto	i2u444_40
  5438   001246                     i2u444_41:
  5439   001246  EF39  F009         	goto	i2l4966
  5440   00124A                     i2u444_40:
  5441   00124A  AE81               	btfss	129,7,c	;volatile
  5442   00124C  EF2A  F009         	goto	i2u445_41
  5443   001250  EF2C  F009         	goto	i2u445_40
  5444   001254                     i2u445_41:
  5445   001254  EF39  F009         	goto	i2l4966
  5446   001258                     i2u445_40:
  5447   001258  0463               	decf	_RB7_Flag^0,w,c	;volatile
  5448   00125A  A4D8               	btfss	status,2,c
  5449   00125C  EF32  F009         	goto	i2u446_41
  5450   001260  EF34  F009         	goto	i2u446_40
  5451   001264                     i2u446_41:
  5452   001264  EF39  F009         	goto	i2l4966
  5453   001268                     i2u446_40:
  5454   001268                     
  5455                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 109:     {;MCAL_Layer/Interrupt/interrupt_man
      +                          ager.c: 110:         RB7_Flag = 0;
  5456   001268  0E00               	movlw	0
  5457   00126A  6E63               	movwf	_RB7_Flag^0,c	;volatile
  5458   00126C                     
  5459                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 111:         RB7_ISR(1);
  5460   00126C  0E01               	movlw	1
  5461   00126E  ECB9  F013         	call	_RB7_ISR
  5462   001272                     i2l4966:
  5463                           
  5464                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 113:     if(1 == INTCONbits.RBIE && 1 == INTC
      +                          ONbits.RBIF
  5465   001272  A6F2               	btfss	242,3,c	;volatile
  5466   001274  EF3E  F009         	goto	i2u447_41
  5467   001278  EF40  F009         	goto	i2u447_40
  5468   00127C                     i2u447_41:
  5469   00127C  EF5B  F009         	goto	i2l4978
  5470   001280                     i2u447_40:
  5471   001280  A0F2               	btfss	242,0,c	;volatile
  5472   001282  EF45  F009         	goto	i2u448_41
  5473   001286  EF47  F009         	goto	i2u448_40
  5474   00128A                     i2u448_41:
  5475   00128A  EF5B  F009         	goto	i2l4978
  5476   00128E                     i2u448_40:
  5477   00128E  BE81               	btfsc	129,7,c	;volatile
  5478   001290  EF4C  F009         	goto	i2u449_41
  5479   001294  EF4E  F009         	goto	i2u449_40
  5480   001298                     i2u449_41:
  5481   001298  EF5B  F009         	goto	i2l4978
  5482   00129C                     i2u449_40:
  5483   00129C  5063               	movf	_RB7_Flag^0,w,c	;volatile
  5484   00129E  A4D8               	btfss	status,2,c
  5485   0012A0  EF54  F009         	goto	i2u450_41
  5486   0012A4  EF56  F009         	goto	i2u450_40
  5487   0012A8                     i2u450_41:
  5488   0012A8  EF5B  F009         	goto	i2l4978
  5489   0012AC                     i2u450_40:
  5490   0012AC                     
  5491                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 115:     {;MCAL_Layer/Interrupt/interrupt_man
      +                          ager.c: 116:         RB7_Flag = 1;
  5492   0012AC  0E01               	movlw	1
  5493   0012AE  6E63               	movwf	_RB7_Flag^0,c	;volatile
  5494   0012B0                     
  5495                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 117:         RB7_ISR(0);
  5496   0012B0  0E00               	movlw	0
  5497   0012B2  ECB9  F013         	call	_RB7_ISR
  5498   0012B6                     i2l4978:
  5499                           
  5500                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 128:     if(1 == INTCONbits.TMR0IE && 1 == IN
      +                          TCONbits.TMR0IF)
  5501   0012B6  AAF2               	btfss	242,5,c	;volatile
  5502   0012B8  EF60  F009         	goto	i2u451_41
  5503   0012BC  EF62  F009         	goto	i2u451_40
  5504   0012C0                     i2u451_41:
  5505   0012C0  EF6B  F009         	goto	i2l4984
  5506   0012C4                     i2u451_40:
  5507   0012C4  A4F2               	btfss	242,2,c	;volatile
  5508   0012C6  EF67  F009         	goto	i2u452_41
  5509   0012CA  EF69  F009         	goto	i2u452_40
  5510   0012CE                     i2u452_41:
  5511   0012CE  EF6B  F009         	goto	i2l4984
  5512   0012D2                     i2u452_40:
  5513   0012D2                     
  5514                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 129:     {;MCAL_Layer/Interrupt/interrupt_man
      +                          ager.c: 130:         TIMR0_ISR();
  5515   0012D2  EC40  F013         	call	_TIMR0_ISR	;wreg free
  5516   0012D6                     i2l4984:
  5517                           
  5518                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 133:     if(1 == PIE1bits.TMR1IE && 1 == PIR1
      +                          bits.TMR1IF)
  5519   0012D6  A09D               	btfss	157,0,c	;volatile
  5520   0012D8  EF70  F009         	goto	i2u453_41
  5521   0012DC  EF72  F009         	goto	i2u453_40
  5522   0012E0                     i2u453_41:
  5523   0012E0  EF7B  F009         	goto	i2l4990
  5524   0012E4                     i2u453_40:
  5525   0012E4  A09E               	btfss	158,0,c	;volatile
  5526   0012E6  EF77  F009         	goto	i2u454_41
  5527   0012EA  EF79  F009         	goto	i2u454_40
  5528   0012EE                     i2u454_41:
  5529   0012EE  EF7B  F009         	goto	i2l4990
  5530   0012F2                     i2u454_40:
  5531   0012F2                     
  5532                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 134:     {;MCAL_Layer/Interrupt/interrupt_man
      +                          ager.c: 135:         TIMR1_ISR();
  5533   0012F2  EC25  F013         	call	_TIMR1_ISR	;wreg free
  5534   0012F6                     i2l4990:
  5535                           
  5536                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 138:     if(1 == PIE1bits.TMR2IE && 1 == PIR1
      +                          bits.TMR2IF)
  5537   0012F6  A29D               	btfss	157,1,c	;volatile
  5538   0012F8  EF80  F009         	goto	i2u455_41
  5539   0012FC  EF82  F009         	goto	i2u455_40
  5540   001300                     i2u455_41:
  5541   001300  EF8B  F009         	goto	i2l4996
  5542   001304                     i2u455_40:
  5543   001304  A29E               	btfss	158,1,c	;volatile
  5544   001306  EF87  F009         	goto	i2u456_41
  5545   00130A  EF89  F009         	goto	i2u456_40
  5546   00130E                     i2u456_41:
  5547   00130E  EF8B  F009         	goto	i2l4996
  5548   001312                     i2u456_40:
  5549   001312                     
  5550                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 139:     {;MCAL_Layer/Interrupt/interrupt_man
      +                          ager.c: 140:         TIMR2_ISR();
  5551   001312  ECFD  F013         	call	_TIMR2_ISR	;wreg free
  5552   001316                     i2l4996:
  5553                           
  5554                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 143:     if(1 == PIE2bits.TMR3IE && 1 == PIR2
      +                          bits.TMR3IF)
  5555   001316  A2A0               	btfss	160,1,c	;volatile
  5556   001318  EF90  F009         	goto	i2u457_41
  5557   00131C  EF92  F009         	goto	i2u457_40
  5558   001320                     i2u457_41:
  5559   001320  EF9B  F009         	goto	i2l796
  5560   001324                     i2u457_40:
  5561   001324  A2A1               	btfss	161,1,c	;volatile
  5562   001326  EF97  F009         	goto	i2u458_41
  5563   00132A  EF99  F009         	goto	i2u458_40
  5564   00132E                     i2u458_41:
  5565   00132E  EF9B  F009         	goto	i2l796
  5566   001332                     i2u458_40:
  5567   001332                     
  5568                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 144:     {;MCAL_Layer/Interrupt/interrupt_man
      +                          ager.c: 145:         TIMR3_ISR();
  5569   001332  ECED  F013         	call	_TIMR3_ISR	;wreg free
  5570   001336                     i2l796:
  5571   001336  C040  FFF4         	movff	??_InterruptManager+5,prodh
  5572   00133A  C03F  FFF3         	movff	??_InterruptManager+4,prodl
  5573   00133E  C03E  FFDA         	movff	??_InterruptManager+3,fsr2h
  5574   001342  C03D  FFD9         	movff	??_InterruptManager+2,fsr2l
  5575   001346  C03C  FFFB         	movff	??_InterruptManager+1,pclatu
  5576   00134A  C03B  FFFA         	movff	??_InterruptManager,pclath
  5577   00134E  9268               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5578   001350  0011               	retfie		f
  5579   001352                     __end_of_InterruptManager:
  5580                           	callstack 0
  5581                           
  5582 ;; *************** function _TIMR3_ISR *****************
  5583 ;; Defined at:
  5584 ;;		line 224 in file "MCAL_Layer/Timers/timer3.c"
  5585 ;; Parameters:    Size  Location     Type
  5586 ;;		None
  5587 ;; Auto vars:     Size  Location     Type
  5588 ;;		None
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  1    wreg      void 
  5591 ;; Registers used:
  5592 ;;		wreg, status,2
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5602 ;;Total ram usage:        0 bytes
  5603 ;; Hardware stack levels used: 1
  5604 ;; This function calls:
  5605 ;;		Nothing
  5606 ;; This function is called by:
  5607 ;;		_InterruptManager
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           	psect	text37
  5612   0027DA                     __ptext37:
  5613                           	callstack 0
  5614   0027DA                     _TIMR3_ISR:
  5615                           	callstack 23
  5616   0027DA                     
  5617                           ;MCAL_Layer/Timers/timer3.c: 228:     (PIR2bits.TMR3IF = 0);
  5618   0027DA  92A1               	bcf	161,1,c	;volatile
  5619   0027DC                     
  5620                           ;MCAL_Layer/Timers/timer3.c: 230:     TMR3H = (uint8)(preload >> 8);
  5621   0027DC  5002               	movf	(_preload@timer3$F2677+1)^0,w,c
  5622   0027DE  6EB3               	movwf	179,c	;volatile
  5623   0027E0                     
  5624                           ;MCAL_Layer/Timers/timer3.c: 231:     TMR3L = (uint8) (preload);
  5625   0027E0  C001  FFB2         	movff	_preload@timer3$F2677,4018	;volatile
  5626   0027E4  0012               	return		;funcret
  5627   0027E6                     __end_of_TIMR3_ISR:
  5628                           	callstack 0
  5629                           
  5630 ;; *************** function _TIMR2_ISR *****************
  5631 ;; Defined at:
  5632 ;;		line 153 in file "MCAL_Layer/Timers/timer2.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;		None
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;		None
  5637 ;; Return value:  Size  Location     Type
  5638 ;;                  1    wreg      void 
  5639 ;; Registers used:
  5640 ;;		None
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5650 ;;Total ram usage:        0 bytes
  5651 ;; Hardware stack levels used: 1
  5652 ;; This function calls:
  5653 ;;		Nothing
  5654 ;; This function is called by:
  5655 ;;		_InterruptManager
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           	psect	text38
  5660   0027FA                     __ptext38:
  5661                           	callstack 0
  5662   0027FA                     _TIMR2_ISR:
  5663                           	callstack 23
  5664   0027FA                     
  5665                           ;MCAL_Layer/Timers/timer2.c: 156:     (PIR1bits.TMR2IF = 0);
  5666   0027FA  929E               	bcf	158,1,c	;volatile
  5667                           
  5668                           ;MCAL_Layer/Timers/timer2.c: 158:     TMR2 = preload;
  5669   0027FC  C022  FFCC         	movff	_preload@timer2$F2504,4044	;volatile
  5670   002800  0012               	return		;funcret
  5671   002802                     __end_of_TIMR2_ISR:
  5672                           	callstack 0
  5673                           
  5674 ;; *************** function _TIMR1_ISR *****************
  5675 ;; Defined at:
  5676 ;;		line 221 in file "MCAL_Layer/Timers/timer1.c"
  5677 ;; Parameters:    Size  Location     Type
  5678 ;;		None
  5679 ;; Auto vars:     Size  Location     Type
  5680 ;;		None
  5681 ;; Return value:  Size  Location     Type
  5682 ;;                  1    wreg      void 
  5683 ;; Registers used:
  5684 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  5685 ;; Tracked objects:
  5686 ;;		On entry : 0/0
  5687 ;;		On exit  : 0/0
  5688 ;;		Unchanged: 0/0
  5689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5694 ;;Total ram usage:        0 bytes
  5695 ;; Hardware stack levels used: 1
  5696 ;; Hardware stack levels required when called: 3
  5697 ;; This function calls:
  5698 ;;		NULL
  5699 ;;		_timer1_int
  5700 ;; This function is called by:
  5701 ;;		_InterruptManager
  5702 ;; This function uses a non-reentrant model
  5703 ;;
  5704                           
  5705                           	psect	text39
  5706   00264A                     __ptext39:
  5707                           	callstack 0
  5708   00264A                     _TIMR1_ISR:
  5709                           	callstack 20
  5710   00264A                     
  5711                           ;MCAL_Layer/Timers/timer1.c: 224:     (PIR1bits.TMR1IF = 0);
  5712   00264A  909E               	bcf	158,0,c	;volatile
  5713   00264C                     
  5714                           ;MCAL_Layer/Timers/timer1.c: 226:     TMR1H = (uint8) (preload >> 8);
  5715   00264C  5004               	movf	(_preload@timer1$F2331+1)^0,w,c
  5716   00264E  6ECF               	movwf	207,c	;volatile
  5717   002650                     
  5718                           ;MCAL_Layer/Timers/timer1.c: 227:     TMR1L = (uint8) (preload);
  5719   002650  C003  FFCE         	movff	_preload@timer1$F2331,4046	;volatile
  5720   002654                     
  5721                           ;MCAL_Layer/Timers/timer1.c: 229:     if (TIMR1_InterruptHandler) {
  5722   002654  5005               	movf	_TIMR1_InterruptHandler^0,w,c
  5723   002656  1006               	iorwf	(_TIMR1_InterruptHandler+1)^0,w,c
  5724   002658  B4D8               	btfsc	status,2,c
  5725   00265A  EF31  F013         	goto	i2u354_41
  5726   00265E  EF33  F013         	goto	i2u354_40
  5727   002662                     i2u354_41:
  5728   002662  EF3F  F013         	goto	i2l993
  5729   002666                     i2u354_40:
  5730   002666                     
  5731                           ;MCAL_Layer/Timers/timer1.c: 230:         TIMR1_InterruptHandler();
  5732   002666  D802               	call	i2u355_48
  5733   002668  EF3F  F013         	goto	i2u355_49
  5734   00266C                     i2u355_48:
  5735   00266C  0005               	push	
  5736   00266E  6EFA               	movwf	pclath,c
  5737   002670  5005               	movf	_TIMR1_InterruptHandler^0,w,c
  5738   002672  6EFD               	movwf	tosl,c
  5739   002674  5006               	movf	(_TIMR1_InterruptHandler+1)^0,w,c
  5740   002676  6EFE               	movwf	tosh,c
  5741   002678  6AFF               	clrf	tosu,c
  5742   00267A  50FA               	movf	pclath,w,c
  5743   00267C  0012               	return		;indir
  5744   00267E                     i2u355_49:
  5745   00267E                     i2l993:
  5746   00267E  0012               	return		;funcret
  5747   002680                     __end_of_TIMR1_ISR:
  5748                           	callstack 0
  5749                           
  5750 ;; *************** function _timer1_int *****************
  5751 ;; Defined at:
  5752 ;;		line 63 in file "main.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;		None
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;		None
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  1    wreg      void 
  5759 ;; Registers used:
  5760 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 0/0
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5770 ;;Total ram usage:        0 bytes
  5771 ;; Hardware stack levels used: 1
  5772 ;; Hardware stack levels required when called: 2
  5773 ;; This function calls:
  5774 ;;		_led_toggle
  5775 ;; This function is called by:
  5776 ;;		_TIMR1_ISR
  5777 ;; This function uses a non-reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text40
  5781   0027E6                     __ptext40:
  5782                           	callstack 0
  5783   0027E6                     _timer1_int:
  5784                           	callstack 20
  5785   0027E6                     
  5786                           ;main.c: 64:     led_toggle(&led1);
  5787   0027E6  0E67               	movlw	low _led1
  5788   0027E8  6E38               	movwf	led_toggle@led^0,c
  5789   0027EA  ECA5  F011         	call	_led_toggle	;wreg free
  5790   0027EE  0012               	return		;funcret
  5791   0027F0                     __end_of_timer1_int:
  5792                           	callstack 0
  5793                           
  5794 ;; *************** function _TIMR0_ISR *****************
  5795 ;; Defined at:
  5796 ;;		line 221 in file "MCAL_Layer/Timers/timer0.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;		None
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;		None
  5801 ;; Return value:  Size  Location     Type
  5802 ;;                  1    wreg      void 
  5803 ;; Registers used:
  5804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
  5805 ;; Tracked objects:
  5806 ;;		On entry : 0/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5813 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5814 ;;Total ram usage:        0 bytes
  5815 ;; Hardware stack levels used: 1
  5816 ;; Hardware stack levels required when called: 3
  5817 ;; This function calls:
  5818 ;;		NULL
  5819 ;;		_timer0_int
  5820 ;; This function is called by:
  5821 ;;		_InterruptManager
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           	psect	text41
  5826   002680                     __ptext41:
  5827                           	callstack 0
  5828   002680                     _TIMR0_ISR:
  5829                           	callstack 20
  5830   002680                     
  5831                           ;MCAL_Layer/Timers/timer0.c: 224:     (INTCONbits.TMR0IF = 0);
  5832   002680  94F2               	bcf	242,2,c	;volatile
  5833   002682                     
  5834                           ;MCAL_Layer/Timers/timer0.c: 226:     TMR0H = (uint8) (preload >> 8);
  5835   002682  5008               	movf	(_preload+1)^0,w,c
  5836   002684  6ED7               	movwf	215,c	;volatile
  5837   002686                     
  5838                           ;MCAL_Layer/Timers/timer0.c: 227:     TMR0L = (uint8) (preload);
  5839   002686  C007  FFD6         	movff	_preload,4054	;volatile
  5840   00268A                     
  5841                           ;MCAL_Layer/Timers/timer0.c: 229:     if (TIMR0_InterruptHandler) {
  5842   00268A  5009               	movf	_TIMR0_InterruptHandler^0,w,c
  5843   00268C  100A               	iorwf	(_TIMR0_InterruptHandler+1)^0,w,c
  5844   00268E  B4D8               	btfsc	status,2,c
  5845   002690  EF4C  F013         	goto	i2u352_41
  5846   002694  EF4E  F013         	goto	i2u352_40
  5847   002698                     i2u352_41:
  5848   002698  EF5A  F013         	goto	i2l866
  5849   00269C                     i2u352_40:
  5850   00269C                     
  5851                           ;MCAL_Layer/Timers/timer0.c: 230:         TIMR0_InterruptHandler();
  5852   00269C  D802               	call	i2u353_48
  5853   00269E  EF5A  F013         	goto	i2u353_49
  5854   0026A2                     i2u353_48:
  5855   0026A2  0005               	push	
  5856   0026A4  6EFA               	movwf	pclath,c
  5857   0026A6  5009               	movf	_TIMR0_InterruptHandler^0,w,c
  5858   0026A8  6EFD               	movwf	tosl,c
  5859   0026AA  500A               	movf	(_TIMR0_InterruptHandler+1)^0,w,c
  5860   0026AC  6EFE               	movwf	tosh,c
  5861   0026AE  6AFF               	clrf	tosu,c
  5862   0026B0  50FA               	movf	pclath,w,c
  5863   0026B2  0012               	return		;indir
  5864   0026B4                     i2u353_49:
  5865   0026B4                     i2l866:
  5866   0026B4  0012               	return		;funcret
  5867   0026B6                     __end_of_TIMR0_ISR:
  5868                           	callstack 0
  5869                           
  5870 ;; *************** function _timer0_int *****************
  5871 ;; Defined at:
  5872 ;;		line 50 in file "main.c"
  5873 ;; Parameters:    Size  Location     Type
  5874 ;;		None
  5875 ;; Auto vars:     Size  Location     Type
  5876 ;;		None
  5877 ;; Return value:  Size  Location     Type
  5878 ;;                  1    wreg      void 
  5879 ;; Registers used:
  5880 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5881 ;; Tracked objects:
  5882 ;;		On entry : 0/0
  5883 ;;		On exit  : 0/0
  5884 ;;		Unchanged: 0/0
  5885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;Total ram usage:        0 bytes
  5891 ;; Hardware stack levels used: 1
  5892 ;; Hardware stack levels required when called: 2
  5893 ;; This function calls:
  5894 ;;		_led_toggle
  5895 ;; This function is called by:
  5896 ;;		_TIMR0_ISR
  5897 ;; This function uses a non-reentrant model
  5898 ;;
  5899                           
  5900                           	psect	text42
  5901   0027F0                     __ptext42:
  5902                           	callstack 0
  5903   0027F0                     _timer0_int:
  5904                           	callstack 20
  5905   0027F0                     
  5906                           ;main.c: 51:     led_toggle(&led1);
  5907   0027F0  0E67               	movlw	low _led1
  5908   0027F2  6E38               	movwf	led_toggle@led^0,c
  5909   0027F4  ECA5  F011         	call	_led_toggle	;wreg free
  5910   0027F8  0012               	return		;funcret
  5911   0027FA                     __end_of_timer0_int:
  5912                           	callstack 0
  5913                           
  5914 ;; *************** function _led_toggle *****************
  5915 ;; Defined at:
  5916 ;;		line 104 in file "ECU_Layer/LED/led.c"
  5917 ;; Parameters:    Size  Location     Type
  5918 ;;  led             1    6[COMRAM] PTR const struct .
  5919 ;;		 -> led1(1), 
  5920 ;; Auto vars:     Size  Location     Type
  5921 ;;  pin             1    8[COMRAM] struct .
  5922 ;;  ret             1    0        unsigned char 
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  1    wreg      unsigned char 
  5925 ;; Registers used:
  5926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5932 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5934 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5935 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5936 ;;Total ram usage:        3 bytes
  5937 ;; Hardware stack levels used: 1
  5938 ;; Hardware stack levels required when called: 1
  5939 ;; This function calls:
  5940 ;;		_gpio_pin_toggle
  5941 ;; This function is called by:
  5942 ;;		_timer0_int
  5943 ;;		_timer1_int
  5944 ;; This function uses a non-reentrant model
  5945 ;;
  5946                           
  5947                           	psect	text43
  5948   00234A                     __ptext43:
  5949                           	callstack 0
  5950   00234A                     _led_toggle:
  5951                           	callstack 20
  5952   00234A                     
  5953                           ;ECU_Layer/LED/led.c: 107:     if (((void*)0) == led) {
  5954   00234A  5038               	movf	led_toggle@led^0,w,c
  5955   00234C  A4D8               	btfss	status,2,c
  5956   00234E  EFAB  F011         	goto	i2u307_41
  5957   002352  EFAD  F011         	goto	i2u307_40
  5958   002356                     i2u307_41:
  5959   002356  EFAF  F011         	goto	i2l252
  5960   00235A                     i2u307_40:
  5961   00235A                     
  5962                           ;ECU_Layer/LED/led.c: 109:     } else {
  5963   00235A  EFD0  F011         	goto	i2l256
  5964   00235E                     i2l252:
  5965                           
  5966                           ;ECU_Layer/LED/led.c: 110:         pin_config_t pin ={
  5967   00235E  C026  F03A         	movff	led_toggle@F3093,led_toggle@pin
  5968   002362  5038               	movf	led_toggle@led^0,w,c
  5969   002364  6ED9               	movwf	fsr2l,c
  5970   002366  6ADA               	clrf	fsr2h,c
  5971   002368  50DF               	movf	223,w,c
  5972   00236A  0B07               	andlw	7
  5973   00236C  6E39               	movwf	??_led_toggle^0,c
  5974   00236E  503A               	movf	led_toggle@pin^0,w,c
  5975   002370  1839               	xorwf	??_led_toggle^0,w,c
  5976   002372  0BF8               	andlw	-8
  5977   002374  1839               	xorwf	??_led_toggle^0,w,c
  5978   002376  6E3A               	movwf	led_toggle@pin^0,c
  5979   002378  5038               	movf	led_toggle@led^0,w,c
  5980   00237A  6ED9               	movwf	fsr2l,c
  5981   00237C  6ADA               	clrf	fsr2h,c
  5982   00237E  30DF               	rrcf	223,w,c
  5983   002380  32E8               	rrcf	wreg,f,c
  5984   002382  32E8               	rrcf	wreg,f,c
  5985   002384  0B07               	andlw	7
  5986   002386  6E39               	movwf	??_led_toggle^0,c
  5987   002388  4639               	rlncf	??_led_toggle^0,f,c
  5988   00238A  4639               	rlncf	??_led_toggle^0,f,c
  5989   00238C  4639               	rlncf	??_led_toggle^0,f,c
  5990   00238E  503A               	movf	led_toggle@pin^0,w,c
  5991   002390  1839               	xorwf	??_led_toggle^0,w,c
  5992   002392  0BC7               	andlw	-57
  5993   002394  1839               	xorwf	??_led_toggle^0,w,c
  5994   002396  6E3A               	movwf	led_toggle@pin^0,c
  5995   002398  0E3A               	movlw	low led_toggle@pin
  5996   00239A  6E32               	movwf	gpio_pin_toggle@pin^0,c
  5997   00239C  ECC5  F00F         	call	_gpio_pin_toggle	;wreg free
  5998   0023A0                     i2l256:
  5999   0023A0  0012               	return		;funcret
  6000   0023A2                     __end_of_led_toggle:
  6001                           	callstack 0
  6002                           
  6003 ;; *************** function _gpio_pin_toggle *****************
  6004 ;; Defined at:
  6005 ;;		line 181 in file "MCAL_Layer/GPIO/gpio.c"
  6006 ;; Parameters:    Size  Location     Type
  6007 ;;  pin             1    0[COMRAM] PTR const struct .
  6008 ;;		 -> led_toggle@pin(1), 
  6009 ;; Auto vars:     Size  Location     Type
  6010 ;;  ret             1    5[COMRAM] unsigned char 
  6011 ;; Return value:  Size  Location     Type
  6012 ;;                  1    wreg      unsigned char 
  6013 ;; Registers used:
  6014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6015 ;; Tracked objects:
  6016 ;;		On entry : 0/0
  6017 ;;		On exit  : 0/0
  6018 ;;		Unchanged: 0/0
  6019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6020 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6021 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6022 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6023 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6024 ;;Total ram usage:        6 bytes
  6025 ;; Hardware stack levels used: 1
  6026 ;; This function calls:
  6027 ;;		Nothing
  6028 ;; This function is called by:
  6029 ;;		_led_toggle
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           	psect	text44
  6034   001F8A                     __ptext44:
  6035                           	callstack 0
  6036   001F8A                     _gpio_pin_toggle:
  6037                           	callstack 20
  6038   001F8A                     
  6039                           ;MCAL_Layer/GPIO/gpio.c: 181: Std_ReturnType gpio_pin_toggle(const pin_config_t *pin);MC
      +                          AL_Layer/GPIO/gpio.c: 182: {;MCAL_Layer/GPIO/gpio.c: 183:     Std_ReturnType ret = 0x01;
  6040   001F8A  0E01               	movlw	1
  6041   001F8C  6E37               	movwf	gpio_pin_toggle@ret^0,c
  6042                           
  6043                           ;MCAL_Layer/GPIO/gpio.c: 185:     if(((void*)0) == pin || pin->pin_num > 8 - 1)
  6044   001F8E  5032               	movf	gpio_pin_toggle@pin^0,w,c
  6045   001F90  B4D8               	btfsc	status,2,c
  6046   001F92  EFCD  F00F         	goto	i2u287_41
  6047   001F96  EFCF  F00F         	goto	i2u287_40
  6048   001F9A                     i2u287_41:
  6049   001F9A  EFDF  F00F         	goto	i2l3880
  6050   001F9E                     i2u287_40:
  6051   001F9E  5032               	movf	gpio_pin_toggle@pin^0,w,c
  6052   001FA0  6ED9               	movwf	fsr2l,c
  6053   001FA2  6ADA               	clrf	fsr2h,c
  6054   001FA4  30DF               	rrcf	223,w,c
  6055   001FA6  32E8               	rrcf	wreg,f,c
  6056   001FA8  32E8               	rrcf	wreg,f,c
  6057   001FAA  0B07               	andlw	7
  6058   001FAC  6E33               	movwf	??_gpio_pin_toggle^0,c
  6059   001FAE  0E07               	movlw	7
  6060   001FB0  6433               	cpfsgt	??_gpio_pin_toggle^0,c
  6061   001FB2  EFDD  F00F         	goto	i2u288_41
  6062   001FB6  EFDF  F00F         	goto	i2u288_40
  6063   001FBA                     i2u288_41:
  6064   001FBA  EFE3  F00F         	goto	i2l3882
  6065   001FBE                     i2u288_40:
  6066   001FBE                     i2l3880:
  6067                           
  6068                           ;MCAL_Layer/GPIO/gpio.c: 186:     {;MCAL_Layer/GPIO/gpio.c: 187:         ret = 0x00;
  6069   001FBE  0E00               	movlw	0
  6070   001FC0  6E37               	movwf	gpio_pin_toggle@ret^0,c
  6071                           
  6072                           ;MCAL_Layer/GPIO/gpio.c: 188:     }
  6073   001FC2  EF09  F010         	goto	i2l3884
  6074   001FC6                     i2l3882:
  6075                           
  6076                           ;MCAL_Layer/GPIO/gpio.c: 190:     {;MCAL_Layer/GPIO/gpio.c: 191:         (*lat_registers
      +                          [pin->port] ^= ((uint8)1 << pin->pin_num));
  6077   001FC6  5032               	movf	gpio_pin_toggle@pin^0,w,c
  6078   001FC8  6ED9               	movwf	fsr2l,c
  6079   001FCA  6ADA               	clrf	fsr2h,c
  6080   001FCC  30DF               	rrcf	223,w,c
  6081   001FCE  32E8               	rrcf	wreg,f,c
  6082   001FD0  32E8               	rrcf	wreg,f,c
  6083   001FD2  0B07               	andlw	7
  6084   001FD4  6E33               	movwf	??_gpio_pin_toggle^0,c
  6085   001FD6  0E01               	movlw	1
  6086   001FD8  6E34               	movwf	(??_gpio_pin_toggle+1)^0,c
  6087   001FDA  2A33               	incf	??_gpio_pin_toggle^0,f,c
  6088   001FDC  EFF2  F00F         	goto	i2u289_44
  6089   001FE0                     i2u289_45:
  6090   001FE0  90D8               	bcf	status,0,c
  6091   001FE2  3634               	rlcf	(??_gpio_pin_toggle+1)^0,f,c
  6092   001FE4                     i2u289_44:
  6093   001FE4  2E33               	decfsz	??_gpio_pin_toggle^0,f,c
  6094   001FE6  EFF0  F00F         	goto	i2u289_45
  6095   001FEA  5032               	movf	gpio_pin_toggle@pin^0,w,c
  6096   001FEC  6ED9               	movwf	fsr2l,c
  6097   001FEE  6ADA               	clrf	fsr2h,c
  6098   001FF0  50DF               	movf	223,w,c
  6099   001FF2  0B07               	andlw	7
  6100   001FF4  0D02               	mullw	2
  6101   001FF6  50F3               	movf	243,w,c
  6102   001FF8  0F8A               	addlw	low _lat_registers
  6103   001FFA  6ED9               	movwf	fsr2l,c
  6104   001FFC  6ADA               	clrf	fsr2h,c
  6105   001FFE  CFDE F035          	movff	postinc2,??_gpio_pin_toggle+2
  6106   002002  CFDD F036          	movff	postdec2,??_gpio_pin_toggle+3
  6107   002006  C035  FFD9         	movff	??_gpio_pin_toggle+2,fsr2l
  6108   00200A  C036  FFDA         	movff	??_gpio_pin_toggle+3,fsr2h
  6109   00200E  5034               	movf	(??_gpio_pin_toggle+1)^0,w,c
  6110   002010  1ADF               	xorwf	indf2,f,c
  6111   002012                     i2l3884:
  6112                           
  6113                           ;MCAL_Layer/GPIO/gpio.c: 194:     return ret;
  6114   002012  5037               	movf	gpio_pin_toggle@ret^0,w,c
  6115   002014  0012               	return		;funcret
  6116   002016                     __end_of_gpio_pin_toggle:
  6117                           	callstack 0
  6118                           
  6119 ;; *************** function _RB7_ISR *****************
  6120 ;; Defined at:
  6121 ;;		line 691 in file "MCAL_Layer/Interrupt/external_interrupt.c"
  6122 ;; Parameters:    Size  Location     Type
  6123 ;;  RB_src          1    wreg     unsigned char 
  6124 ;; Auto vars:     Size  Location     Type
  6125 ;;  RB_src          1    0[COMRAM] unsigned char 
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  1    wreg      void 
  6128 ;; Registers used:
  6129 ;;		wreg, status,2
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6136 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6138 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6139 ;;Total ram usage:        1 bytes
  6140 ;; Hardware stack levels used: 1
  6141 ;; This function calls:
  6142 ;;		Nothing
  6143 ;; This function is called by:
  6144 ;;		_InterruptManager
  6145 ;; This function uses a non-reentrant model
  6146 ;;
  6147                           
  6148                           	psect	text45
  6149   002772                     __ptext45:
  6150                           	callstack 0
  6151   002772                     _RB7_ISR:
  6152                           	callstack 23
  6153                           
  6154                           ;incstack = 0
  6155                           ;RB7_ISR@RB_src stored from wreg
  6156   002772  6E32               	movwf	RB7_ISR@RB_src^0,c
  6157   002774                     
  6158                           ;MCAL_Layer/Interrupt/external_interrupt.c: 693:     (INTCONbits.RBIF = 0);
  6159   002774  90F2               	bcf	242,0,c	;volatile
  6160   002776                     
  6161                           ;MCAL_Layer/Interrupt/external_interrupt.c: 695:     if (0 == RB_src) {
  6162   002776  5032               	movf	RB7_ISR@RB_src^0,w,c
  6163   002778  A4D8               	btfss	status,2,c
  6164   00277A  EFC1  F013         	goto	i2u98_41
  6165   00277E  EFC3  F013         	goto	i2u98_40
  6166   002782                     i2u98_41:
  6167   002782  EFC5  F013         	goto	i2l728
  6168   002786                     i2u98_40:
  6169   002786  EFC5  F013         	goto	i2l732
  6170   00278A                     i2l728:
  6171   00278A                     i2l732:
  6172   00278A  0012               	return		;funcret
  6173   00278C                     __end_of_RB7_ISR:
  6174                           	callstack 0
  6175                           
  6176 ;; *************** function _RB6_ISR *****************
  6177 ;; Defined at:
  6178 ;;		line 671 in file "MCAL_Layer/Interrupt/external_interrupt.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;  RB_src          1    wreg     unsigned char 
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;  RB_src          1    0[COMRAM] unsigned char 
  6183 ;; Return value:  Size  Location     Type
  6184 ;;                  1    wreg      void 
  6185 ;; Registers used:
  6186 ;;		wreg, status,2
  6187 ;; Tracked objects:
  6188 ;;		On entry : 0/0
  6189 ;;		On exit  : 0/0
  6190 ;;		Unchanged: 0/0
  6191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6193 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6195 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6196 ;;Total ram usage:        1 bytes
  6197 ;; Hardware stack levels used: 1
  6198 ;; This function calls:
  6199 ;;		Nothing
  6200 ;; This function is called by:
  6201 ;;		_InterruptManager
  6202 ;; This function uses a non-reentrant model
  6203 ;;
  6204                           
  6205                           	psect	text46
  6206   00278C                     __ptext46:
  6207                           	callstack 0
  6208   00278C                     _RB6_ISR:
  6209                           	callstack 23
  6210                           
  6211                           ;incstack = 0
  6212                           ;RB6_ISR@RB_src stored from wreg
  6213   00278C  6E32               	movwf	RB6_ISR@RB_src^0,c
  6214   00278E                     
  6215                           ;MCAL_Layer/Interrupt/external_interrupt.c: 673:     (INTCONbits.RBIF = 0);
  6216   00278E  90F2               	bcf	242,0,c	;volatile
  6217   002790                     
  6218                           ;MCAL_Layer/Interrupt/external_interrupt.c: 675:     if (0 == RB_src) {
  6219   002790  5032               	movf	RB6_ISR@RB_src^0,w,c
  6220   002792  A4D8               	btfss	status,2,c
  6221   002794  EFCE  F013         	goto	i2u97_41
  6222   002798  EFD0  F013         	goto	i2u97_40
  6223   00279C                     i2u97_41:
  6224   00279C  EFD2  F013         	goto	i2l719
  6225   0027A0                     i2u97_40:
  6226   0027A0  EFD2  F013         	goto	i2l723
  6227   0027A4                     i2l719:
  6228   0027A4                     i2l723:
  6229   0027A4  0012               	return		;funcret
  6230   0027A6                     __end_of_RB6_ISR:
  6231                           	callstack 0
  6232                           
  6233 ;; *************** function _RB5_ISR *****************
  6234 ;; Defined at:
  6235 ;;		line 651 in file "MCAL_Layer/Interrupt/external_interrupt.c"
  6236 ;; Parameters:    Size  Location     Type
  6237 ;;  RB_src          1    wreg     unsigned char 
  6238 ;; Auto vars:     Size  Location     Type
  6239 ;;  RB_src          1    0[COMRAM] unsigned char 
  6240 ;; Return value:  Size  Location     Type
  6241 ;;                  1    wreg      void 
  6242 ;; Registers used:
  6243 ;;		wreg, status,2
  6244 ;; Tracked objects:
  6245 ;;		On entry : 0/0
  6246 ;;		On exit  : 0/0
  6247 ;;		Unchanged: 0/0
  6248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6252 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6253 ;;Total ram usage:        1 bytes
  6254 ;; Hardware stack levels used: 1
  6255 ;; This function calls:
  6256 ;;		Nothing
  6257 ;; This function is called by:
  6258 ;;		_InterruptManager
  6259 ;; This function uses a non-reentrant model
  6260 ;;
  6261                           
  6262                           	psect	text47
  6263   0027A6                     __ptext47:
  6264                           	callstack 0
  6265   0027A6                     _RB5_ISR:
  6266                           	callstack 23
  6267                           
  6268                           ;incstack = 0
  6269                           ;RB5_ISR@RB_src stored from wreg
  6270   0027A6  6E32               	movwf	RB5_ISR@RB_src^0,c
  6271   0027A8                     
  6272                           ;MCAL_Layer/Interrupt/external_interrupt.c: 653:     (INTCONbits.RBIF = 0);
  6273   0027A8  90F2               	bcf	242,0,c	;volatile
  6274   0027AA                     
  6275                           ;MCAL_Layer/Interrupt/external_interrupt.c: 655:     if (0 == RB_src) {
  6276   0027AA  5032               	movf	RB5_ISR@RB_src^0,w,c
  6277   0027AC  A4D8               	btfss	status,2,c
  6278   0027AE  EFDB  F013         	goto	i2u96_41
  6279   0027B2  EFDD  F013         	goto	i2u96_40
  6280   0027B6                     i2u96_41:
  6281   0027B6  EFDF  F013         	goto	i2l710
  6282   0027BA                     i2u96_40:
  6283   0027BA  EFDF  F013         	goto	i2l714
  6284   0027BE                     i2l710:
  6285   0027BE                     i2l714:
  6286   0027BE  0012               	return		;funcret
  6287   0027C0                     __end_of_RB5_ISR:
  6288                           	callstack 0
  6289                           
  6290 ;; *************** function _RB4_ISR *****************
  6291 ;; Defined at:
  6292 ;;		line 631 in file "MCAL_Layer/Interrupt/external_interrupt.c"
  6293 ;; Parameters:    Size  Location     Type
  6294 ;;  RB_src          1    wreg     unsigned char 
  6295 ;; Auto vars:     Size  Location     Type
  6296 ;;  RB_src          1    0[COMRAM] unsigned char 
  6297 ;; Return value:  Size  Location     Type
  6298 ;;                  1    wreg      void 
  6299 ;; Registers used:
  6300 ;;		wreg, status,2
  6301 ;; Tracked objects:
  6302 ;;		On entry : 0/0
  6303 ;;		On exit  : 0/0
  6304 ;;		Unchanged: 0/0
  6305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6309 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6310 ;;Total ram usage:        1 bytes
  6311 ;; Hardware stack levels used: 1
  6312 ;; This function calls:
  6313 ;;		Nothing
  6314 ;; This function is called by:
  6315 ;;		_InterruptManager
  6316 ;; This function uses a non-reentrant model
  6317 ;;
  6318                           
  6319                           	psect	text48
  6320   0027C0                     __ptext48:
  6321                           	callstack 0
  6322   0027C0                     _RB4_ISR:
  6323                           	callstack 23
  6324                           
  6325                           ;incstack = 0
  6326                           ;RB4_ISR@RB_src stored from wreg
  6327   0027C0  6E32               	movwf	RB4_ISR@RB_src^0,c
  6328   0027C2                     
  6329                           ;MCAL_Layer/Interrupt/external_interrupt.c: 633:     (INTCONbits.RBIF = 0);
  6330   0027C2  90F2               	bcf	242,0,c	;volatile
  6331   0027C4                     
  6332                           ;MCAL_Layer/Interrupt/external_interrupt.c: 635:     if (0 == RB_src) {
  6333   0027C4  5032               	movf	RB4_ISR@RB_src^0,w,c
  6334   0027C6  A4D8               	btfss	status,2,c
  6335   0027C8  EFE8  F013         	goto	i2u95_41
  6336   0027CC  EFEA  F013         	goto	i2u95_40
  6337   0027D0                     i2u95_41:
  6338   0027D0  EFEC  F013         	goto	i2l701
  6339   0027D4                     i2u95_40:
  6340   0027D4  EFEC  F013         	goto	i2l705
  6341   0027D8                     i2l701:
  6342   0027D8                     i2l705:
  6343   0027D8  0012               	return		;funcret
  6344   0027DA                     __end_of_RB4_ISR:
  6345                           	callstack 0
  6346                           
  6347 ;; *************** function _INT2_ISR *****************
  6348 ;; Defined at:
  6349 ;;		line 616 in file "MCAL_Layer/Interrupt/external_interrupt.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;		None
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;		None
  6354 ;; Return value:  Size  Location     Type
  6355 ;;                  1    wreg      void 
  6356 ;; Registers used:
  6357 ;;		None
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6366 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6367 ;;Total ram usage:        0 bytes
  6368 ;; Hardware stack levels used: 1
  6369 ;; This function calls:
  6370 ;;		Nothing
  6371 ;; This function is called by:
  6372 ;;		_InterruptManager
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           	psect	text49
  6377   002808                     __ptext49:
  6378                           	callstack 0
  6379   002808                     _INT2_ISR:
  6380                           	callstack 23
  6381   002808                     
  6382                           ;MCAL_Layer/Interrupt/external_interrupt.c: 618:     (INTCON3bits.INT2IF = 0);
  6383   002808  92F0               	bcf	240,1,c	;volatile
  6384   00280A  0012               	return		;funcret
  6385   00280C                     __end_of_INT2_ISR:
  6386                           	callstack 0
  6387                           
  6388 ;; *************** function _INT1_ISR *****************
  6389 ;; Defined at:
  6390 ;;		line 601 in file "MCAL_Layer/Interrupt/external_interrupt.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;		None
  6393 ;; Auto vars:     Size  Location     Type
  6394 ;;		None
  6395 ;; Return value:  Size  Location     Type
  6396 ;;                  1    wreg      void 
  6397 ;; Registers used:
  6398 ;;		None
  6399 ;; Tracked objects:
  6400 ;;		On entry : 0/0
  6401 ;;		On exit  : 0/0
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6407 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6408 ;;Total ram usage:        0 bytes
  6409 ;; Hardware stack levels used: 1
  6410 ;; This function calls:
  6411 ;;		Nothing
  6412 ;; This function is called by:
  6413 ;;		_InterruptManager
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           	psect	text50
  6418   00280C                     __ptext50:
  6419                           	callstack 0
  6420   00280C                     _INT1_ISR:
  6421                           	callstack 23
  6422   00280C                     
  6423                           ;MCAL_Layer/Interrupt/external_interrupt.c: 603:     (INTCON3bits.INT1IF = 0);
  6424   00280C  90F0               	bcf	240,0,c	;volatile
  6425   00280E  0012               	return		;funcret
  6426   002810                     __end_of_INT1_ISR:
  6427                           	callstack 0
  6428                           
  6429 ;; *************** function _INT0_ISR *****************
  6430 ;; Defined at:
  6431 ;;		line 586 in file "MCAL_Layer/Interrupt/external_interrupt.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;		None
  6434 ;; Auto vars:     Size  Location     Type
  6435 ;;		None
  6436 ;; Return value:  Size  Location     Type
  6437 ;;                  1    wreg      void 
  6438 ;; Registers used:
  6439 ;;		None
  6440 ;; Tracked objects:
  6441 ;;		On entry : 0/0
  6442 ;;		On exit  : 0/0
  6443 ;;		Unchanged: 0/0
  6444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6449 ;;Total ram usage:        0 bytes
  6450 ;; Hardware stack levels used: 1
  6451 ;; This function calls:
  6452 ;;		Nothing
  6453 ;; This function is called by:
  6454 ;;		_InterruptManager
  6455 ;; This function uses a non-reentrant model
  6456 ;;
  6457                           
  6458                           	psect	text51
  6459   002810                     __ptext51:
  6460                           	callstack 0
  6461   002810                     _INT0_ISR:
  6462                           	callstack 23
  6463   002810                     
  6464                           ;MCAL_Layer/Interrupt/external_interrupt.c: 588:     (INTCONbits.INT0IF = 0);
  6465   002810  92F2               	bcf	242,1,c	;volatile
  6466   002812  0012               	return		;funcret
  6467   002814                     __end_of_INT0_ISR:
  6468                           	callstack 0
  6469                           
  6470                           	psect	rparam
  6471   000000                     
  6472                           	psect	temp
  6473   000068                     btemp:
  6474                           	callstack 0
  6475   000068                     	ds	1
  6476   000000                     int$flags	set	btemp
  6477   000000                     wtemp8	set	btemp+1
  6478   000000                     ttemp5	set	btemp+1
  6479   000000                     ttemp6	set	btemp+4
  6480   000000                     ttemp7	set	btemp+8
  6481                           
  6482                           	psect	config
  6483                           
  6484                           ; Padding undefined space
  6485   300000                     	org	3145728
  6486   300000  FF                 	db	255
  6487                           
  6488                           ;Config register CONFIG1H @ 0x300001
  6489                           ;	Oscillator Selection bits
  6490                           ;	OSC = HS, HS oscillator
  6491                           ;	Fail-Safe Clock Monitor Enable bit
  6492                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6493                           ;	Internal/External Oscillator Switchover bit
  6494                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6495   300001                     	org	3145729
  6496   300001  02                 	db	2
  6497                           
  6498                           ;Config register CONFIG2L @ 0x300002
  6499                           ;	Power-up Timer Enable bit
  6500                           ;	PWRT = OFF, PWRT disabled
  6501                           ;	Brown-out Reset Enable bits
  6502                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  6503                           ;	Brown Out Reset Voltage bits
  6504                           ;	BORV = 1, 
  6505   300002                     	org	3145730
  6506   300002  09                 	db	9
  6507                           
  6508                           ;Config register CONFIG2H @ 0x300003
  6509                           ;	Watchdog Timer Enable bit
  6510                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6511                           ;	Watchdog Timer Postscale Select bits
  6512                           ;	WDTPS = 32768, 1:32768
  6513   300003                     	org	3145731
  6514   300003  1E                 	db	30
  6515                           
  6516                           ; Padding undefined space
  6517   300004                     	org	3145732
  6518   300004  FF                 	db	255
  6519                           
  6520                           ;Config register CONFIG3H @ 0x300005
  6521                           ;	CCP2 MUX bit
  6522                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  6523                           ;	PORTB A/D Enable bit
  6524                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  6525                           ;	Low-Power Timer1 Oscillator Enable bit
  6526                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6527                           ;	MCLR Pin Enable bit
  6528                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  6529   300005                     	org	3145733
  6530   300005  81                 	db	129
  6531                           
  6532                           ;Config register CONFIG4L @ 0x300006
  6533                           ;	Stack Full/Underflow Reset Enable bit
  6534                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6535                           ;	Single-Supply ICSP Enable bit
  6536                           ;	LVP = OFF, Single-Supply ICSP disabled
  6537                           ;	Extended Instruction Set Enable bit
  6538                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6539                           ;	Background Debugger Enable bit
  6540                           ;	DEBUG = 0x1, unprogrammed default
  6541   300006                     	org	3145734
  6542   300006  81                 	db	129
  6543                           
  6544                           ; Padding undefined space
  6545   300007                     	org	3145735
  6546   300007  FF                 	db	255
  6547                           
  6548                           ;Config register CONFIG5L @ 0x300008
  6549                           ;	Code Protection bit
  6550                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  6551                           ;	Code Protection bit
  6552                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  6553                           ;	Code Protection bit
  6554                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  6555                           ;	Code Protection bit
  6556                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  6557   300008                     	org	3145736
  6558   300008  0F                 	db	15
  6559                           
  6560                           ;Config register CONFIG5H @ 0x300009
  6561                           ;	Boot Block Code Protection bit
  6562                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6563                           ;	Data EEPROM Code Protection bit
  6564                           ;	CPD = OFF, Data EEPROM not code-protected
  6565   300009                     	org	3145737
  6566   300009  C0                 	db	192
  6567                           
  6568                           ;Config register CONFIG6L @ 0x30000A
  6569                           ;	Write Protection bit
  6570                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6571                           ;	Write Protection bit
  6572                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6573                           ;	Write Protection bit
  6574                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6575                           ;	Write Protection bit
  6576                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  6577   30000A                     	org	3145738
  6578   30000A  0F                 	db	15
  6579                           
  6580                           ;Config register CONFIG6H @ 0x30000B
  6581                           ;	Configuration Register Write Protection bit
  6582                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6583                           ;	Boot Block Write Protection bit
  6584                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6585                           ;	Data EEPROM Write Protection bit
  6586                           ;	WRTD = OFF, Data EEPROM not write-protected
  6587   30000B                     	org	3145739
  6588   30000B  E0                 	db	224
  6589                           
  6590                           ;Config register CONFIG7L @ 0x30000C
  6591                           ;	Table Read Protection bit
  6592                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6593                           ;	Table Read Protection bit
  6594                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6595                           ;	Table Read Protection bit
  6596                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6597                           ;	Table Read Protection bit
  6598                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6599   30000C                     	org	3145740
  6600   30000C  0F                 	db	15
  6601                           
  6602                           ;Config register CONFIG7H @ 0x30000D
  6603                           ;	Boot Block Table Read Protection bit
  6604                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6605   30000D                     	org	3145741
  6606   30000D  40                 	db	64
  6607                           tosu	equ	0xFFF
  6608                           tosh	equ	0xFFE
  6609                           tosl	equ	0xFFD
  6610                           stkptr	equ	0xFFC
  6611                           pclatu	equ	0xFFB
  6612                           pclath	equ	0xFFA
  6613                           pcl	equ	0xFF9
  6614                           tblptru	equ	0xFF8
  6615                           tblptrh	equ	0xFF7
  6616                           tblptrl	equ	0xFF6
  6617                           tablat	equ	0xFF5
  6618                           prodh	equ	0xFF4
  6619                           prodl	equ	0xFF3
  6620                           indf0	equ	0xFEF
  6621                           postinc0	equ	0xFEE
  6622                           postdec0	equ	0xFED
  6623                           preinc0	equ	0xFEC
  6624                           plusw0	equ	0xFEB
  6625                           fsr0h	equ	0xFEA
  6626                           fsr0l	equ	0xFE9
  6627                           wreg	equ	0xFE8
  6628                           indf1	equ	0xFE7
  6629                           postinc1	equ	0xFE6
  6630                           postdec1	equ	0xFE5
  6631                           preinc1	equ	0xFE4
  6632                           plusw1	equ	0xFE3
  6633                           fsr1h	equ	0xFE2
  6634                           fsr1l	equ	0xFE1
  6635                           bsr	equ	0xFE0
  6636                           indf2	equ	0xFDF
  6637                           postinc2	equ	0xFDE
  6638                           postdec2	equ	0xFDD
  6639                           preinc2	equ	0xFDC
  6640                           plusw2	equ	0xFDB
  6641                           fsr2h	equ	0xFDA
  6642                           fsr2l	equ	0xFD9
  6643                           status	equ	0xFD8

Data Sizes:
    Strings     9
    Constant    16
    Data        58
    BSS         95
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     49     103
    BANK0           128     22     121
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ADC_Get_Conversion_Blocking@adc	PTR const struct . size(1) Largest target is 5
		 -> adc1(BANK0[5]), 

    ADC_Get_Conversion_Blocking@adc_res	PTR unsigned short  size(1) Largest target is 2
		 -> main@adc_res(BANK0[2]), 

    ADC_Get_Result@adc	PTR const struct . size(1) Largest target is 5
		 -> adc1(BANK0[5]), 

    ADC_Get_Result@adc_res	PTR unsigned short  size(1) Largest target is 2
		 -> main@adc_res(BANK0[2]), 

    ADC_Init@adc	PTR const struct . size(1) Largest target is 5
		 -> adc1(BANK0[5]), 

    ADC_Select_Channel@adc	PTR const struct . size(1) Largest target is 5
		 -> adc1(BANK0[5]), 

    ADC_Select_Result_Format@adc	PTR const struct . size(1) Largest target is 5
		 -> adc1(BANK0[5]), 

    ADC_Select_Volt_Ref@adc	PTR const struct . size(1) Largest target is 5
		 -> adc1(BANK0[5]), 

    ADC_Start@adc	PTR const struct . size(1) Largest target is 5
		 -> adc1(BANK0[5]), 

    convert_uint16_to_string@str	PTR unsigned char  size(1) Largest target is 6
		 -> main@buff(BANK0[6]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_initialize@pin	PTR const struct . size(1) Largest target is 6
		 -> dc_motor_init@pin1(COMRAM[1]), dc_motor_init@pin2(COMRAM[1]), lcd1(BANK0[6]), lcd1$lcd_data(BANK0[4]), 
		 -> lcd1$lcd_en(BANK0[1]), lcd1$lcd_rs(BANK0[1]), led_init@pin(COMRAM[1]), relay_init@pin(COMRAM[1]), 

    gpio_pin_set_direction@pin	PTR const struct . size(1) Largest target is 6
		 -> dc_motor_init@pin1(COMRAM[1]), dc_motor_init@pin2(COMRAM[1]), lcd1(BANK0[6]), lcd1$lcd_data(BANK0[4]), 
		 -> lcd1$lcd_en(BANK0[1]), lcd1$lcd_rs(BANK0[1]), led_init@pin(COMRAM[1]), relay_init@pin(COMRAM[1]), 

    gpio_pin_toggle@pin	PTR const struct . size(1) Largest target is 1
		 -> led_toggle@pin(COMRAM[1]), 

    gpio_pin_write@pin	PTR const struct . size(1) Largest target is 6
		 -> dc_motor_init@pin1(COMRAM[1]), dc_motor_init@pin2(COMRAM[1]), dc_motor_move_dir1@pin1(COMRAM[1]), dc_motor_move_dir1@pin2(COMRAM[1]), 
		 -> dc_motor_move_dir2@pin1(COMRAM[1]), dc_motor_move_dir2@pin2(COMRAM[1]), dc_motor_stop@pin1(COMRAM[1]), dc_motor_stop@pin2(COMRAM[1]), 
		 -> lcd1(BANK0[6]), lcd1$lcd_data(BANK0[4]), lcd1$lcd_en(BANK0[1]), lcd1$lcd_rs(BANK0[1]), 
		 -> led_init@pin(COMRAM[1]), led_turn_off@pin(COMRAM[1]), led_turn_on@pin(COMRAM[1]), relay_init@pin(COMRAM[1]), 
		 -> relay_turn_off@pin(COMRAM[1]), relay_turn_on@pin(COMRAM[1]), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Disable@ext_int$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Set@ext_int$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@ext_int$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Flag_Clear@ext_int$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@ext_int$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@ext_int$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@ext_int$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@ext_int$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRllll[1]), LATB(BITBIGSFRlllh[1]), LATC(BITBIGSFRlllh[1]), LATD(BITBIGSFRlllh[1]), 
		 -> LATE(BITBIGSFRlllh[1]), 

    lcd_4bit_init@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_char@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_char_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_cmd@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_string@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_string@str	PTR unsigned char  size(2) Largest target is 6
		 -> main@buff(BANK0[6]), STR_4(CODE[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 6
		 -> main@buff(BANK0[6]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bits_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    led_init@led	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), 

    led_toggle@led	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), 

    memset@dest	PTR void  size(1) Largest target is 6
		 -> main@buff(BANK0[6]), 

    memset@p	PTR unsigned char  size(1) Largest target is 6
		 -> main@buff(BANK0[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRllll[1]), PORTB(BITBIGSFRllll[1]), PORTC(BITBIGSFRllll[1]), PORTD(BITBIGSFRllll[1]), 
		 -> PORTE(BITBIGSFRllll[1]), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1150$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1188$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    S1188$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    S1815$TIMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0_int(), 

    S2072$TIMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer1_int(), 

    S2406$TIMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2537$TIMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3177$buffer	PTR unsigned char  size(2) Largest target is 0

    S3177$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(1) Largest target is 6
		 -> main@buff(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 6
		 -> main@buff(BANK0[6]), 

    Timer0_Init@timer0$TIMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0_int(), 

    Timer0_Mode_Select@timer0$TIMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0_int(), 

    timer0_obj$TIMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0_int(), 

    Timer0_Prescaler_Config@timer0$TIMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0_int(), 

    Timer0_Set_Register_Size@timer0$TIMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0_int(), 

    Timer1_Init@timer	PTR const struct . size(1) Largest target is 6
		 -> timer1_obj(BANK0[6]), 

    Timer1_Init@timer$TIMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer1_int(), 

    Timer1_Mode_Select@timer	PTR const struct . size(1) Largest target is 6
		 -> timer1_obj(BANK0[6]), 

    Timer1_Mode_Select@timer$TIMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer1_int(), 

    timer1_obj$TIMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer1_int(), 

    Timer1_Osc_Config@timer	PTR const struct . size(1) Largest target is 6
		 -> timer1_obj(BANK0[6]), 

    Timer1_Osc_Config@timer$TIMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer1_int(), 

    Timer1_RW_Mode_Select@timer	PTR const struct . size(1) Largest target is 6
		 -> timer1_obj(BANK0[6]), 

    Timer1_RW_Mode_Select@timer$TIMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer1_int(), 

    Timer2_Init@timer$TIMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Init@timer$TIMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Mode_Select@timer$TIMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_RW_Mode_Select@timer$TIMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    TIMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer0_int(), NULL(), 

    TIMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timer1_int(), NULL(), 

    TIMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    TIMR3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRllll[1]), TRISB(ABS[1]), TRISC(ABS[1]), TRISD(ABS[1]), 
		 -> TRISE(ABS[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _main->_convert_uint16_to_string
    _led_init->_gpio_pin_initialize
    _lcd_4bit_send_string_pos->_lcd_4bit_send_string
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_send_string->_lcd_4bit_send_char
    _lcd_4bit_send_char_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_cmd
    _lcd_4bit_send_char->_lcd_send_4bits
    _lcd_4bit_init->_lcd_4bit_send_cmd
    _lcd_4bit_send_cmd->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write
    _lcd_4bits_send_enable_signal->_gpio_pin_write
    _gpio_pin_initialize->_gpio_pin_write
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _Timer1_Init->_Timer1_Mode_Select
    _Timer1_Init->_Timer1_Osc_Config
    _Timer1_Init->_Timer1_RW_Mode_Select
    _ADC_Init->_ADC_Input_Channel_Pin_Config
    _ADC_Get_Conversion_Blocking->_ADC_Select_Channel
    _ADC_Select_Channel->_ADC_Input_Channel_Pin_Config

Critical Paths under _InterruptManager in COMRAM

    _timer1_int->_led_toggle
    _timer0_int->_led_toggle
    _led_toggle->_gpio_pin_toggle

Critical Paths under _main in BANK0

    _convert_uint16_to_string->_sprintf

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0  144545
                                             13 BANK0      9     9      0
        _ADC_Get_Conversion_Blocking
                           _ADC_Init
                        _Timer1_Init
           _convert_uint16_to_string
                      _lcd_4bit_init
                 _lcd_4bit_send_char
             _lcd_4bit_send_char_pos
               _lcd_4bit_send_string
           _lcd_4bit_send_string_pos
                           _led_init
 ---------------------------------------------------------------------------------
 (1) _led_init                                             4     3      1    6796
                                             26 COMRAM     3     2      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             5     1      4   35617
                                             36 COMRAM     4     0      4
               _lcd_4bit_send_string
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string                                 4     1      3   16437
                                             32 COMRAM     4     1      3
                 _lcd_4bit_send_char
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_char_pos                               5     1      4   35412
                                             36 COMRAM     5     1      4
                 _lcd_4bit_send_char
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  4     1      3   18584
                                             32 COMRAM     4     1      3
                  _lcd_4bit_send_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char                                   3     1      2   15879
                                             29 COMRAM     3     1      2
                     _gpio_pin_write
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_init                                        4     3      1   25015
                                             32 COMRAM     4     3      1
                _gpio_pin_initialize
                  _lcd_4bit_send_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_cmd                                    3     1      2   17679
                                             29 COMRAM     3     1      2
                     _gpio_pin_write
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       6     4      2    5445
                                             23 COMRAM     6     4      2
                     _gpio_pin_write
 ---------------------------------------------------------------------------------
 (4) _lcd_4bits_send_enable_signal                         2     1      1    4955
                                             23 COMRAM     2     1      1
                     _gpio_pin_write
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initialize                                  3     2      1    6444
                                             23 COMRAM     3     2      1
             _gpio_pin_set_direction
                     _gpio_pin_write
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_write                                       8     6      2    4459
                                             15 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_set_direction                               7     6      1     707
                                             15 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (1) _convert_uint16_to_string                             4     1      3    5981
                                             46 COMRAM     3     0      3
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    4717
                                             40 COMRAM     6     0      6
                                              0 BANK0     13    13      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    3871
                                             36 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    3410
                                             25 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                             15 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                             21 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                             15 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                             15 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5     947
                                             15 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _Timer1_Init                                          4     3      1     900
                                             16 COMRAM     3     2      1
                 _Timer1_Mode_Select
                  _Timer1_Osc_Config
              _Timer1_RW_Mode_Select
 ---------------------------------------------------------------------------------
 (2) _Timer1_RW_Mode_Select                                1     0      1     152
                                             15 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _Timer1_Osc_Config                                    1     0      1     152
                                             15 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _Timer1_Mode_Select                                   1     0      1     214
                                             15 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             3     2      1     655
                                             18 COMRAM     2     1      1
       _ADC_Input_Channel_Pin_Config
           _ADC_Select_Result_Format
                _ADC_Select_Volt_Ref
 ---------------------------------------------------------------------------------
 (2) _ADC_Select_Volt_Ref                                  1     0      1     152
                                             15 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _ADC_Select_Result_Format                             2     1      1     152
                                             15 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _ADC_Get_Conversion_Blocking                          5     2      3    1684
                                             22 COMRAM     5     2      3
                     _ADC_Get_Result
                 _ADC_Select_Channel
                          _ADC_Start
 ---------------------------------------------------------------------------------
 (2) _ADC_Start                                            2     1      1     248
                                             15 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _ADC_Select_Channel                                   4     2      2     521
                                             18 COMRAM     4     2      2
       _ADC_Input_Channel_Pin_Config
 ---------------------------------------------------------------------------------
 (2) _ADC_Input_Channel_Pin_Config                         3     3      0      31
                                             15 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Get_Result                                       6     4      2     403
                                             15 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManager                                     6     6      0    1006
                                              9 COMRAM     6     6      0
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                          _TIMR0_ISR
                          _TIMR1_ISR
                          _TIMR2_ISR
                          _TIMR3_ISR
 ---------------------------------------------------------------------------------
 (8) _TIMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TIMR2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _TIMR1_ISR                                            0     0      0     443
                                NULL *
                         _timer1_int *
 ---------------------------------------------------------------------------------
 (9) _timer1_int                                           0     0      0     443
                         _led_toggle
 ---------------------------------------------------------------------------------
 (8) _TIMR0_ISR                                            0     0      0     443
                                NULL *
                         _timer0_int *
 ---------------------------------------------------------------------------------
 (9) _timer0_int                                           0     0      0     443
                         _led_toggle
 ---------------------------------------------------------------------------------
 (10) _led_toggle                                          4     3      1     443
                                              6 COMRAM     3     2      1
                    _gpio_pin_toggle
 ---------------------------------------------------------------------------------
 (11) _gpio_pin_toggle                                     6     5      1     188
                                              0 COMRAM     6     5      1
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Get_Conversion_Blocking
     _ADC_Get_Result
     _ADC_Select_Channel
       _ADC_Input_Channel_Pin_Config
     _ADC_Start
   _ADC_Init
     _ADC_Input_Channel_Pin_Config
     _ADC_Select_Result_Format
     _ADC_Select_Volt_Ref
   _Timer1_Init
     _Timer1_Mode_Select
     _Timer1_Osc_Config
     _Timer1_RW_Mode_Select
   _convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _lcd_4bit_init
     _gpio_pin_initialize
       _gpio_pin_set_direction
       _gpio_pin_write
     _lcd_4bit_send_cmd
       _gpio_pin_write
       _lcd_4bits_send_enable_signal
         _gpio_pin_write
       _lcd_send_4bits
         _gpio_pin_write
   _lcd_4bit_send_char
     _gpio_pin_write
     _lcd_4bits_send_enable_signal
     _lcd_send_4bits
   _lcd_4bit_send_char_pos
     _lcd_4bit_send_char
     _lcd_4bit_set_cursor
       _lcd_4bit_send_cmd
   _lcd_4bit_send_string
     _lcd_4bit_send_char
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_string
     _lcd_4bit_set_cursor
   _led_init
     _gpio_pin_initialize

 _InterruptManager (ROOT)
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TIMR0_ISR
     NULL(Fake) *
     _timer0_int *
       _led_toggle
         _gpio_pin_toggle
   _TIMR1_ISR
     NULL(Fake) *
     _timer1_int *
       _led_toggle
   _TIMR2_ISR
   _TIMR3_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     16      79       5       94.5%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     31      67       1       81.7%
BITBIGSFRhhllhh     18      0       0      38        0.0%
BITBIGSFRhhh         D      0       0      37        0.0%
BITBIGSFRllhhhh      C      0       0      42        0.0%
BITBIGSFRllhhhl      6      0       0      43        0.0%
BITBIGSFRllhhll      6      0       0      46        0.0%
BITBIGSFRhhlllh      5      0       0      39        0.0%
BITBIGSFRhhllll      5      0       0      41        0.0%
BITBIGSFRllhhll      4      0       0      44        0.0%
BITBIGSFRlllh        4      0       0      47        0.0%
BITBIGSFRllll        4      0       0      48        0.0%
BITBIGSFRhhllll      1      0       0      40        0.0%
BITBIGSFRllhhll      1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E0      12        0.0%
DATA                 0      0      E0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Aug 30 09:45:25 2024

                      ??_InterruptManager 003B                           ?_lcd_send_4bits 0049  
                                      l70 22EC                                        l80 2528  
                                      l65 17A8                                        l90 1EF4  
                                      l75 2290                                        l97 23E4  
                            ___awdiv@sign 0046                                       l111 21D6  
                                     l116 2564                                       l231 1D36  
                                     l128 1F88                                       l321 276C  
                                     l306 202A                                       l138 246A  
                                     l323 2770                                       l235 1DC0  
                                     l340 1B12                                       l308 209C  
                                     l318 2648                                       l350 2348  
                                     l504 2234                                       l347 232E  
                                     l381 2428                                       l374 1992  
                                     l384 248A                                       l464 18BA  
                                     l386 24AA                                       l379 2426  
                                     l483 1674                                       l388 24AC  
                                     l944 1DD6                                       l946 1E5E  
                                     l973 2112                                       l981 259E  
                                     l974 2112                                       l988 25D8  
    __end_of_lcd_4bits_send_enable_signal 2566              _lcd_4bits_send_enable_signal 252A  
                                     _abs 26EC                          lcd_4bit_init@lcd 0052  
               _RB5_InterruptHandler_HIGH 0015                          lcd_4bit_init@ret 0054  
                            ___awmod@sign 0046                                       tosl 0FFD  
                                     wreg 0FE8                               main@adc_res 00F7  
               ?_convert_uint16_to_string 0060                           __end_of_RB4_ISR 27DA  
                         __end_of_RB5_ISR 27C0                           __end_of_RB6_ISR 27A6  
                         __end_of_RB7_ISR 278C                                      ?_abs 0047  
                                    l1333 1A56                                      l1346 1C76  
                                    l1830 24EC                                      l5200 1A4E  
                                    l1824 1512                                      l5210 1BE2  
                                    l1834 2706                                      l5220 1C16  
                                    l5212 1BE6                                      l5204 1BC8  
                                    l1860 2814                                      l5300 139A  
                                    l5140 1548                                      l1837 271E  
                                    l5230 1C50                                      l5222 1C1E  
                                    l5214 1BF4                                      l5206 1BCC  
                                    l5310 1410                                      l5302 13B8  
                                    l5142 1550                                      l5150 1648  
                                    l5400 18F8                                      l5160 1994  
                                    l5224 1C2C                                      l5232 1C56  
                                    l5216 1BFC                                      l5208 1BDA  
                                    l5240 1C78                                      l5320 148E  
                                    l5312 1440                                      l5304 13D6  
                                    l5144 15A6                                      l5152 1672  
                                    l5136 1514                                      l6120 1B4C  
                                    l1849 1D20                                      l5402 18FE  
                                    l5410 1910                                      l5170 19C0  
                                    l5162 1998                                      l5234 1C66  
                                    l5226 1C42                                      l5218 1C0E  
                                    l5250 1CF0                                      l5242 1C88  
                                    l5322 149E                                      l5314 145C  
                                    l5306 13EE                                      l5330 14E2  
                                    l1786 2610                                      l5138 1528  
                                    l6130 1B7C                                      l6122 1B54  
                                    l1779 274E                                      l5404 1904  
                                    l5500 23E6                                      l5180 19EE  
                                    l5172 19C8                                      l5164 19A6  
                                    l5236 1C6E                                      l5228 1C4A  
                                    l5244 1C98                                      l5324 14B0  
                                    l5316 146E                                      l5308 13F8  
                                    l5420 24C6                                      l5340 17AA  
                                    l5260 218A                                      l6132 1B88  
                                    l6124 1B5E                                      l6116 1B14  
                                    l5406 190A                                      l5502 2400  
                                    l5510 2484                                      l5190 1A28  
                                    l5182 19F6                                      l5174 19CC  
                                    l5166 19AE                                      l5254 26EC  
                                    l5246 1CA2                                      l5326 14CA  
                                    l5318 147E                                      l5334 14EE  
                                    l5422 24E4                                      l5342 17BE  
                                    l5430 2208                                      l5270 21C2  
                                    l5262 2192                                      l6134 1B98  
                                    l6126 1B66                                      l6118 1B44  
                                    l5520 262E                                      l5504 2406  
                                    l5512 248C                                      l5192 1A2A  
                                    l5184 1A04                                      l5176 19D4  
                                    l5168 19B2                                      l5256 26FA  
                                    l5248 1CBE                                      l5328 14CC  
                                    l5416 24AE                                      l5344 17DE  
                                    l5432 2210                                      l5280 253A  
                                    l5272 21C4                                      l5360 2292  
                                    l5600 16C6                                      l5440 1EF6  
                                    l6136 1BAC                                      l6128 1B6C  
                                    l5522 2640                                      l5530 2764  
                                    l5506 2420                                      l5514 24A4  
                                    l5194 1A30                                      l5186 1A0A  
                                    l5178 19E6                                      l5290 1352  
                                    l5418 24B6                                      l5346 17E6  
                                    l5354 188C                                      l5434 2232  
                                    l5426 21D8                                      l5282 2542  
                                    l5274 21D4                                      l5258 2176  
                                    l5362 22A2                                      l5610 16F2  
                                    l5370 2236                                      l5450 1F38  
                                    l5442 1EF8                                      l5540 1A7C  
                                    l6180 1924                                      l5380 18BE  
                                    l5524 2646                                      l5516 2612  
                                    l5532 276E                                      l5700 233C  
                                    l5508 246C                                      l5188 1A20  
                                    l5196 1A36                                      l5292 1376  
                                    l5348 1836                                      l5356 18B8  
                                    l5428 21E8                                      l5284 254E  
                                    l5268 2196                                      l5364 22AA  
                                    l5620 173C                                      l5612 16F4  
                                    l5372 2246                                      l5452 1F4C  
                                    l5460 1F86                                      l5444 1F08  
                                    l5550 1B10                                      l5542 1A84  
                                    l5390 18DA                                      l5382 18C2  
                                    l5518 2626                                      l5710 1DF2  
                                    l5198 1A46                                      l5294 137E  
                                    l5286 2562                                      l5278 252A  
                                    l5366 22EA                                      l5622 1742  
                                    l5614 1704                                      l5606 16CA  
                                    l5374 224E                                      l5446 1F10  
                                    l5438 1EF6                                      l5630 24EE  
                                    l5470 1E8E                                      l5544 1A9E  
                                    l5536 1A58                                      l5392 18E0  
                                    l5384 18C8                                      l5528 2750  
                                    l5560 20D4                                      l5720 1E4A  
                                    l5712 1DFA                                      l5704 1DC2  
                                    l5480 2720                                      l5296 138C  
                                    l5624 174E                                      l5616 1714  
                                    l5608 16E6                                      l5376 228E  
                                    l5448 1F24                                      l5632 24FE  
                                    l5472 1EBC                                      l5464 1E60  
                                    l5640 23A2                                      l5546 1AC4  
                                    l5538 1A6C                                      l5394 18E6  
                                    l5386 18CE                                      l5562 20D6  
                                    l5554 209E                                      l5570 2566  
                                    l5722 1E58                                      l5714 1E3E  
                                    l5706 1DD2                                      l5482 2728  
                                    l5298 1390                                      l5490 25E4  
                                    l6178 165C                                      l5626 175A  
                                    l5618 1720                                      l5458 1F60  
                                    l5634 2506                                      l5474 1EC0  
                                    l5466 1E74                                      l5642 23B2  
                                    l5548 1ADE                                      l5396 18EC  
                                    l5388 18D4                                      l5564 20EE  
                                    l5556 20B6                                      l5580 25B8  
                                    l5572 257E                                      l5724 1E5A  
                                    l5716 1E46                                      l5708 1DD8  
                                    l5484 2732                                      l5492 25EC  
                                    l5652 242A                                      l5636 2526  
                                    l5476 1EF2                                      l5468 1E86  
                                    l5644 23C2                                      l5398 18F2  
                                    l5566 20F4                                      l5558 20BC  
                                    l5582 25BE                                      l5574 2584  
                                    l5726 1E5C                                      l5718 1E48  
                                    l5486 2734                                      l5494 25F4  
                                    l5654 243A                                      l5590 168E  
                                    l5646 23C6                                      l5670 1D72  
                                    l5662 1D22                                      l5680 202C  
                                    l5568 210C                                      l5584 25D6  
                                    l5576 259C                                      l5496 2604  
                                    l5488 25DA                                      l5656 243E  
                                    l5592 169E                                      l5648 23D6  
                                    l5672 1DB8                                      l5664 1D32  
                                    l5682 207A                                      l5578 25A0  
                                    l5658 2456                                      l5594 16AA  
                                    l5586 1676                                      l5666 1D3A  
           ?_ADC_Input_Channel_Pin_Config 0032                                      l5692 22EE  
                                    l5684 208A                                      l5676 2016  
                                    l5596 16B6                                      l5588 168A  
                                    l5668 1D70                                      l5694 2302  
                                    l5686 2092                                      l5678 2026  
                                    l5598 16BE                                      l5696 2312  
                                    l5688 209A                                      l5698 2316  
                                    STR_1 1017                                      STR_2 1017  
                                    STR_4 1011                                      _LATA 0F89  
                                    _LATB 0F8A                                      _LATC 0F8B  
                                    _LATD 0F8C                                      _LATE 0F8D  
                                    u5000 147E                                      u5001 147A  
                                    u5010 148E                                      u5011 148A  
                                    u5020 149E                                      u5100 2246  
                                    u5021 149A                                      u5101 2242  
                                    u5030 14DE                                      u5110 24E4  
                                    u5031 14DA                                      u5111 24E0  
                                    u5200 274E                                      u5040 17BE  
                                    u5120 21E8                                      u5201 274A  
                                    u5041 17BA                                      u5121 21E4  
                                    u5210 2400                                      u5050 17DE  
                                    u5130 2208                                      u5211 23FC  
                                    u5051 17DA                                      u5131 2204  
                                    u5300 1ADE                                      u5220 2420  
                                    u5140 1F08                                      u5301 1ADA  
                                    u5221 241C                                      u5141 1F04  
                                    u5230 2484                                      u5150 1E74  
                                    u5231 2480                                      u5151 1E70  
                                    u5240 24A4                                      u5320 20B6  
                                    u5080 18A2                                      u5064 1804  
                                    u5400 168A                                      u5160 1E86  
                                    u5241 24A0                                      u5321 20B2  
                                    u5081 189C                                      u5065 1800  
                                    u5401 1686                                      u5161 1E82  
                                    u5250 2626                                      u5330 20D4  
                                    u5074 1854                                      u5090 22A2  
                                    u5410 1704                                      u5170 1EB4  
                                    u5315 1AF6                                      u5251 2622  
                                    u5331 20D0                                      u5075 1850  
                                    u5091 229E                                      u5411 1700  
                                    u5260 2764                                      u5340 20EE  
                                    u5420 24FE                                      u5180 1EE2  
                                    u5261 2760                                      u5341 20EA  
                                    u5421 24FA                                      u5270 1A6C  
                                    u5510 2026                                      u5350 210C  
                                    u5086 18A4                                      u5190 1EF2  
                                    u5430 23B2                                      u5271 1A68  
                                    u5511 2022                                      u5351 2108  
                                    u5191 1EEE                                      u5431 23AE  
                                    u5280 1A7C                                      u5520 2302  
                                    u5360 257E                                      u4800 1BF4  
                                    u4704 156E                                      u5440 23C2  
                                    u5281 1A78                                      u5521 22FE  
                                    u5361 257A                                      u4801 1BF0  
                                    u4705 156A                                      u5177 1EAA  
                                    u5441 23BE                                      u5505 1DB8  
                                    u5290 1A9E                                      u5530 2312  
                                    u5370 259C                                      u4730 19A6  
                                    u4810 1C0E                                      u5450 243A  
                                    u4714 15C4                                      u5291 1A9A  
                                    u5531 230E                                      u5371 2598  
                                    u4731 19A2                                      u4811 1C0A  
                                    u5451 2436                                      u4715 15C0  
                                    u5187 1ED8                                      u5540 233C  
                                    u5380 25B8                                      u4740 19C0  
                                    u4820 1C2C                                      u4724 1616  
                                    u4900 218A                                      u5460 1D32  
                                    u5541 2338                                      u5381 25B4  
                                    u4741 19BC                                      u4821 1C28  
                                    u4725 1612                                      u4901 2186  
                                    u5461 1D2E                                      u5390 25D6  
                                    u5550 1DD2                                      u4750 19E6  
                                    u4830 1C42                                      u5470 1D88  
                                    u5391 25D2                                      u5551 1DCE  
                                    u4751 19E2                                      u4831 1C3E  
                                    u5471 1D82                                      u4760 1A04  
                                    u4840 1C66                                      u4680 1528  
                                    u4920 21D4                                      u5480 1DA2  
                                    u5472 1D8A                                      u4761 1A00  
                                    u4841 1C62                                      u4681 1524  
                                    u4921 21D0                                      u5481 1D9C  
                                    u4770 1A20                                      u4850 1C88  
                                    u4690 1548                                      u4930 253A  
                                    u4914 21B0                                      u5490 1DB6  
                                    u5482 1DA4                                      u4771 1A1C  
                                    u4851 1C84                                      u4691 1544  
                                    u4931 2536                                      u4915 21AC  
                                    u5491 1DB0                                      u4780 1A46  
                                    u4860 1C98                                      u4940 1376  
                                    u4781 1A42                                      u4861 1C94  
                                    u4941 1372                                      u5901 1B82  
                                    u4790 1BDA                                      u4870 1CBE  
                                    u4950 13B8                                      u4791 1BD6  
                                    u4871 1CBA                                      u4951 13B4  
                                    u4880 1CF0                                      u4960 13D6  
                                    u4881 1CEC                                      u4961 13D2  
                                    u4890 26FA                                      u4970 140C  
                                    u4891 26F6                                      u4971 1406  
                                    u4980 140E                                      u5917 170A  
                                    u4990 146E                                      u4991 146A  
                                    u5927 1726                                      u5937 173E  
                                    u5947 175C                                      _TMR2 0FCC  
                    _lcd_4bit_send_string 1E60                                      _adc1 00B0  
                _RB4_InterruptHandler_LOW 0017                                      abs@a 0047  
                                    _lcd1 00AA                                      _led1 0067  
                                    _dbuf 00B5                                      _main 1B14  
                                    _prec 00DD                  _RB7_InterruptHandler_LOW 000B  
                                    fsr0h 0FEA                                      fsr1h 0FE2  
                                    indf0 0FEF                                      fsr2h 0FDA  
                                    fsr0l 0FE9                                      indf2 0FDF  
                                    fsr1l 0FE1                                      fsr2l 0FD9  
                                    btemp 0068                          __end_of_ADC_Init 209E  
                                    prodh 0FF4                                      prodl 0FF3  
                                    start 000E                               led_init@led 004C  
                             led_init@pin 004E                              ___param_bank 0000  
              __end_of_ADC_Select_Channel 264A                                     ??_abs 0049  
          lcd_4bit_send_string_pos@column 0059                 ?_ADC_Select_Result_Format 0041  
                        __end_of_INT0_ISR 2814                          __end_of_INT1_ISR 2810  
                        __end_of_INT2_ISR 280C                                     ?_main 0032  
                       gpio_pin_write@pin 0041                         gpio_pin_write@ret 0048  
                         __end_of___awdiv 1A58                                     _EEADR 0FA9  
                         __end_of___awmod 1C78                           ___awdiv@divisor 0043  
                                   i2l252 235E                                     i2l256 23A0  
                                   i2l701 27D8                                     i2l710 27BE  
                                   i2l705 27D8                                     i2l714 27BE  
                                   i2l723 27A4                                     i2l732 278A  
                                   i2l719 27A4                                     i2l728 278A  
                                   i2l904 27EE                                     i2l497 2014  
                                   i2l692 280E                                     i2l688 2812  
                                   i2l696 280A                                     i2l866 26B4  
                                   i2l796 1336                           ___awdiv@counter 0045  
                                   i2l993 267E                                     i2l899 27F8  
                     relay_turn_off@F3077 0023                              vfpfcnvrt@fmt 004C  
                                   _TMR0H 0FD7                                     _TMR1H 0FCF  
                                   _TMR0L 0FD6                                     _TMR1L 0FCE  
                                   _TMR3H 0FB3                                     _TMR3L 0FB2  
                                   _PORTA 0F80                                     _PORTB 0F81  
                                   _PORTC 0F82                                     _PORTD 0F83  
                                   _PORTE 0F84                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TRISD 0F95                                     _TRISE 0F96  
                        ?_gpio_pin_toggle 0032                 lcd_4bit_set_cursor@column 0054  
           ?_lcd_4bits_send_enable_signal 0049                                     _flags 0021  
                                   _fputc 1C78                                     _width 00DB  
                                   _putch 2814                     ?_lcd_4bit_send_string 0052  
                                   pclath 0FFA                                     pclatu 0FFB  
                                   tablat 0FF5                         ADC_Get_Result@adc 0041  
                       __end_of_ADC_Start 2772                         ADC_Get_Result@ret 0046  
                                   ttemp5 0069                                     ttemp6 006C  
                                   ttemp7 0070                                     status 0FD8  
                                   wtemp8 0069                           __end_of_sprintf 2612  
            lcd_4bit_send_char_pos@column 0059                        gpio_pin_toggle@pin 0032  
                      gpio_pin_toggle@ret 0037                    _lcd_4bit_send_char_pos 24EE  
                         __initialization 2114                   ??_Timer1_RW_Mode_Select 0042  
                            __end_of_main 1BC8                             _lat_registers 008A  
                                  ??_main 0063                             __activetblptr 0003  
                        led_turn_on@F3083 0028                                 ??_RB4_ISR 0032  
                               ??_RB5_ISR 0032                                 ??_RB6_ISR 0032  
                               ??_RB7_ISR 0032                                    ?_fputc 0041  
                                  _ADRESH 0FC4                                    _EEADRH 0FAA  
                                  _ADRESL 0FC3                                    _EEDATA 0FA8  
                                  _EECON2 0FA7                          ___awdiv@dividend 0041  
                                  ?_putch 0032                                    i2l1034 2800  
                                  i2l1099 27E4                                    i2l2500 2808  
                                  i2l2504 27C2                                    i2l5000 1332  
                                  i2l2506 27C4                                    i2l2530 2790  
                                  i2l2516 27A8                                    i2l2540 2774  
                                  i2l2518 27AA                                    i2l2542 2776  
                                  i2l2528 278E                                    i2l4320 2686  
                                  i2l4162 27F0                                    i2l4322 268A  
                                  i2l4330 2650                                    i2l2492 2810  
                                  i2l4324 269C                                    i2l4316 2680  
                                  i2l4164 27E6                                    i2l4332 2654  
                                  i2l4318 2682                                    i2l4334 2666  
                                  i2l4326 264A                                    i2l4342 27DA  
                                  i2l2496 280C                                    i2l4328 264C  
                                  i2l4336 27FA                                    i2l4344 27DC  
                                  i2l4346 27E0                                    i2l4900 1104  
                                  i2l4910 113A                                    i2l4902 1114  
                                  i2l3880 1FBE                                    i2l4920 1170  
                                  i2l4912 1148                                    i2l4904 1118  
                                  i2l3882 1FC6                                    i2l4922 117E  
                                  i2l4930 11A6                                    i2l4914 1158  
                                  i2l4906 111E                                    i2l3884 2012  
                                  i2l3876 1F8A                                    i2l3980 235A  
                                  i2l4940 11E4                                    i2l4932 11B4  
                                  i2l4924 118C                                    i2l4916 115C  
                                  i2l4908 112C                                    i2l3878 1F9E  
                                  i2l3982 2362                                    i2l4950 1224  
                                  i2l4934 11C2                                    i2l4942 11EA  
                                  i2l4926 119C                                    i2l4918 1162  
                                  i2l4870 1056                                    i2l3984 2398  
                                  i2l4960 1258                                    i2l4952 1228  
                                  i2l4944 11F8                                    i2l4936 11D0  
                                  i2l4928 11A0                                    i2l4880 1092  
                                  i2l4872 1064                                    i2l4864 1036  
                                  i2l3978 234A                                    i2l4970 128E  
                                  i2l4962 1268                                    i2l4946 1206  
                                  i2l4954 122E                                    i2l4938 11E0  
                                  i2l4890 10D0                                    i2l4882 1096  
                                  i2l4874 1072                                    i2l4866 1044  
                                  i2l4980 12C4                                    i2l4972 129C  
                                  i2l4964 126C                                    i2l4956 123C  
                                  i2l4948 1214                                    i2l4892 10D4  
                                  i2l4884 10A4                                    i2l4876 1076  
                                  i2l4868 1052                                    i2l4990 12F6  
                                  i2l4982 12D2                                    i2l4974 12AC  
                                  i2l4958 124A                                    i2l4966 1272  
                                  i2l4886 10B2                                    i2l4894 10DA  
                                  i2l4878 1084                                    i2l4992 1304  
                                  i2l4984 12D6                                    i2l4976 12B0  
                                  i2l4968 1280                                    i2l4896 10E8  
                                  i2l4888 10C0                                    i2l4994 1312  
                                  i2l4986 12E4                                    i2l4978 12B6  
                                  i2l4898 10F6                                    i2l4996 1316  
                                  i2l4988 12F2                                    i2l4998 1324  
                           vfpfcnvrt@done 004F               __end_of_ADC_Select_Volt_Ref 24AE  
        __end_of_lcd_4bit_send_string_pos 23E6                             ??_Timer1_Init 0043  
                       __end_of_TIMR0_ISR 26B6                         __end_of_TIMR1_ISR 2680  
                       __end_of_TIMR2_ISR 2802                         __end_of_TIMR3_ISR 27E6  
                            vfprintf@cfmt 0059                          __end_of_led_init 1DC2  
                               ??___awdiv 0045                                 ??___awmod 0045  
                   __end_of_lcd_4bit_init 17AA                                    _memset 2720  
                                  clear_0 215A                                    clear_1 2166  
                        ___awdiv@quotient 0047                           ___awmod@divisor 0043  
                                  isa$std 0001                           ___awmod@counter 0045  
                           led_init@F3078 0029                                    fputc@c 0041  
                            __pdataCOMRAM 0063                                 ?_ADC_Init 0044  
                            __mediumconst 0000                                    tblptrh 0FF7  
                                  tblptrl 0FF6                                    tblptru 0FF8  
     __end_of_ADC_Get_Conversion_Blocking 234A               _ADC_Get_Conversion_Blocking 22EE  
                                  putch@c 0032                          __end_of_vfprintf 24EE  
                  ??_lcd_4bit_send_string 0055                                 ??_sprintf 0060  
                           RB4_ISR@RB_src 0032                                __accesstop 0080  
                 __end_of__initialization 216C                                 ?_INT0_ISR 0032  
                               ?_INT1_ISR 0032                                 ?_INT2_ISR 0032  
           ??_ADC_Get_Conversion_Blocking 004B                             ___rparam_used 0001  
                        ??_lcd_send_4bits 004B                            __pcstackCOMRAM 0032  
                   lcd_4bit_send_char@lcd 004F                     lcd_4bit_send_char@ret 0051  
                            __pidataBANK0 26B6                             RB5_ISR@RB_src 0032  
                           __end_of_fputc 1D22                             __end_of_putch 2816  
                     __end_of_Timer1_Init 1E60                   Timer1_Mode_Select@timer 0041  
ADC_Get_Conversion_Blocking@l_conv_status 004B                 lcd_4bit_init@pins_counter 0055  
                              ??_ADC_Init 0045                                   ??_fputc 0044  
                 lcd_4bit_send_string@lcd 0052                             RB6_ISR@RB_src 0032  
                 lcd_4bit_send_string@ret 0055                   lcd_4bit_send_string@str 0053  
                                 ??_putch 0041                                __pbssBANK0 00B5  
        __end_of_ADC_Select_Result_Format 242A                     _INT0_InterruptHandler 001F  
                              ??_INT0_ISR 0032                                ??_INT1_ISR 0032  
                              ??_INT2_ISR 0032           lcd_4bits_send_enable_signal@lcd 0049  
         lcd_4bits_send_enable_signal@ret 004A                        dc_motor_init@F3071 0031  
                      dc_motor_init@F3073 0030                         led_turn_off@F3088 0027  
                           RB7_ISR@RB_src 0032                             led_toggle@led 0038  
                           led_toggle@pin 003A                   lcd_send_4bits@_data_cmd 004A  
                     gpio_pin_write@logic 0042               convert_uint16_to_string@str 0062  
                         led_toggle@F3093 0026                                   ?_memset 0041  
                                 _RB4_ISR 27C0                                   _RB5_ISR 27A6  
                                 _RB6_ISR 278C                                   _RB7_ISR 2772  
               ?_lcd_4bit_send_string_pos 0056                 _RB6_InterruptHandler_HIGH 0011  
                      _ADC_Select_Channel 2612                             _keypad_values 1001  
                                 i2u95_40 27D4                                   i2u95_41 27D0  
                                 i2u96_40 27BA                                   i2u96_41 27B6  
                                 i2u97_40 27A0                                   i2u97_41 279C  
                                 i2u98_40 2786                                   i2u98_41 2782  
                               ?_led_init 004C                       ?_ADC_Select_Channel 0044  
                              _led_toggle 234A                            _tris_registers 0094  
                ??_gpio_pin_set_direction 0042                  _RB6_InterruptHandler_LOW 000F  
                 ?_lcd_4bit_send_char_pos 0056                                 _ADC_Start 2750  
                                 __Hparam 0000                               _Timer1_Init 1DC2  
                                 __Lparam 0000                       _gpio_pin_initialize 21D8  
                                 ___awdiv 1994                                   ___awmod 1BC8  
           __end_of_Timer1_RW_Mode_Select 25A0                      ??_ADC_Select_Channel 0046  
                               ?_vfprintf 0056                              __psmallconst 1000  
                                 __pcinit 2114                                   __ramtop 1000  
                                 __ptext0 1B14                                   __ptext1 1D22  
                                 __ptext2 23A2                                   __ptext3 1E60  
                                 __ptext4 24EE                                   __ptext5 1EF6  
                                 __ptext6 2236                                   __ptext7 1676  
                                 __ptext8 2292                                   __ptext9 2176  
                               _T0CONbits 0FD5                            _gpio_pin_write 1514  
                               _T1CONbits 0FCD                  _convert_uint16_to_string 242A  
                               _T2CONbits 0FCA                                 _T3CONbits 0FB1  
                        ___awmod@dividend 0041                                   _preload 0007  
                    ?_gpio_pin_initialize 0049                                   _sprintf 25DA  
                                 main@ret 00F6                            __pintcode_body 101C  
                              ??_led_init 004D                      end_of_initialization 216C  
                       lcd_send_4bits@lcd 0049                         lcd_send_4bits@ret 004D  
          __end_of_lcd_4bit_send_char_pos 252A                                   fputc@fp 0043  
                                 memset@c 0042                                   memset@n 0044  
                                 memset@p 0046                                   int_func 101C  
                            ADC_Start@adc 0041                              ADC_Start@ret 0042  
                      dc_motor_stop@F3092 002B                        dc_motor_stop@F3094 002A  
                              ?_ADC_Start 0041                         _Timer1_Osc_Config 25A0  
                _ADC_Select_Result_Format 23E6                __end_of_lcd_4bit_send_char 2292  
                       __end_of_vfpfcnvrt 1514                        ?_Timer1_Osc_Config 0041  
                              _timer0_obj 009E                                _timer0_int 27F0  
                              _timer1_obj 00A4                                   postdec1 0FE5  
                                 postdec2 0FDD                                _timer1_int 27E6  
                                 postinc0 0FEE                                   postinc1 0FE6  
                                 postinc2 0FDE                          vfpfcnvrt@convarg 0051  
                               _TIMR0_ISR 2680                                 _TIMR1_ISR 264A  
                               _TIMR2_ISR 27FA                                 _TIMR3_ISR 27DA  
                              ??_vfprintf 0059                    __end_of_gpio_pin_write 1676  
                   _INT1_InterruptHandler 001D                                 _PORTBbits 0F81  
                     ??_Timer1_Osc_Config 0042                            _ADC_Get_Result 1A58  
                        _InterruptManager 0008                   dc_motor_move_dir1@F3080 002E  
                 dc_motor_move_dir1@F3078 002F                   dc_motor_move_dir2@F3085 002D  
                 dc_motor_move_dir2@F3087 002C                    _TIMR0_InterruptHandler 0009  
                   ??_gpio_pin_initialize 004A                               ?_led_toggle 0038  
               ADC_Select_Channel@channel 0045                 __end_of_Timer1_Osc_Config 25DA  
              lcd_4bit_send_char_pos@data 0057                       _lcd_4bit_set_cursor 1EF6  
                      relay_turn_on@F3072 0024                    lcd_4bit_send_char@data 0050  
             lcd_4bit_send_string_pos@lcd 0056               lcd_4bit_send_string_pos@row 0058  
             lcd_4bit_send_string_pos@str 0057                                ?_TIMR0_ISR 0032  
                              ?_TIMR1_ISR 0032                                ?_TIMR2_ISR 0032  
                              ?_TIMR3_ISR 0032                               vfpfcnvrt@ap 004D  
                             vfpfcnvrt@cp 0050                    __end_of_ADC_Get_Result 1B14  
                             vfpfcnvrt@fp 004B                             __pidataCOMRAM 2802  
                         ?_gpio_pin_write 0041                            __end_of_memset 2750  
                     start_initialization 2114                      ?_lcd_4bit_set_cursor 0052  
           convert_uint16_to_string@value 0060                               __end_of_abs 2720  
                        Timer1_Init@timer 0042                __end_of_Timer1_Mode_Select 2114  
                             ??_ADC_Start 0042                         ??_gpio_pin_toggle 0033  
          ??_ADC_Input_Channel_Pin_Config 0041                               vfprintf@fmt 0057  
                             ?_timer0_int 0032                               ?_timer1_int 0032  
                             __pdataBANK0 0080                           ?_ADC_Get_Result 0041  
                                ??_memset 0046                                memset@dest 0041  
                  _gpio_pin_set_direction 17AA                                  ?_RB4_ISR 0032  
                                ?_RB5_ISR 0032                                  ?_RB6_ISR 0032  
                                ?_RB7_ISR 0032                               __pbssCOMRAM 0001  
                   ??_lcd_4bit_set_cursor 0055                             __pcstackBANK0 00E3  
                    lcd_4bit_send_cmd@cmd 0050                      lcd_4bit_send_cmd@lcd 004F  
                    lcd_4bit_send_cmd@ret 0051                     _INT2_InterruptHandler 001B  
          ??_lcd_4bits_send_enable_signal 004A            ADC_Get_Conversion_Blocking@adc 0048  
                            ?_Timer1_Init 0042            ADC_Get_Conversion_Blocking@ret 004C  
                  _TIMR1_InterruptHandler 0005       ADC_Input_Channel_Pin_Config@channel 0043  
                               __pintcode 0008                ??_convert_uint16_to_string 0063  
                                ?___awdiv 0041                                  ?___awmod 0041  
                             ??_TIMR0_ISR 003B                               ??_TIMR1_ISR 003B  
                             ??_TIMR2_ISR 0032                               ??_TIMR3_ISR 0032  
                           _lcd_4bit_init 1676                               __smallconst 1000  
               _RB4_InterruptHandler_HIGH 0019                    ADC_Select_Volt_Ref@adc 0041  
                                _ADC_Init 2016                 _RB7_InterruptHandler_HIGH 000D  
                             ADC_Init@adc 0044                                  ?_sprintf 005A  
              ??_ADC_Select_Result_Format 0042                  _RB5_InterruptHandler_LOW 0013  
                                _INT0_ISR 2810                                  _INT1_ISR 280C  
                                _INT2_ISR 2808                                  _RB4_Flag 0066  
                                _RB5_Flag 0065                                  _RB6_Flag 0064  
                                _RB7_Flag 0063                  __end_of_InterruptManager 1352  
                                _PIE1bits 0F9D                                  _PIE2bits 0FA0  
                                i2u307_40 235A                                  i2u307_41 2356  
                                i2u420_40 10B2                                  i2u420_41 10AE  
                                i2u421_40 10C0                                  i2u413_40 1044  
                                i2u421_41 10BC                                  i2u413_41 1040  
                                i2u430_40 1158                                  i2u422_40 10D0  
                                i2u414_40 1052                                  i2u430_41 1154  
                                i2u422_41 10CC                                  i2u414_41 104E  
                                i2u431_40 1170                                  i2u423_40 10E8  
                                i2u415_40 1064                                  i2u431_41 116C  
                                i2u423_41 10E4                                  i2u415_41 1060  
                                i2u352_40 269C                                  i2u440_40 1206  
                                i2u432_40 117E                                  i2u424_40 10F6  
                                i2u416_40 1072                                  i2u352_41 2698  
                                i2u440_41 1202                                  i2u432_41 117A  
                                i2u424_41 10F2                                  i2u416_41 106E  
                                i2u441_40 1214                                  i2u433_40 118C  
                                i2u425_40 1104                                  i2u417_40 1084  
                                i2u441_41 1210                                  i2u433_41 1188  
                                i2u425_41 1100                                  i2u417_41 1080  
                                _PIR1bits 0F9E                                  i2u353_48 26A2  
                                i2u354_40 2666                                  i2u450_40 12AC  
                                i2u442_40 1224                                  i2u434_40 119C  
                                i2u426_40 1114                                  i2u418_40 1092  
                                i2u353_49 26B4                                  i2u354_41 2662  
                                i2u450_41 12A8                                  i2u442_41 1220  
                                i2u434_41 1198                                  i2u426_41 1110  
                                i2u418_41 108E                                  i2u451_40 12C4  
                                i2u443_40 123C                                  i2u435_40 11B4  
                                i2u427_40 112C                                  i2u419_40 10A4  
                                i2u451_41 12C0                                  i2u443_41 1238  
                                i2u435_41 11B0                                  i2u427_41 1128  
                                i2u419_41 10A0                                  _PIR2bits 0FA1  
                                i2u355_48 266C                                  i2u452_40 12D2  
                                i2u444_40 124A                                  i2u436_40 11C2  
                                i2u428_40 113A                                  i2u355_49 267E  
                                i2u452_41 12CE                                  i2u444_41 1246  
                                i2u436_41 11BE                                  i2u428_41 1136  
                                i2u453_40 12E4                                  i2u445_40 1258  
                                i2u437_40 11D0                                  i2u429_40 1148  
                                i2u453_41 12E0                                  i2u445_41 1254  
                                i2u437_41 11CC                                  i2u429_41 1144  
                                i2u454_40 12F2                                  i2u446_40 1268  
                                i2u438_40 11E0                                  i2u454_41 12EE  
                                i2u446_41 1264                                  i2u438_41 11DC  
                                i2u287_40 1F9E                                  i2u455_40 1304  
                                i2u447_40 1280                                  i2u439_40 11F8  
                                i2u287_41 1F9A                                  i2u455_41 1300  
                                i2u447_41 127C                                  i2u439_41 11F4  
                                i2u288_40 1FBE                                  i2u456_40 1312  
                                i2u448_40 128E                                  i2u288_41 1FBA  
                                i2u456_41 130E                                  i2u448_41 128A  
                                i2u457_40 1324                                  i2u449_40 129C  
                                i2u457_41 1320                                  i2u449_41 1298  
                                i2u289_44 1FE4                                  i2u289_45 1FE0  
                                i2u458_40 1332                                  i2u458_41 132E  
                               main@F3320 00D5                            ?_lcd_4bit_init 0052  
                               _vfpfcnvrt 1352                  _lcd_4bit_send_string_pos 23A2  
                   _Timer1_RW_Mode_Select 2566                                _ADCON0bits 0FC2  
                              _ADCON1bits 0FC1                                _ADCON2bits 0FC0  
                      _lcd_4bit_send_char 2236                 gpio_pin_set_direction@pin 0041  
               gpio_pin_set_direction@ret 0047                    gpio_pin_initialize@pin 0049  
                  gpio_pin_initialize@ret 004B                           relay_init@F3067 0025  
                              vfpfcnvrt@c 0055              ?_ADC_Get_Conversion_Blocking 0048  
                     ?_lcd_4bit_send_char 004F                               _INTCON2bits 0FF1  
                             _INTCON3bits 0FF0                                 copy_data0 2128  
                               copy_data1 2148                       _ADC_Select_Volt_Ref 246C  
                            ??_led_toggle 0039                                _EECON1bits 0FA6  
              Timer1_RW_Mode_Select@timer 0041                                  __Hrparam 0000  
             ADC_Select_Result_Format@adc 0041                                vfprintf@ap 0058  
                                __Lrparam 0000                                vfprintf@fp 0056  
                        ??_gpio_pin_write 0043                      ??_lcd_4bit_send_char 0051  
                    ?_ADC_Select_Volt_Ref 0041                    lcd_4bit_set_cursor@lcd 0052  
                  lcd_4bit_set_cursor@ret 0055                                ?_vfpfcnvrt 004B  
                  lcd_4bit_set_cursor@row 0053               __end_of_gpio_pin_initialize 2236  
                      __end_of_led_toggle 23A2                                sprintf@fmt 005B  
                  _TIMR2_InterruptHandler 00E1                                  __ptext10 252A  
                                __ptext11 21D8                                  __ptext20 26EC  
                                __ptext12 1514                                  __ptext21 1BC8  
                                __ptext13 17AA                                  __ptext30 23E6  
                                __ptext22 1994                                  __ptext14 242A  
                                __ptext31 22EE                                  __ptext23 2720  
                                __ptext15 25DA                                  __ptext40 27E6  
                                __ptext32 2750                                  __ptext24 1DC2  
                                __ptext16 24AE                                  __ptext41 2680  
                                __ptext33 2612                                  __ptext25 2566  
                                __ptext17 1352                                  __ptext50 280C  
                                __ptext42 27F0                                  __ptext34 18BC  
                                __ptext26 25A0                                  __ptext18 1C78  
                                __ptext51 2810                                  __ptext43 234A  
                                __ptext35 1A58                                  __ptext27 209E  
                                __ptext19 2814                                  __ptext44 1F8A  
                                __ptext28 2016                                  __ptext45 2772  
                                __ptext37 27DA                                  __ptext29 246C  
                                __ptext46 278C                                  __ptext38 27FA  
                                __ptext47 27A6                                  __ptext39 264A  
                                __ptext48 27C0                                  __ptext49 2808  
                  Timer1_Osc_Config@timer 0041                           _gpio_pin_toggle 1F8A  
                                _led_init 1D22                     ADC_Get_Result@adc_res 0042  
                        ??_ADC_Get_Result 0043          __end_of_convert_uint16_to_string 246C  
                         ??_lcd_4bit_init 0053                                  isa$xinst 0000  
                            ??_timer0_int 003B                              ??_timer1_int 003B  
                   ??_ADC_Select_Volt_Ref 0042                                  int$flags 0068  
            __end_of_lcd_4bit_send_string 1EF6                   ?_gpio_pin_set_direction 0041  
                                _vfprintf 24AE                         _lcd_4bit_send_cmd 2292  
                  ?_Timer1_RW_Mode_Select 0041                                  main@buff 00F0  
                          _lcd_send_4bits 2176                        _Timer1_Mode_Select 209E  
                      ?_lcd_4bit_send_cmd 004F                     __end_of_keypad_values 1011  
                              _INTCONbits 0FF2                  ??_lcd_4bit_send_char_pos 005A  
                     ?_Timer1_Mode_Select 0041                       ??_lcd_4bit_send_cmd 0051  
                                intlevel2 0000                        __end_of_timer0_int 27FA  
                      __end_of_timer1_int 27F0                                 sprintf@ap 00E3  
      ADC_Get_Conversion_Blocking@adc_res 004A        ADC_Get_Conversion_Blocking@channel 0049  
                   ADC_Select_Channel@adc 0044                     ADC_Select_Channel@ret 0047  
                    ??_Timer1_Mode_Select 0042            __end_of_gpio_pin_set_direction 18BC  
               __end_of_lcd_4bit_send_cmd 22EE                      _preload@timer1$F2331 0003  
                  __end_of_lcd_send_4bits 21D8                      _preload@timer2$F2504 0022  
                    _preload@timer3$F2677 0001                               ??_vfpfcnvrt 004E  
             __end_of_lcd_4bit_set_cursor 1F8A                                  sprintf@f 00E4  
                                sprintf@s 005A                   __end_of_gpio_pin_toggle 2016  
                          _port_registers 0080               lcd_send_4bits@l_pin_counter 004E  
    __end_of_ADC_Input_Channel_Pin_Config 1994              _ADC_Input_Channel_Pin_Config 18BC  
               lcd_4bit_send_char_pos@lcd 0056                 lcd_4bit_send_char_pos@ret 005A  
               lcd_4bit_send_char_pos@row 0058                         ?_InterruptManager 0032  
              ??_lcd_4bit_send_string_pos 005A                    _TIMR3_InterruptHandler 00DF  
