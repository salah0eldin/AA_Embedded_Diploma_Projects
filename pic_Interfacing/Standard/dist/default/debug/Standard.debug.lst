

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Aug 29 02:57:34 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,inline
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,inline
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,inline
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    59                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    60                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    61                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    62   000000                     
    63                           ; Generated 17/10/2023 GMT
    64                           ; 
    65                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    66                           ; All rights reserved.
    67                           ; 
    68                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    69                           ; 
    70                           ; Redistribution and use in source and binary forms, with or without modification, are
    71                           ; permitted provided that the following conditions are met:
    72                           ; 
    73                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    74                           ;        conditions and the following disclaimer.
    75                           ; 
    76                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    77                           ;        of conditions and the following disclaimer in the documentation and/or other
    78                           ;        materials provided with the distribution. Publication is not required when
    79                           ;        this file is used in an embedded application.
    80                           ; 
    81                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    82                           ;        software without specific prior written permission.
    83                           ; 
    84                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    85                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    86                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    87                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    88                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    89                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    90                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    91                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    92                           ; 
    93                           ; 
    94                           ; Code-generator required, PIC18F4620 Definitions
    95                           ; 
    96                           ; SFR Addresses
    97   000000                     
    98                           	psect	idataCOMRAM
    99   0024A8                     __pidataCOMRAM:
   100                           	callstack 0
   101                           
   102                           ;initializer for _tris_registers
   103   0024A8  92                 	db	146
   104   0024A9  0F                 	db	15
   105   0024AA  93                 	db	147
   106   0024AB  0F                 	db	15
   107   0024AC  94                 	db	148
   108   0024AD  0F                 	db	15
   109   0024AE  95                 	db	149
   110   0024AF  0F                 	db	15
   111   0024B0  96                 	db	150
   112   0024B1  0F                 	db	15
   113                           
   114                           ;initializer for _RB7_Flag
   115   0024B2  01                 	db	1
   116                           
   117                           ;initializer for _RB6_Flag
   118   0024B3  01                 	db	1
   119                           
   120                           ;initializer for _RB5_Flag
   121   0024B4  01                 	db	1
   122                           
   123                           ;initializer for _RB4_Flag
   124   0024B5  01                 	db	1
   125                           
   126                           ;initializer for _lcd1
   127   0024B6  2B                 	db	43
   128   0024B7  23                 	db	35
   129   0024B8  1B                 	db	27
   130   0024B9  13                 	db	19
   131   0024BA  0B                 	db	11
   132   0024BB  03                 	db	3
   133                           
   134                           ;initializer for _adc1
   135   0024BC  05                 	db	5
   136   0024BD  05                 	db	5
   137   0024BE  00                 	db	0
   138   0024BF  00                 	db	0
   139   0024C0  00                 	db	0
   140                           
   141                           ;initializer for _led1
   142   0024C1  88                 	db	136
   143                           
   144                           	psect	idataBANK0
   145   00252A                     __pidataBANK0:
   146                           	callstack 0
   147                           
   148                           ;initializer for _port_registers
   149   00252A  80                 	db	128
   150   00252B  0F                 	db	15
   151   00252C  81                 	db	129
   152   00252D  0F                 	db	15
   153   00252E  82                 	db	130
   154   00252F  0F                 	db	15
   155   002530  83                 	db	131
   156   002531  0F                 	db	15
   157   002532  84                 	db	132
   158   002533  0F                 	db	15
   159                           
   160                           ;initializer for _lat_registers
   161   002534  89                 	db	137
   162   002535  0F                 	db	15
   163   002536  8A                 	db	138
   164   002537  0F                 	db	15
   165   002538  8B                 	db	139
   166   002539  0F                 	db	15
   167   00253A  8C                 	db	140
   168   00253B  0F                 	db	15
   169   00253C  8D                 	db	141
   170   00253D  0F                 	db	15
   171                           
   172                           	psect	smallconst
   173   001000                     __psmallconst:
   174                           	callstack 0
   175   001000  00                 	db	0
   176   001001                     _keypad_values:
   177                           	callstack 0
   178   001001  37                 	db	55
   179   001002  38                 	db	56
   180   001003  39                 	db	57
   181   001004  2F                 	db	47
   182   001005  34                 	db	52
   183   001006  35                 	db	53
   184   001007  36                 	db	54
   185   001008  2A                 	db	42
   186   001009  31                 	db	49
   187   00100A  32                 	db	50
   188   00100B  33                 	db	51
   189   00100C  2D                 	db	45
   190   00100D  23                 	db	35
   191   00100E  30                 	db	48
   192   00100F  3D                 	db	61
   193   001010  2B                 	db	43
   194   001011                     __end_of_keypad_values:
   195                           	callstack 0
   196   000000                     _ADRESL	set	4035
   197   000000                     _ADRESH	set	4036
   198   000000                     _ADCON0bits	set	4034
   199   000000                     _EECON2	set	4007
   200   000000                     _INTCON2bits	set	4081
   201   000000                     _INTCON3bits	set	4080
   202   000000                     _INTCONbits	set	4082
   203   000000                     _PORTBbits	set	3969
   204   000000                     _PORTE	set	3972
   205   000000                     _PORTD	set	3971
   206   000000                     _PORTC	set	3970
   207   000000                     _PORTB	set	3969
   208   000000                     _PORTA	set	3968
   209   000000                     _LATA	set	3977
   210   000000                     _TRISA	set	3986
   211   000000                     _EECON1bits	set	4006
   212   000000                     _EEDATA	set	4008
   213   000000                     _EEADR	set	4009
   214   000000                     _EEADRH	set	4010
   215   000000                     _ADCON1bits	set	4033
   216   000000                     _TRISE	set	3990
   217   000000                     _TRISD	set	3989
   218   000000                     _TRISC	set	3988
   219   000000                     _TRISB	set	3987
   220   000000                     _LATE	set	3981
   221   000000                     _LATD	set	3980
   222   000000                     _LATC	set	3979
   223   000000                     _LATB	set	3978
   224   000000                     _ADCON2bits	set	4032
   225   001011                     STR_4:
   226   001011  20                 	db	32
   227   001012  20                 	db	32
   228   001013  20                 	db	32
   229   001014  20                 	db	32
   230   001015  20                 	db	32
   231   001016  00                 	db	0
   232   001017                     STR_1:
   233   001017  25                 	db	37
   234   001018  64                 	db	100	;'d'
   235   001019  00                 	db	0
   236   00101A  00                 	db	0	; dummy byte at the end
   237   000000                     
   238                           ; #config settings
   239                           
   240                           	psect	cinit
   241   001FBC                     __pcinit:
   242                           	callstack 0
   243   001FBC                     start_initialization:
   244                           	callstack 0
   245   001FBC                     __initialization:
   246                           	callstack 0
   247                           
   248                           ; Initialize objects allocated to BANK0 (20 bytes)
   249                           ; load TBLPTR registers with __pidataBANK0
   250   001FBC  0E2A               	movlw	low __pidataBANK0
   251   001FBE  6EF6               	movwf	tblptrl,c
   252   001FC0  0E25               	movlw	high __pidataBANK0
   253   001FC2  6EF7               	movwf	tblptrh,c
   254   001FC4  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   255   001FC6  6EF8               	movwf	tblptru,c
   256   001FC8  EE00  F0A6         	lfsr	0,__pdataBANK0
   257   001FCC  EE10 F014          	lfsr	1,20
   258   001FD0                     copy_data0:
   259   001FD0  0009               	tblrd		*+
   260   001FD2  CFF5 FFEE          	movff	tablat,postinc0
   261   001FD6  50E5               	movf	postdec1,w,c
   262   001FD8  50E1               	movf	fsr1l,w,c
   263   001FDA  E1FA               	bnz	copy_data0
   264                           
   265                           ; Initialize objects allocated to COMRAM (26 bytes)
   266                           ; load TBLPTR registers with __pidataCOMRAM
   267   001FDC  0EA8               	movlw	low __pidataCOMRAM
   268   001FDE  6EF6               	movwf	tblptrl,c
   269   001FE0  0E24               	movlw	high __pidataCOMRAM
   270   001FE2  6EF7               	movwf	tblptrh,c
   271   001FE4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   272   001FE6  6EF8               	movwf	tblptru,c
   273   001FE8  EE00  F05C         	lfsr	0,__pdataCOMRAM
   274   001FEC  EE10 F01A          	lfsr	1,26
   275   001FF0                     copy_data1:
   276   001FF0  0009               	tblrd		*+
   277   001FF2  CFF5 FFEE          	movff	tablat,postinc0
   278   001FF6  50E5               	movf	postdec1,w,c
   279   001FF8  50E1               	movf	fsr1l,w,c
   280   001FFA  E1FA               	bnz	copy_data1
   281                           
   282                           ; Clear objects allocated to BANK0 (38 bytes)
   283   001FFC  EE00  F080         	lfsr	0,__pbssBANK0
   284   002000  0E26               	movlw	38
   285   002002                     clear_0:
   286   002002  6AEE               	clrf	postinc0,c
   287   002004  06E8               	decf	wreg,f,c
   288   002006  E1FD               	bnz	clear_0
   289                           
   290                           ; Clear objects allocated to COMRAM (42 bytes)
   291   002008  EE00  F032         	lfsr	0,__pbssCOMRAM
   292   00200C  0E2A               	movlw	42
   293   00200E                     clear_1:
   294   00200E  6AEE               	clrf	postinc0,c
   295   002010  06E8               	decf	wreg,f,c
   296   002012  E1FD               	bnz	clear_1
   297   002014                     end_of_initialization:
   298                           	callstack 0
   299   002014                     __end_of__initialization:
   300                           	callstack 0
   301   002014  9076               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   302   002016  9276               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   303   002018  0100               	movlb	0
   304   00201A  EF71  F00C         	goto	_main	;jump to C main() function
   305                           
   306                           	psect	bssCOMRAM
   307   000032                     __pbssCOMRAM:
   308                           	callstack 0
   309   000032                     _width:
   310                           	callstack 0
   311   000032                     	ds	2
   312   000034                     _prec:
   313                           	callstack 0
   314   000034                     	ds	2
   315   000036                     _RB7_InterruptHandler_LOW:
   316                           	callstack 0
   317   000036                     	ds	2
   318   000038                     _RB7_InterruptHandler_HIGH:
   319                           	callstack 0
   320   000038                     	ds	2
   321   00003A                     _RB6_InterruptHandler_LOW:
   322                           	callstack 0
   323   00003A                     	ds	2
   324   00003C                     _RB6_InterruptHandler_HIGH:
   325                           	callstack 0
   326   00003C                     	ds	2
   327   00003E                     _RB5_InterruptHandler_LOW:
   328                           	callstack 0
   329   00003E                     	ds	2
   330   000040                     _RB5_InterruptHandler_HIGH:
   331                           	callstack 0
   332   000040                     	ds	2
   333   000042                     _RB4_InterruptHandler_LOW:
   334                           	callstack 0
   335   000042                     	ds	2
   336   000044                     _RB4_InterruptHandler_HIGH:
   337                           	callstack 0
   338   000044                     	ds	2
   339   000046                     _INT2_InterruptHandler:
   340                           	callstack 0
   341   000046                     	ds	2
   342   000048                     _INT1_InterruptHandler:
   343                           	callstack 0
   344   000048                     	ds	2
   345   00004A                     _INT0_InterruptHandler:
   346                           	callstack 0
   347   00004A                     	ds	2
   348   00004C                     _flags:
   349                           	callstack 0
   350   00004C                     	ds	1
   351   00004D                     relay_turn_off@F3077:
   352                           	callstack 0
   353   00004D                     	ds	1
   354   00004E                     relay_turn_on@F3072:
   355                           	callstack 0
   356   00004E                     	ds	1
   357   00004F                     relay_init@F3067:
   358                           	callstack 0
   359   00004F                     	ds	1
   360   000050                     led_toggle@F3093:
   361                           	callstack 0
   362   000050                     	ds	1
   363   000051                     led_turn_off@F3088:
   364                           	callstack 0
   365   000051                     	ds	1
   366   000052                     led_turn_on@F3083:
   367                           	callstack 0
   368   000052                     	ds	1
   369   000053                     led_init@F3078:
   370                           	callstack 0
   371   000053                     	ds	1
   372   000054                     dc_motor_stop@F3094:
   373                           	callstack 0
   374   000054                     	ds	1
   375   000055                     dc_motor_stop@F3092:
   376                           	callstack 0
   377   000055                     	ds	1
   378   000056                     dc_motor_move_dir2@F3087:
   379                           	callstack 0
   380   000056                     	ds	1
   381   000057                     dc_motor_move_dir2@F3085:
   382                           	callstack 0
   383   000057                     	ds	1
   384   000058                     dc_motor_move_dir1@F3080:
   385                           	callstack 0
   386   000058                     	ds	1
   387   000059                     dc_motor_move_dir1@F3078:
   388                           	callstack 0
   389   000059                     	ds	1
   390   00005A                     dc_motor_init@F3073:
   391                           	callstack 0
   392   00005A                     	ds	1
   393   00005B                     dc_motor_init@F3071:
   394                           	callstack 0
   395   00005B                     	ds	1
   396                           
   397                           	psect	dataCOMRAM
   398   00005C                     __pdataCOMRAM:
   399                           	callstack 0
   400   00005C                     _tris_registers:
   401                           	callstack 0
   402   00005C                     	ds	10
   403   000066                     _RB7_Flag:
   404                           	callstack 0
   405   000066                     	ds	1
   406   000067                     _RB6_Flag:
   407                           	callstack 0
   408   000067                     	ds	1
   409   000068                     _RB5_Flag:
   410                           	callstack 0
   411   000068                     	ds	1
   412   000069                     _RB4_Flag:
   413                           	callstack 0
   414   000069                     	ds	1
   415   00006A                     _lcd1:
   416                           	callstack 0
   417   00006A                     	ds	6
   418   000070                     _adc1:
   419                           	callstack 0
   420   000070                     	ds	5
   421   000075                     _led1:
   422                           	callstack 0
   423   000075                     	ds	1
   424                           
   425                           	psect	bssBANK0
   426   000080                     __pbssBANK0:
   427                           	callstack 0
   428   000080                     _dbuf:
   429                           	callstack 0
   430   000080                     	ds	32
   431   0000A0                     	ds	6
   432                           
   433                           	psect	dataBANK0
   434   0000A6                     __pdataBANK0:
   435                           	callstack 0
   436   0000A6                     _port_registers:
   437                           	callstack 0
   438   0000A6                     	ds	10
   439   0000B0                     _lat_registers:
   440                           	callstack 0
   441   0000B0                     	ds	10
   442                           
   443                           	psect	cstackBANK0
   444   0000BA                     __pcstackBANK0:
   445                           	callstack 0
   446   0000BA                     main@buff:
   447                           	callstack 0
   448                           
   449                           ; 6 bytes @ 0x0
   450   0000BA                     	ds	6
   451   0000C0                     main@ret:
   452                           	callstack 0
   453                           
   454                           ; 1 bytes @ 0x6
   455   0000C0                     	ds	1
   456   0000C1                     main@adc_res:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x7
   460   0000C1                     	ds	2
   461                           
   462                           	psect	cstackCOMRAM
   463   000001                     __pcstackCOMRAM:
   464                           	callstack 0
   465   000001                     RB4_ISR@RB_src:
   466                           	callstack 0
   467   000001                     RB5_ISR@RB_src:
   468                           	callstack 0
   469   000001                     RB6_ISR@RB_src:
   470                           	callstack 0
   471   000001                     RB7_ISR@RB_src:
   472                           	callstack 0
   473   000001                     
   474                           ; 1 bytes @ 0x0
   475   000001                     	ds	1
   476   000002                     ??_ADC_Input_Channel_Pin_Config:
   477   000002                     ?___awdiv:
   478                           	callstack 0
   479   000002                     ?___awmod:
   480                           	callstack 0
   481   000002                     gpio_pin_set_direction@pin:
   482                           	callstack 0
   483   000002                     gpio_pin_write@pin:
   484                           	callstack 0
   485   000002                     ADC_Start@adc:
   486                           	callstack 0
   487   000002                     ADC_Get_Result@adc:
   488                           	callstack 0
   489   000002                     ADC_Select_Result_Format@adc:
   490                           	callstack 0
   491   000002                     ADC_Select_Volt_Ref@adc:
   492                           	callstack 0
   493   000002                     memset@dest:
   494                           	callstack 0
   495   000002                     ___awdiv@dividend:
   496                           	callstack 0
   497   000002                     ___awmod@dividend:
   498                           	callstack 0
   499   000002                     fputc@c:
   500                           	callstack 0
   501                           
   502                           ; 2 bytes @ 0x1
   503   000002                     	ds	1
   504   000003                     ??_gpio_pin_set_direction:
   505   000003                     gpio_pin_write@logic:
   506                           	callstack 0
   507   000003                     ADC_Start@ret:
   508                           	callstack 0
   509   000003                     ADC_Get_Result@adc_res:
   510                           	callstack 0
   511   000003                     memset@c:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x2
   515   000003                     	ds	1
   516   000004                     ??_gpio_pin_write:
   517   000004                     ??_ADC_Get_Result:
   518   000004                     ADC_Input_Channel_Pin_Config@channel:
   519                           	callstack 0
   520   000004                     fputc@fp:
   521                           	callstack 0
   522   000004                     ___awdiv@divisor:
   523                           	callstack 0
   524   000004                     ___awmod@divisor:
   525                           	callstack 0
   526                           
   527                           ; 2 bytes @ 0x3
   528   000004                     	ds	1
   529   000005                     ??_fputc:
   530   000005                     ADC_Init@adc:
   531                           	callstack 0
   532   000005                     ADC_Select_Channel@adc:
   533                           	callstack 0
   534   000005                     memset@n:
   535                           	callstack 0
   536                           
   537                           ; 2 bytes @ 0x4
   538   000005                     	ds	1
   539   000006                     ??_ADC_Init:
   540   000006                     ADC_Select_Channel@channel:
   541                           	callstack 0
   542   000006                     ___awdiv@counter:
   543                           	callstack 0
   544   000006                     ___awmod@counter:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0x5
   548   000006                     	ds	1
   549   000007                     ??_ADC_Select_Channel:
   550   000007                     ADC_Get_Result@ret:
   551                           	callstack 0
   552   000007                     ___awdiv@sign:
   553                           	callstack 0
   554   000007                     ___awmod@sign:
   555                           	callstack 0
   556   000007                     memset@p:
   557                           	callstack 0
   558                           
   559                           ; 1 bytes @ 0x6
   560   000007                     	ds	1
   561   000008                     ?_abs:
   562                           	callstack 0
   563   000008                     gpio_pin_set_direction@ret:
   564                           	callstack 0
   565   000008                     ADC_Select_Channel@ret:
   566                           	callstack 0
   567   000008                     ___awdiv@quotient:
   568                           	callstack 0
   569   000008                     abs@a:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x7
   573   000008                     	ds	1
   574   000009                     gpio_pin_write@ret:
   575                           	callstack 0
   576   000009                     ADC_Get_Conversion_Blocking@adc:
   577                           	callstack 0
   578                           
   579                           ; 1 bytes @ 0x8
   580   000009                     	ds	1
   581   00000A                     ??_abs:
   582   00000A                     lcd_send_4bits@lcd:
   583                           	callstack 0
   584   00000A                     lcd_4bits_send_enable_signal@lcd:
   585                           	callstack 0
   586   00000A                     led_turn_on@led:
   587                           	callstack 0
   588   00000A                     led_turn_off@led:
   589                           	callstack 0
   590   00000A                     gpio_pin_initialize@pin:
   591                           	callstack 0
   592   00000A                     ADC_Get_Conversion_Blocking@channel:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x9
   596   00000A                     	ds	1
   597   00000B                     ??_gpio_pin_initialize:
   598   00000B                     ??_led_turn_on:
   599   00000B                     ??_led_turn_off:
   600   00000B                     lcd_send_4bits@_data_cmd:
   601                           	callstack 0
   602   00000B                     lcd_4bits_send_enable_signal@ret:
   603                           	callstack 0
   604   00000B                     ADC_Get_Conversion_Blocking@adc_res:
   605                           	callstack 0
   606                           
   607                           ; 1 bytes @ 0xA
   608   00000B                     	ds	1
   609   00000C                     ??_lcd_send_4bits:
   610   00000C                     led_turn_on@pin:
   611                           	callstack 0
   612   00000C                     led_turn_off@pin:
   613                           	callstack 0
   614   00000C                     gpio_pin_initialize@ret:
   615                           	callstack 0
   616   00000C                     ADC_Get_Conversion_Blocking@l_conv_status:
   617                           	callstack 0
   618   00000C                     vfpfcnvrt@fp:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0xB
   622   00000C                     	ds	1
   623   00000D                     led_init@led:
   624                           	callstack 0
   625   00000D                     ADC_Get_Conversion_Blocking@ret:
   626                           	callstack 0
   627   00000D                     vfpfcnvrt@fmt:
   628                           	callstack 0
   629                           
   630                           ; 1 bytes @ 0xC
   631   00000D                     	ds	1
   632   00000E                     ??_led_init:
   633   00000E                     lcd_send_4bits@ret:
   634                           	callstack 0
   635   00000E                     vfpfcnvrt@ap:
   636                           	callstack 0
   637                           
   638                           ; 1 bytes @ 0xD
   639   00000E                     	ds	1
   640   00000F                     ??_vfpfcnvrt:
   641   00000F                     lcd_send_4bits@l_pin_counter:
   642                           	callstack 0
   643   00000F                     led_init@pin:
   644                           	callstack 0
   645                           
   646                           ; 1 bytes @ 0xE
   647   00000F                     	ds	1
   648   000010                     lcd_4bit_send_cmd@lcd:
   649                           	callstack 0
   650   000010                     lcd_4bit_send_char@lcd:
   651                           	callstack 0
   652   000010                     vfpfcnvrt@done:
   653                           	callstack 0
   654                           
   655                           ; 1 bytes @ 0xF
   656   000010                     	ds	1
   657   000011                     lcd_4bit_send_cmd@cmd:
   658                           	callstack 0
   659   000011                     lcd_4bit_send_char@data:
   660                           	callstack 0
   661   000011                     vfpfcnvrt@cp:
   662                           	callstack 0
   663                           
   664                           ; 1 bytes @ 0x10
   665   000011                     	ds	1
   666   000012                     lcd_4bit_send_cmd@ret:
   667                           	callstack 0
   668   000012                     lcd_4bit_send_char@ret:
   669                           	callstack 0
   670   000012                     vfpfcnvrt@convarg:
   671                           	callstack 0
   672                           
   673                           ; 4 bytes @ 0x11
   674   000012                     	ds	1
   675   000013                     lcd_4bit_init@lcd:
   676                           	callstack 0
   677   000013                     lcd_4bit_send_string@lcd:
   678                           	callstack 0
   679   000013                     lcd_4bit_set_cursor@lcd:
   680                           	callstack 0
   681                           
   682                           ; 1 bytes @ 0x12
   683   000013                     	ds	1
   684   000014                     ??_lcd_4bit_init:
   685   000014                     lcd_4bit_set_cursor@row:
   686                           	callstack 0
   687   000014                     lcd_4bit_send_string@str:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x13
   691   000014                     	ds	1
   692   000015                     lcd_4bit_init@ret:
   693                           	callstack 0
   694   000015                     lcd_4bit_set_cursor@column:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x14
   698   000015                     	ds	1
   699   000016                     lcd_4bit_init@pins_counter:
   700                           	callstack 0
   701   000016                     lcd_4bit_send_string@ret:
   702                           	callstack 0
   703   000016                     lcd_4bit_set_cursor@ret:
   704                           	callstack 0
   705   000016                     vfpfcnvrt@c:
   706                           	callstack 0
   707                           
   708                           ; 1 bytes @ 0x15
   709   000016                     	ds	1
   710   000017                     ?_vfprintf:
   711                           	callstack 0
   712   000017                     lcd_4bit_send_char_pos@lcd:
   713                           	callstack 0
   714   000017                     lcd_4bit_send_string_pos@lcd:
   715                           	callstack 0
   716   000017                     vfprintf@fp:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x16
   720   000017                     	ds	1
   721   000018                     lcd_4bit_send_char_pos@data:
   722                           	callstack 0
   723   000018                     lcd_4bit_send_string_pos@str:
   724                           	callstack 0
   725   000018                     vfprintf@fmt:
   726                           	callstack 0
   727                           
   728                           ; 1 bytes @ 0x17
   729   000018                     	ds	1
   730   000019                     lcd_4bit_send_char_pos@row:
   731                           	callstack 0
   732   000019                     lcd_4bit_send_string_pos@row:
   733                           	callstack 0
   734   000019                     vfprintf@ap:
   735                           	callstack 0
   736                           
   737                           ; 1 bytes @ 0x18
   738   000019                     	ds	1
   739   00001A                     lcd_4bit_send_char_pos@column:
   740                           	callstack 0
   741   00001A                     lcd_4bit_send_string_pos@column:
   742                           	callstack 0
   743   00001A                     vfprintf@cfmt:
   744                           	callstack 0
   745                           
   746                           ; 1 bytes @ 0x19
   747   00001A                     	ds	1
   748   00001B                     ?_sprintf:
   749                           	callstack 0
   750   00001B                     lcd_4bit_send_char_pos@ret:
   751                           	callstack 0
   752   00001B                     sprintf@s:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x1A
   756   00001B                     	ds	1
   757   00001C                     sprintf@fmt:
   758                           	callstack 0
   759                           
   760                           ; 1 bytes @ 0x1B
   761   00001C                     	ds	5
   762   000021                     sprintf@ap:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0x20
   766   000021                     	ds	1
   767   000022                     sprintf@f:
   768                           	callstack 0
   769                           
   770                           ; 12 bytes @ 0x21
   771   000022                     	ds	12
   772   00002E                     convert_uint16_to_string@value:
   773                           	callstack 0
   774                           
   775                           ; 2 bytes @ 0x2D
   776   00002E                     	ds	2
   777   000030                     convert_uint16_to_string@str:
   778                           	callstack 0
   779                           
   780                           ; 1 bytes @ 0x2F
   781   000030                     	ds	1
   782   000031                     ??_main:
   783                           
   784                           ; 1 bytes @ 0x30
   785   000031                     	ds	1
   786                           
   787 ;;
   788 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   789 ;;
   790 ;; *************** function _main *****************
   791 ;; Defined at:
   792 ;;		line 48 in file "main.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;  buff            6    0[BANK0 ] unsigned char [6]
   797 ;;  adc_res         2    7[BANK0 ] unsigned short 
   798 ;;  ret             1    6[BANK0 ] volatile unsigned char 
   799 ;; Return value:  Size  Location     Type
   800 ;;                  2  429[None  ] int 
   801 ;; Registers used:
   802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   803 ;; Tracked objects:
   804 ;;		On entry : 0/0
   805 ;;		On exit  : 0/0
   806 ;;		Unchanged: 0/0
   807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   809 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Totals:         1       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;Total ram usage:       10 bytes
   813 ;; Hardware stack levels required when called: 8
   814 ;; This function calls:
   815 ;;		_ADC_Get_Conversion_Blocking
   816 ;;		_ADC_Init
   817 ;;		_convert_uint16_to_string
   818 ;;		_lcd_4bit_init
   819 ;;		_lcd_4bit_send_char
   820 ;;		_lcd_4bit_send_char_pos
   821 ;;		_lcd_4bit_send_string
   822 ;;		_lcd_4bit_send_string_pos
   823 ;;		_led_init
   824 ;;		_led_turn_off
   825 ;;		_led_turn_on
   826 ;; This function is called by:
   827 ;;		Startup code after reset
   828 ;; This function uses a non-reentrant model
   829 ;;
   830                           
   831                           	psect	text0
   832   0018E2                     __ptext0:
   833                           	callstack 0
   834   0018E2                     _main:
   835                           	callstack 23
   836   0018E2                     
   837                           ;main.c: 49:     led_init(&led1);
   838   0018E2  0E75               	movlw	low _led1
   839   0018E4  6E0D               	movwf	led_init@led^0,c
   840   0018E6  EC49  F00E         	call	_led_init	;wreg free
   841                           
   842                           ;main.c: 51:     lcd_4bit_init(&lcd1);
   843   0018EA  0E6A               	movlw	low _lcd1
   844   0018EC  6E13               	movwf	lcd_4bit_init@lcd^0,c
   845   0018EE  ECE2  F00A         	call	_lcd_4bit_init	;wreg free
   846                           
   847                           ;main.c: 53:     lcd_4bit_send_char(&lcd1, 'A');
   848   0018F2  0E6A               	movlw	low _lcd1
   849   0018F4  6E10               	movwf	lcd_4bit_send_char@lcd^0,c
   850   0018F6  0E41               	movlw	65
   851   0018F8  6E11               	movwf	lcd_4bit_send_char@data^0,c
   852   0018FA  EC6F  F010         	call	_lcd_4bit_send_char	;wreg free
   853                           
   854                           ;main.c: 55:     lcd_4bit_send_char_pos(&lcd1, 'C', 1, 2);
   855   0018FE  0E6A               	movlw	low _lcd1
   856   001900  6E17               	movwf	lcd_4bit_send_char_pos@lcd^0,c
   857   001902  0E43               	movlw	67
   858   001904  6E18               	movwf	lcd_4bit_send_char_pos@data^0,c
   859   001906  0E01               	movlw	1
   860   001908  6E19               	movwf	lcd_4bit_send_char_pos@row^0,c
   861   00190A  0E02               	movlw	2
   862   00190C  6E1A               	movwf	lcd_4bit_send_char_pos@column^0,c
   863   00190E  EC9F  F011         	call	_lcd_4bit_send_char_pos	;wreg free
   864   001912                     
   865                           ;main.c: 57:     (ADCON1bits.PCFG = 0x0E);
   866   001912  50C1               	movf	193,w,c	;volatile
   867   001914  0BF0               	andlw	-16
   868   001916  090E               	iorlw	14
   869   001918  6EC1               	movwf	193,c	;volatile
   870   00191A                     
   871                           ;main.c: 58:     ADC_Init(&adc1);
   872   00191A  0E70               	movlw	low _adc1
   873   00191C  6E05               	movwf	ADC_Init@adc^0,c
   874   00191E  EC2E  F00F         	call	_ADC_Init	;wreg free
   875   001922                     
   876                           ;main.c: 60:     uint16 adc_res = 0;
   877   001922  0E00               	movlw	0
   878   001924  0100               	movlb	0	; () banked
   879   001926  6FC2               	movwf	(main@adc_res+1)& (0+255),b
   880   001928  0E00               	movlw	0
   881   00192A  6FC1               	movwf	main@adc_res& (0+255),b
   882   00192C                     
   883                           ; BSR set to: 0
   884                           ;main.c: 62:     volatile Std_ReturnType ret = 0x01;
   885   00192C  0E01               	movlw	1
   886   00192E  6FC0               	movwf	main@ret& (0+255),b	;volatile
   887   001930                     l4976:
   888                           
   889                           ;main.c: 65:         led_turn_on(&led1);
   890   001930  0E75               	movlw	low _led1
   891   001932  6E0A               	movwf	led_turn_on@led^0,c
   892   001934  EC72  F00F         	call	_led_turn_on	;wreg free
   893   001938                     
   894                           ;main.c: 66:         _delay((unsigned long)((100)*(4000000UL/4000.0)));
   895   001938  0E82               	movlw	130
   896   00193A  6E31               	movwf	??_main^0,c
   897   00193C  0EDE               	movlw	222
   898   00193E                     u4537:
   899   00193E  2EE8               	decfsz	wreg,f,c
   900   001940  D7FE               	bra	u4537
   901   001942  2E31               	decfsz	??_main^0,f,c
   902   001944  D7FC               	bra	u4537
   903   001946                     
   904                           ;main.c: 67:         led_turn_off(&led1);
   905   001946  0E75               	movlw	low _led1
   906   001948  6E0A               	movwf	led_turn_off@led^0,c
   907   00194A  ECAB  F00F         	call	_led_turn_off	;wreg free
   908   00194E                     
   909                           ;main.c: 68:         _delay((unsigned long)((100)*(4000000UL/4000.0)));
   910   00194E  0E82               	movlw	130
   911   001950  6E31               	movwf	??_main^0,c
   912   001952  0EDE               	movlw	222
   913   001954                     u4547:
   914   001954  2EE8               	decfsz	wreg,f,c
   915   001956  D7FE               	bra	u4547
   916   001958  2E31               	decfsz	??_main^0,f,c
   917   00195A  D7FC               	bra	u4547
   918   00195C                     
   919                           ;main.c: 69:         ADC_Get_Conversion_Blocking(&adc1,ADC_CHANNEL_AN0,&adc_res);
   920   00195C  0E70               	movlw	low _adc1
   921   00195E  6E09               	movwf	ADC_Get_Conversion_Blocking@adc^0,c
   922   001960  0E00               	movlw	0
   923   001962  6E0A               	movwf	ADC_Get_Conversion_Blocking@channel^0,c
   924   001964  0EC1               	movlw	low main@adc_res
   925   001966  6E0B               	movwf	ADC_Get_Conversion_Blocking@adc_res^0,c
   926   001968  ECCB  F010         	call	_ADC_Get_Conversion_Blocking	;wreg free
   927   00196C                     
   928                           ;main.c: 70:         uint8 buff[6] = {0};
   929   00196C  EE20  F0BA         	lfsr	2,main@buff
   930   001970  0E05               	movlw	5
   931   001972                     u4481:
   932   001972  6ADE               	clrf	postinc2,c
   933   001974  06E8               	decf	wreg,f,c
   934   001976  E2FD               	bc	u4481
   935   001978                     
   936                           ;main.c: 71:         convert_uint16_to_string(adc_res,buff);
   937   001978  C0C1  F02E         	movff	main@adc_res,convert_uint16_to_string@value
   938   00197C  C0C2  F02F         	movff	main@adc_res+1,convert_uint16_to_string@value+1
   939   001980  0EBA               	movlw	low main@buff
   940   001982  6E30               	movwf	convert_uint16_to_string@str^0,c
   941   001984  EC3D  F011         	call	_convert_uint16_to_string	;wreg free
   942   001988                     
   943                           ;main.c: 72:         lcd_4bit_send_string_pos(&lcd1,buff,1,1);
   944   001988  0E6A               	movlw	low _lcd1
   945   00198A  6E17               	movwf	lcd_4bit_send_string_pos@lcd^0,c
   946   00198C  0EBA               	movlw	low main@buff
   947   00198E  6E18               	movwf	lcd_4bit_send_string_pos@str^0,c
   948   001990  0E01               	movlw	1
   949   001992  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
   950   001994  0E01               	movlw	1
   951   001996  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
   952   001998  ECF9  F010         	call	_lcd_4bit_send_string_pos	;wreg free
   953   00199C                     
   954                           ;main.c: 73:         lcd_4bit_send_string(&lcd1,"     ");
   955   00199C  0E6A               	movlw	low _lcd1
   956   00199E  6E13               	movwf	lcd_4bit_send_string@lcd^0,c
   957   0019A0  0E11               	movlw	low STR_4
   958   0019A2  6E14               	movwf	lcd_4bit_send_string@str^0,c
   959   0019A4  5014               	movf	lcd_4bit_send_string@str^0,w,c
   960   0019A6  A4D8               	btfss	status,2,c
   961   0019A8  0E10               	movlw	high __smallconst
   962   0019AA  6E15               	movwf	(lcd_4bit_send_string@str+1)^0,c
   963   0019AC  EC99  F00E         	call	_lcd_4bit_send_string	;wreg free
   964                           
   965                           ;main.c: 74:     }
   966   0019B0  EF98  F00C         	goto	l4976
   967   0019B4  EF07  F000         	goto	start
   968   0019B8                     __end_of_main:
   969                           	callstack 0
   970                           
   971 ;; *************** function _led_turn_on *****************
   972 ;; Defined at:
   973 ;;		line 56 in file "ECU_Layer/LED/led.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  led             1    9[COMRAM] PTR const struct .
   976 ;;		 -> led1(1), 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  pin             1   11[COMRAM] struct .
   979 ;;  ret             1    0        unsigned char 
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      unsigned char 
   982 ;; Registers used:
   983 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 0/0
   986 ;;		On exit  : 0/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   989 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   990 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   993 ;;Total ram usage:        3 bytes
   994 ;; Hardware stack levels used: 1
   995 ;; Hardware stack levels required when called: 3
   996 ;; This function calls:
   997 ;;		_gpio_pin_write
   998 ;; This function is called by:
   999 ;;		_main
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	text1
  1004   001EE4                     __ptext1:
  1005                           	callstack 0
  1006   001EE4                     _led_turn_on:
  1007                           	callstack 27
  1008   001EE4                     
  1009                           ;ECU_Layer/LED/led.c: 59:     if (((void*)0) == led) {
  1010   001EE4  500A               	movf	led_turn_on@led^0,w,c
  1011   001EE6  A4D8               	btfss	status,2,c
  1012   001EE8  EF78  F00F         	goto	u4141
  1013   001EEC  EF7A  F00F         	goto	u4140
  1014   001EF0                     u4141:
  1015   001EF0  EF7C  F00F         	goto	l238
  1016   001EF4                     u4140:
  1017   001EF4                     
  1018                           ;ECU_Layer/LED/led.c: 61:     } else {
  1019   001EF4  EFAA  F00F         	goto	l242
  1020   001EF8                     l238:
  1021                           
  1022                           ;ECU_Layer/LED/led.c: 62:         pin_config_t pin ={
  1023   001EF8  C052  F00C         	movff	led_turn_on@F3083,led_turn_on@pin
  1024   001EFC  500A               	movf	led_turn_on@led^0,w,c
  1025   001EFE  6ED9               	movwf	fsr2l,c
  1026   001F00  6ADA               	clrf	fsr2h,c
  1027   001F02  50DF               	movf	223,w,c
  1028   001F04  0B07               	andlw	7
  1029   001F06  6E0B               	movwf	??_led_turn_on^0,c
  1030   001F08  500C               	movf	led_turn_on@pin^0,w,c
  1031   001F0A  180B               	xorwf	??_led_turn_on^0,w,c
  1032   001F0C  0BF8               	andlw	-8
  1033   001F0E  180B               	xorwf	??_led_turn_on^0,w,c
  1034   001F10  6E0C               	movwf	led_turn_on@pin^0,c
  1035   001F12  500A               	movf	led_turn_on@led^0,w,c
  1036   001F14  6ED9               	movwf	fsr2l,c
  1037   001F16  6ADA               	clrf	fsr2h,c
  1038   001F18  30DF               	rrcf	223,w,c
  1039   001F1A  32E8               	rrcf	wreg,f,c
  1040   001F1C  32E8               	rrcf	wreg,f,c
  1041   001F1E  0B07               	andlw	7
  1042   001F20  6E0B               	movwf	??_led_turn_on^0,c
  1043   001F22  460B               	rlncf	??_led_turn_on^0,f,c
  1044   001F24  460B               	rlncf	??_led_turn_on^0,f,c
  1045   001F26  460B               	rlncf	??_led_turn_on^0,f,c
  1046   001F28  500C               	movf	led_turn_on@pin^0,w,c
  1047   001F2A  180B               	xorwf	??_led_turn_on^0,w,c
  1048   001F2C  0BC7               	andlw	-57
  1049   001F2E  180B               	xorwf	??_led_turn_on^0,w,c
  1050   001F30  6E0C               	movwf	led_turn_on@pin^0,c
  1051   001F32  0E0C               	movlw	low led_turn_on@pin
  1052   001F34  6E02               	movwf	gpio_pin_write@pin^0,c
  1053   001F36  500A               	movf	led_turn_on@led^0,w,c
  1054   001F38  6ED9               	movwf	fsr2l,c
  1055   001F3A  6ADA               	clrf	fsr2h,c
  1056   001F3C  ACDF               	btfss	indf2,6,c
  1057   001F3E  EFA3  F00F         	goto	u4151
  1058   001F42  EFA6  F00F         	goto	u4150
  1059   001F46                     u4151:
  1060   001F46  0E01               	movlw	1
  1061   001F48  EFA7  F00F         	goto	u4156
  1062   001F4C                     u4150:
  1063   001F4C  0E00               	movlw	0
  1064   001F4E                     u4156:
  1065   001F4E  6E03               	movwf	gpio_pin_write@logic^0,c
  1066   001F50  EC31  F00A         	call	_gpio_pin_write	;wreg free
  1067   001F54                     l242:
  1068   001F54  0012               	return		;funcret
  1069   001F56                     __end_of_led_turn_on:
  1070                           	callstack 0
  1071                           
  1072 ;; *************** function _led_turn_off *****************
  1073 ;; Defined at:
  1074 ;;		line 80 in file "ECU_Layer/LED/led.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;  led             1    9[COMRAM] PTR const struct .
  1077 ;;		 -> led1(1), 
  1078 ;; Auto vars:     Size  Location     Type
  1079 ;;  pin             1   11[COMRAM] struct .
  1080 ;;  ret             1    0        unsigned char 
  1081 ;; Return value:  Size  Location     Type
  1082 ;;                  1    wreg      unsigned char 
  1083 ;; Registers used:
  1084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1085 ;; Tracked objects:
  1086 ;;		On entry : 0/0
  1087 ;;		On exit  : 0/0
  1088 ;;		Unchanged: 0/0
  1089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1090 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1092 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1093 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1094 ;;Total ram usage:        3 bytes
  1095 ;; Hardware stack levels used: 1
  1096 ;; Hardware stack levels required when called: 3
  1097 ;; This function calls:
  1098 ;;		_gpio_pin_write
  1099 ;; This function is called by:
  1100 ;;		_main
  1101 ;; This function uses a non-reentrant model
  1102 ;;
  1103                           
  1104                           	psect	text2
  1105   001F56                     __ptext2:
  1106                           	callstack 0
  1107   001F56                     _led_turn_off:
  1108                           	callstack 27
  1109   001F56                     
  1110                           ;ECU_Layer/LED/led.c: 83:     if (((void*)0) == led) {
  1111   001F56  500A               	movf	led_turn_off@led^0,w,c
  1112   001F58  A4D8               	btfss	status,2,c
  1113   001F5A  EFB1  F00F         	goto	u4161
  1114   001F5E  EFB3  F00F         	goto	u4160
  1115   001F62                     u4161:
  1116   001F62  EFB5  F00F         	goto	l245
  1117   001F66                     u4160:
  1118   001F66                     
  1119                           ;ECU_Layer/LED/led.c: 85:     } else {
  1120   001F66  EFDD  F00F         	goto	l249
  1121   001F6A                     l245:
  1122                           
  1123                           ;ECU_Layer/LED/led.c: 86:         pin_config_t pin ={
  1124   001F6A  C051  F00C         	movff	led_turn_off@F3088,led_turn_off@pin
  1125   001F6E  500A               	movf	led_turn_off@led^0,w,c
  1126   001F70  6ED9               	movwf	fsr2l,c
  1127   001F72  6ADA               	clrf	fsr2h,c
  1128   001F74  50DF               	movf	223,w,c
  1129   001F76  0B07               	andlw	7
  1130   001F78  6E0B               	movwf	??_led_turn_off^0,c
  1131   001F7A  500C               	movf	led_turn_off@pin^0,w,c
  1132   001F7C  180B               	xorwf	??_led_turn_off^0,w,c
  1133   001F7E  0BF8               	andlw	-8
  1134   001F80  180B               	xorwf	??_led_turn_off^0,w,c
  1135   001F82  6E0C               	movwf	led_turn_off@pin^0,c
  1136   001F84  500A               	movf	led_turn_off@led^0,w,c
  1137   001F86  6ED9               	movwf	fsr2l,c
  1138   001F88  6ADA               	clrf	fsr2h,c
  1139   001F8A  30DF               	rrcf	223,w,c
  1140   001F8C  32E8               	rrcf	wreg,f,c
  1141   001F8E  32E8               	rrcf	wreg,f,c
  1142   001F90  0B07               	andlw	7
  1143   001F92  6E0B               	movwf	??_led_turn_off^0,c
  1144   001F94  460B               	rlncf	??_led_turn_off^0,f,c
  1145   001F96  460B               	rlncf	??_led_turn_off^0,f,c
  1146   001F98  460B               	rlncf	??_led_turn_off^0,f,c
  1147   001F9A  500C               	movf	led_turn_off@pin^0,w,c
  1148   001F9C  180B               	xorwf	??_led_turn_off^0,w,c
  1149   001F9E  0BC7               	andlw	-57
  1150   001FA0  180B               	xorwf	??_led_turn_off^0,w,c
  1151   001FA2  6E0C               	movwf	led_turn_off@pin^0,c
  1152   001FA4  0E0C               	movlw	low led_turn_off@pin
  1153   001FA6  6E02               	movwf	gpio_pin_write@pin^0,c
  1154   001FA8  500A               	movf	led_turn_off@led^0,w,c
  1155   001FAA  6ED9               	movwf	fsr2l,c
  1156   001FAC  6ADA               	clrf	fsr2h,c
  1157   001FAE  0E00               	movlw	0
  1158   001FB0  BCDF               	btfsc	indf2,6,c
  1159   001FB2  0E01               	movlw	1
  1160   001FB4  6E03               	movwf	gpio_pin_write@logic^0,c
  1161   001FB6  EC31  F00A         	call	_gpio_pin_write	;wreg free
  1162   001FBA                     l249:
  1163   001FBA  0012               	return		;funcret
  1164   001FBC                     __end_of_led_turn_off:
  1165                           	callstack 0
  1166                           
  1167 ;; *************** function _led_init *****************
  1168 ;; Defined at:
  1169 ;;		line 30 in file "ECU_Layer/LED/led.c"
  1170 ;; Parameters:    Size  Location     Type
  1171 ;;  led             1   12[COMRAM] PTR const struct .
  1172 ;;		 -> led1(1), 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  pin             1   14[COMRAM] struct .
  1175 ;;  ret             1    0        unsigned char 
  1176 ;; Return value:  Size  Location     Type
  1177 ;;                  1    wreg      unsigned char 
  1178 ;; Registers used:
  1179 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1180 ;; Tracked objects:
  1181 ;;		On entry : 0/0
  1182 ;;		On exit  : 0/0
  1183 ;;		Unchanged: 0/0
  1184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1185 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1186 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1187 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1188 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1189 ;;Total ram usage:        3 bytes
  1190 ;; Hardware stack levels used: 1
  1191 ;; Hardware stack levels required when called: 4
  1192 ;; This function calls:
  1193 ;;		_gpio_pin_initialize
  1194 ;; This function is called by:
  1195 ;;		_main
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text3
  1200   001C92                     __ptext3:
  1201                           	callstack 0
  1202   001C92                     _led_init:
  1203                           	callstack 26
  1204   001C92                     
  1205                           ;ECU_Layer/LED/led.c: 33:     if (((void*)0) == led) {
  1206   001C92  500D               	movf	led_init@led^0,w,c
  1207   001C94  A4D8               	btfss	status,2,c
  1208   001C96  EF4F  F00E         	goto	u4091
  1209   001C9A  EF51  F00E         	goto	u4090
  1210   001C9E                     u4091:
  1211   001C9E  EF53  F00E         	goto	l231
  1212   001CA2                     u4090:
  1213   001CA2                     
  1214                           ;ECU_Layer/LED/led.c: 35:     } else {
  1215   001CA2  EF98  F00E         	goto	l235
  1216   001CA6                     l231:
  1217                           
  1218                           ;ECU_Layer/LED/led.c: 36:         pin_config_t pin ={
  1219   001CA6  C053  F00F         	movff	led_init@F3078,led_init@pin
  1220   001CAA  500D               	movf	led_init@led^0,w,c
  1221   001CAC  6ED9               	movwf	fsr2l,c
  1222   001CAE  6ADA               	clrf	fsr2h,c
  1223   001CB0  50DF               	movf	223,w,c
  1224   001CB2  0B07               	andlw	7
  1225   001CB4  6E0E               	movwf	??_led_init^0,c
  1226   001CB6  500F               	movf	led_init@pin^0,w,c
  1227   001CB8  180E               	xorwf	??_led_init^0,w,c
  1228   001CBA  0BF8               	andlw	-8
  1229   001CBC  180E               	xorwf	??_led_init^0,w,c
  1230   001CBE  6E0F               	movwf	led_init@pin^0,c
  1231   001CC0  500D               	movf	led_init@led^0,w,c
  1232   001CC2  6ED9               	movwf	fsr2l,c
  1233   001CC4  6ADA               	clrf	fsr2h,c
  1234   001CC6  30DF               	rrcf	223,w,c
  1235   001CC8  32E8               	rrcf	wreg,f,c
  1236   001CCA  32E8               	rrcf	wreg,f,c
  1237   001CCC  0B07               	andlw	7
  1238   001CCE  6E0E               	movwf	??_led_init^0,c
  1239   001CD0  460E               	rlncf	??_led_init^0,f,c
  1240   001CD2  460E               	rlncf	??_led_init^0,f,c
  1241   001CD4  460E               	rlncf	??_led_init^0,f,c
  1242   001CD6  500F               	movf	led_init@pin^0,w,c
  1243   001CD8  180E               	xorwf	??_led_init^0,w,c
  1244   001CDA  0BC7               	andlw	-57
  1245   001CDC  180E               	xorwf	??_led_init^0,w,c
  1246   001CDE  6E0F               	movwf	led_init@pin^0,c
  1247   001CE0  9C0F               	bcf	led_init@pin^0,6,c
  1248   001CE2  500D               	movf	led_init@led^0,w,c
  1249   001CE4  6ED9               	movwf	fsr2l,c
  1250   001CE6  6ADA               	clrf	fsr2h,c
  1251   001CE8  BCDF               	btfsc	indf2,6,c
  1252   001CEA  EF79  F00E         	goto	u4101
  1253   001CEE  EF7C  F00E         	goto	u4100
  1254   001CF2                     u4101:
  1255   001CF2  0E01               	movlw	1
  1256   001CF4  EF7D  F00E         	goto	u4102
  1257   001CF8                     u4100:
  1258   001CF8  0E00               	movlw	0
  1259   001CFA                     u4102:
  1260   001CFA  6E0E               	movwf	??_led_init^0,c
  1261   001CFC  500D               	movf	led_init@led^0,w,c
  1262   001CFE  6ED9               	movwf	fsr2l,c
  1263   001D00  6ADA               	clrf	fsr2h,c
  1264   001D02  BEDF               	btfsc	indf2,7,c
  1265   001D04  EF86  F00E         	goto	u4111
  1266   001D08  EF89  F00E         	goto	u4110
  1267   001D0C                     u4111:
  1268   001D0C  0E01               	movlw	1
  1269   001D0E  EF8A  F00E         	goto	u4112
  1270   001D12                     u4110:
  1271   001D12  0E00               	movlw	0
  1272   001D14                     u4112:
  1273   001D14  1A0E               	xorwf	??_led_init^0,f,c
  1274   001D16  A4D8               	btfss	status,2,c
  1275   001D18  EF90  F00E         	goto	u4121
  1276   001D1C  EF93  F00E         	goto	u4120
  1277   001D20                     u4121:
  1278   001D20  8E0F               	bsf	led_init@pin^0,7,c
  1279   001D22  EF94  F00E         	goto	u4135
  1280   001D26                     u4120:
  1281   001D26  9E0F               	bcf	led_init@pin^0,7,c
  1282   001D28                     u4135:
  1283   001D28  0E0F               	movlw	low led_init@pin
  1284   001D2A  6E0A               	movwf	gpio_pin_initialize@pin^0,c
  1285   001D2C  EC40  F010         	call	_gpio_pin_initialize	;wreg free
  1286   001D30                     l235:
  1287   001D30  0012               	return		;funcret
  1288   001D32                     __end_of_led_init:
  1289                           	callstack 0
  1290                           
  1291 ;; *************** function _lcd_4bit_send_string_pos *****************
  1292 ;; Defined at:
  1293 ;;		line 134 in file "ECU_Layer/Chr_LCD/chr_lcd.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;  lcd             1   22[COMRAM] PTR const struct .
  1296 ;;		 -> lcd1(6), 
  1297 ;;  str             1   23[COMRAM] PTR unsigned char 
  1298 ;;		 -> main@buff(6), 
  1299 ;;  row             1   24[COMRAM] unsigned char 
  1300 ;;  column          1   25[COMRAM] unsigned char 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  ret             1    0        unsigned char 
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      unsigned char 
  1305 ;; Registers used:
  1306 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1312 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1315 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1316 ;;Total ram usage:        4 bytes
  1317 ;; Hardware stack levels used: 1
  1318 ;; Hardware stack levels required when called: 6
  1319 ;; This function calls:
  1320 ;;		_lcd_4bit_send_string
  1321 ;;		_lcd_4bit_set_cursor
  1322 ;; This function is called by:
  1323 ;;		_main
  1324 ;; This function uses a non-reentrant model
  1325 ;;
  1326                           
  1327                           	psect	text4
  1328   0021F2                     __ptext4:
  1329                           	callstack 0
  1330   0021F2                     _lcd_4bit_send_string_pos:
  1331                           	callstack 24
  1332   0021F2                     
  1333                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 137:     if (((void*)0) == lcd || ((void*)0) == str) {
  1334   0021F2  5017               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  1335   0021F4  B4D8               	btfsc	status,2,c
  1336   0021F6  EFFF  F010         	goto	u4061
  1337   0021FA  EF01  F011         	goto	u4060
  1338   0021FE                     u4061:
  1339   0021FE  EF09  F011         	goto	l4592
  1340   002202                     u4060:
  1341   002202  5018               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1342   002204  A4D8               	btfss	status,2,c
  1343   002206  EF07  F011         	goto	u4071
  1344   00220A  EF09  F011         	goto	u4070
  1345   00220E                     u4071:
  1346   00220E  EF0B  F011         	goto	l4594
  1347   002212                     u4070:
  1348   002212                     l4592:
  1349                           
  1350                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 139:     } else {
  1351   002212  EF1A  F011         	goto	l97
  1352   002216                     l4594:
  1353   002216  C017  F013         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor@lcd
  1354   00221A  C019  F014         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor@row
  1355   00221E  C01A  F015         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor@column
  1356   002222  ECE4  F00E         	call	_lcd_4bit_set_cursor	;wreg free
  1357   002226  C017  F013         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_string@lcd
  1358   00222A  C018  F014         	movff	lcd_4bit_send_string_pos@str,lcd_4bit_send_string@str
  1359   00222E  6A15               	clrf	(lcd_4bit_send_string@str+1)^0,c
  1360   002230  EC99  F00E         	call	_lcd_4bit_send_string	;wreg free
  1361   002234                     l97:
  1362   002234  0012               	return		;funcret
  1363   002236                     __end_of_lcd_4bit_send_string_pos:
  1364                           	callstack 0
  1365                           
  1366 ;; *************** function _lcd_4bit_send_string *****************
  1367 ;; Defined at:
  1368 ;;		line 121 in file "ECU_Layer/Chr_LCD/chr_lcd.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  lcd             1   18[COMRAM] PTR const struct .
  1371 ;;		 -> lcd1(6), 
  1372 ;;  str             2   19[COMRAM] PTR unsigned char 
  1373 ;;		 -> STR_4(6), main@buff(6), 
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  ret             1   21[COMRAM] unsigned char 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      unsigned char 
  1378 ;; Registers used:
  1379 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1385 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1388 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1389 ;;Total ram usage:        4 bytes
  1390 ;; Hardware stack levels used: 1
  1391 ;; Hardware stack levels required when called: 5
  1392 ;; This function calls:
  1393 ;;		_lcd_4bit_send_char
  1394 ;; This function is called by:
  1395 ;;		_lcd_4bit_send_string_pos
  1396 ;;		_main
  1397 ;; This function uses a non-reentrant model
  1398 ;;
  1399                           
  1400                           	psect	text5
  1401   001D32                     __ptext5:
  1402                           	callstack 0
  1403   001D32                     _lcd_4bit_send_string:
  1404                           	callstack 24
  1405   001D32                     
  1406                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 122:     Std_ReturnType ret = 0x01;
  1407   001D32  0E01               	movlw	1
  1408   001D34  6E16               	movwf	lcd_4bit_send_string@ret^0,c
  1409                           
  1410                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 124:     if (((void*)0) == lcd || ((void*)0) == str) {
  1411   001D36  5013               	movf	lcd_4bit_send_string@lcd^0,w,c
  1412   001D38  B4D8               	btfsc	status,2,c
  1413   001D3A  EFA1  F00E         	goto	u3861
  1414   001D3E  EFA3  F00E         	goto	u3860
  1415   001D42                     u3861:
  1416   001D42  EFAC  F00E         	goto	l4448
  1417   001D46                     u3860:
  1418   001D46  5014               	movf	lcd_4bit_send_string@str^0,w,c
  1419   001D48  1015               	iorwf	(lcd_4bit_send_string@str+1)^0,w,c
  1420   001D4A  A4D8               	btfss	status,2,c
  1421   001D4C  EFAA  F00E         	goto	u3871
  1422   001D50  EFAC  F00E         	goto	u3870
  1423   001D54                     u3871:
  1424   001D54  EFC9  F00E         	goto	l4454
  1425   001D58                     u3870:
  1426   001D58                     l4448:
  1427                           
  1428                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 125:         ret = 0x00;
  1429   001D58  0E00               	movlw	0
  1430   001D5A  6E16               	movwf	lcd_4bit_send_string@ret^0,c
  1431                           
  1432                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 126:     } else {
  1433   001D5C  EFE2  F00E         	goto	l4456
  1434   001D60                     l4450:
  1435                           
  1436                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 128:             ret = lcd_4bit_send_char(lcd, *str++);
  1437   001D60  C013  F010         	movff	lcd_4bit_send_string@lcd,lcd_4bit_send_char@lcd
  1438   001D64  C014  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  1439   001D68  C015  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
  1440   001D6C  0E00               	movlw	low (__smallconst shr (0+16))
  1441   001D6E  6EF8               	movwf	tblptru,c
  1442   001D70  0E0F               	movlw	(high __ramtop+-1)
  1443   001D72  64F7               	cpfsgt	tblptrh,c
  1444   001D74  D003               	bra	u3887
  1445   001D76  0008               	tblrd		*
  1446   001D78  50F5               	movf	tablat,w,c
  1447   001D7A  D005               	bra	u3880
  1448   001D7C                     u3887:
  1449   001D7C  CFF6 FFE9          	movff	tblptrl,fsr0l
  1450   001D80  CFF7 FFEA          	movff	tblptrh,fsr0h
  1451   001D84  50EF               	movf	indf0,w,c
  1452   001D86                     u3880:
  1453   001D86  6E11               	movwf	lcd_4bit_send_char@data^0,c
  1454   001D88  EC6F  F010         	call	_lcd_4bit_send_char	;wreg free
  1455   001D8C  6E16               	movwf	lcd_4bit_send_string@ret^0,c
  1456   001D8E  4A14               	infsnz	lcd_4bit_send_string@str^0,f,c
  1457   001D90  2A15               	incf	(lcd_4bit_send_string@str+1)^0,f,c
  1458   001D92                     l4454:
  1459                           
  1460                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 127:         while (*str) {
  1461   001D92  C014  FFF6         	movff	lcd_4bit_send_string@str,tblptrl
  1462   001D96  C015  FFF7         	movff	lcd_4bit_send_string@str+1,tblptrh
  1463   001D9A  0E00               	movlw	low (__smallconst shr (0+16))
  1464   001D9C  6EF8               	movwf	tblptru,c
  1465   001D9E  0E0F               	movlw	(high __ramtop+-1)
  1466   001DA0  64F7               	cpfsgt	tblptrh,c
  1467   001DA2  D003               	bra	u3897
  1468   001DA4  0008               	tblrd		*
  1469   001DA6  50F5               	movf	tablat,w,c
  1470   001DA8  D005               	bra	u3890
  1471   001DAA                     u3897:
  1472   001DAA  CFF6 FFE9          	movff	tblptrl,fsr0l
  1473   001DAE  CFF7 FFEA          	movff	tblptrh,fsr0h
  1474   001DB2  50EF               	movf	indf0,w,c
  1475   001DB4                     u3890:
  1476   001DB4  0900               	iorlw	0
  1477   001DB6  A4D8               	btfss	status,2,c
  1478   001DB8  EFE0  F00E         	goto	u3901
  1479   001DBC  EFE2  F00E         	goto	u3900
  1480   001DC0                     u3901:
  1481   001DC0  EFB0  F00E         	goto	l4450
  1482   001DC4                     u3900:
  1483   001DC4                     l4456:
  1484                           
  1485                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 131:     return ret;
  1486   001DC4  5016               	movf	lcd_4bit_send_string@ret^0,w,c
  1487   001DC6  0012               	return		;funcret
  1488   001DC8                     __end_of_lcd_4bit_send_string:
  1489                           	callstack 0
  1490                           
  1491 ;; *************** function _lcd_4bit_send_char_pos *****************
  1492 ;; Defined at:
  1493 ;;		line 109 in file "ECU_Layer/Chr_LCD/chr_lcd.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;  lcd             1   22[COMRAM] PTR const struct .
  1496 ;;		 -> lcd1(6), 
  1497 ;;  data            1   23[COMRAM] unsigned char 
  1498 ;;  row             1   24[COMRAM] unsigned char 
  1499 ;;  column          1   25[COMRAM] unsigned char 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  ret             1   26[COMRAM] unsigned char 
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      unsigned char 
  1504 ;; Registers used:
  1505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : 0/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1511 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1512 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1513 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1514 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1515 ;;Total ram usage:        5 bytes
  1516 ;; Hardware stack levels used: 1
  1517 ;; Hardware stack levels required when called: 6
  1518 ;; This function calls:
  1519 ;;		_lcd_4bit_send_char
  1520 ;;		_lcd_4bit_set_cursor
  1521 ;; This function is called by:
  1522 ;;		_main
  1523 ;;		_lcd_4bit_send_custom_char
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           	psect	text6
  1528   00233E                     __ptext6:
  1529                           	callstack 0
  1530   00233E                     _lcd_4bit_send_char_pos:
  1531                           	callstack 24
  1532   00233E                     
  1533                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 112:     if (((void*)0) == lcd) {
  1534   00233E  5017               	movf	lcd_4bit_send_char_pos@lcd^0,w,c
  1535   002340  A4D8               	btfss	status,2,c
  1536   002342  EFA5  F011         	goto	u4051
  1537   002346  EFA7  F011         	goto	u4050
  1538   00234A                     u4051:
  1539   00234A  EFAB  F011         	goto	l4582
  1540   00234E                     u4050:
  1541   00234E                     
  1542                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 113:         ret = 0x00;
  1543   00234E  0E00               	movlw	0
  1544   002350  6E1B               	movwf	lcd_4bit_send_char_pos@ret^0,c
  1545                           
  1546                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 114:     } else {
  1547   002352  EFBB  F011         	goto	l4584
  1548   002356                     l4582:
  1549                           
  1550                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 115:         ret = lcd_4bit_set_cursor(lcd, row, column);
  1551   002356  C017  F013         	movff	lcd_4bit_send_char_pos@lcd,lcd_4bit_set_cursor@lcd
  1552   00235A  C019  F014         	movff	lcd_4bit_send_char_pos@row,lcd_4bit_set_cursor@row
  1553   00235E  C01A  F015         	movff	lcd_4bit_send_char_pos@column,lcd_4bit_set_cursor@column
  1554   002362  ECE4  F00E         	call	_lcd_4bit_set_cursor	;wreg free
  1555   002366  6E1B               	movwf	lcd_4bit_send_char_pos@ret^0,c
  1556                           
  1557                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 116:         ret = lcd_4bit_send_char(lcd, data);
  1558   002368  C017  F010         	movff	lcd_4bit_send_char_pos@lcd,lcd_4bit_send_char@lcd
  1559   00236C  C018  F011         	movff	lcd_4bit_send_char_pos@data,lcd_4bit_send_char@data
  1560   002370  EC6F  F010         	call	_lcd_4bit_send_char	;wreg free
  1561   002374  6E1B               	movwf	lcd_4bit_send_char_pos@ret^0,c
  1562   002376                     l4584:
  1563                           
  1564                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 118:     return ret;
  1565   002376  501B               	movf	lcd_4bit_send_char_pos@ret^0,w,c
  1566   002378  0012               	return		;funcret
  1567   00237A                     __end_of_lcd_4bit_send_char_pos:
  1568                           	callstack 0
  1569                           
  1570 ;; *************** function _lcd_4bit_set_cursor *****************
  1571 ;; Defined at:
  1572 ;;		line 334 in file "ECU_Layer/Chr_LCD/chr_lcd.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;  lcd             1   18[COMRAM] PTR const struct .
  1575 ;;		 -> lcd1(6), 
  1576 ;;  row             1   19[COMRAM] unsigned char 
  1577 ;;  column          1   20[COMRAM] unsigned char 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  ret             1   21[COMRAM] unsigned char 
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      unsigned char 
  1582 ;; Registers used:
  1583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1589 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1590 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1592 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1593 ;;Total ram usage:        4 bytes
  1594 ;; Hardware stack levels used: 1
  1595 ;; Hardware stack levels required when called: 5
  1596 ;; This function calls:
  1597 ;;		_lcd_4bit_send_cmd
  1598 ;; This function is called by:
  1599 ;;		_lcd_4bit_send_char_pos
  1600 ;;		_lcd_4bit_send_string_pos
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           	psect	text7
  1605   001DC8                     __ptext7:
  1606                           	callstack 0
  1607   001DC8                     _lcd_4bit_set_cursor:
  1608                           	callstack 24
  1609   001DC8                     
  1610                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 336:     column--;
  1611   001DC8  0615               	decf	lcd_4bit_set_cursor@column^0,f,c
  1612   001DCA                     
  1613                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 338:     if (((void*)0) == lcd) {
  1614   001DCA  5013               	movf	lcd_4bit_set_cursor@lcd^0,w,c
  1615   001DCC  A4D8               	btfss	status,2,c
  1616   001DCE  EFEB  F00E         	goto	u3851
  1617   001DD2  EFED  F00E         	goto	u3850
  1618   001DD6                     u3851:
  1619   001DD6  EF19  F00F         	goto	l4438
  1620   001DDA                     u3850:
  1621   001DDA                     l4424:
  1622                           
  1623                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 339:         ret = 0x00;
  1624   001DDA  0E00               	movlw	0
  1625   001DDC  6E16               	movwf	lcd_4bit_set_cursor@ret^0,c
  1626                           
  1627                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 340:     } else {
  1628   001DDE  EF2C  F00F         	goto	l4440
  1629   001DE2                     l4426:
  1630                           
  1631                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 343:                 ret = lcd_4bit_send_cmd(lcd, (0x80 + 
      +                          column));
  1632   001DE2  C013  F010         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_cmd@lcd
  1633   001DE6  5015               	movf	lcd_4bit_set_cursor@column^0,w,c
  1634   001DE8  0F80               	addlw	128
  1635   001DEA  6E11               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1636   001DEC  EC9D  F010         	call	_lcd_4bit_send_cmd	;wreg free
  1637   001DF0  6E16               	movwf	lcd_4bit_set_cursor@ret^0,c
  1638                           
  1639                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 344:                 break;
  1640   001DF2  EF2C  F00F         	goto	l4440
  1641   001DF6                     l4428:
  1642                           
  1643                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 346:                 ret = lcd_4bit_send_cmd(lcd, (0xC0 + 
      +                          column));
  1644   001DF6  C013  F010         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_cmd@lcd
  1645   001DFA  5015               	movf	lcd_4bit_set_cursor@column^0,w,c
  1646   001DFC  0FC0               	addlw	192
  1647   001DFE  6E11               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1648   001E00  EC9D  F010         	call	_lcd_4bit_send_cmd	;wreg free
  1649   001E04  6E16               	movwf	lcd_4bit_set_cursor@ret^0,c
  1650                           
  1651                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 347:                 break;
  1652   001E06  EF2C  F00F         	goto	l4440
  1653   001E0A                     l4430:
  1654                           
  1655                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 349:                 ret = lcd_4bit_send_cmd(lcd, (0x94 + 
      +                          column));
  1656   001E0A  C013  F010         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_cmd@lcd
  1657   001E0E  5015               	movf	lcd_4bit_set_cursor@column^0,w,c
  1658   001E10  0F94               	addlw	148
  1659   001E12  6E11               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1660   001E14  EC9D  F010         	call	_lcd_4bit_send_cmd	;wreg free
  1661   001E18  6E16               	movwf	lcd_4bit_set_cursor@ret^0,c
  1662                           
  1663                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 350:                 break;
  1664   001E1A  EF2C  F00F         	goto	l4440
  1665   001E1E                     l4432:
  1666                           
  1667                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 352:                 ret = lcd_4bit_send_cmd(lcd, (0xD4 + 
      +                          column));
  1668   001E1E  C013  F010         	movff	lcd_4bit_set_cursor@lcd,lcd_4bit_send_cmd@lcd
  1669   001E22  5015               	movf	lcd_4bit_set_cursor@column^0,w,c
  1670   001E24  0FD4               	addlw	212
  1671   001E26  6E11               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1672   001E28  EC9D  F010         	call	_lcd_4bit_send_cmd	;wreg free
  1673   001E2C  6E16               	movwf	lcd_4bit_set_cursor@ret^0,c
  1674                           
  1675                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 353:                 break;
  1676   001E2E  EF2C  F00F         	goto	l4440
  1677   001E32                     l4438:
  1678   001E32  5014               	movf	lcd_4bit_set_cursor@row^0,w,c
  1679                           
  1680                           ; Switch size 1, requested type "simple"
  1681                           ; Number of cases is 4, Range of values is 1 to 4
  1682                           ; switch strategies available:
  1683                           ; Name         Instructions Cycles
  1684                           ; simple_byte           13     7 (average)
  1685                           ;	Chosen strategy is simple_byte
  1686   001E34  0A01               	xorlw	1	; case 1
  1687   001E36  B4D8               	btfsc	status,2,c
  1688   001E38  EFF1  F00E         	goto	l4426
  1689   001E3C  0A03               	xorlw	3	; case 2
  1690   001E3E  B4D8               	btfsc	status,2,c
  1691   001E40  EFFB  F00E         	goto	l4428
  1692   001E44  0A01               	xorlw	1	; case 3
  1693   001E46  B4D8               	btfsc	status,2,c
  1694   001E48  EF05  F00F         	goto	l4430
  1695   001E4C  0A07               	xorlw	7	; case 4
  1696   001E4E  B4D8               	btfsc	status,2,c
  1697   001E50  EF0F  F00F         	goto	l4432
  1698   001E54  EFED  F00E         	goto	l4424
  1699   001E58                     l4440:
  1700                           
  1701                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 359:     return ret;
  1702   001E58  5016               	movf	lcd_4bit_set_cursor@ret^0,w,c
  1703   001E5A  0012               	return		;funcret
  1704   001E5C                     __end_of_lcd_4bit_set_cursor:
  1705                           	callstack 0
  1706                           
  1707 ;; *************** function _lcd_4bit_send_char *****************
  1708 ;; Defined at:
  1709 ;;		line 92 in file "ECU_Layer/Chr_LCD/chr_lcd.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  lcd             1   15[COMRAM] PTR const struct .
  1712 ;;		 -> lcd1(6), 
  1713 ;;  data            1   16[COMRAM] unsigned char 
  1714 ;; Auto vars:     Size  Location     Type
  1715 ;;  ret             1   17[COMRAM] unsigned char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      unsigned char 
  1718 ;; Registers used:
  1719 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1729 ;;Total ram usage:        3 bytes
  1730 ;; Hardware stack levels used: 1
  1731 ;; Hardware stack levels required when called: 4
  1732 ;; This function calls:
  1733 ;;		_gpio_pin_write
  1734 ;;		_lcd_4bits_send_enable_signal
  1735 ;;		_lcd_send_4bits
  1736 ;; This function is called by:
  1737 ;;		_lcd_4bit_send_char_pos
  1738 ;;		_lcd_4bit_send_string
  1739 ;;		_main
  1740 ;;		_lcd_4bit_send_custom_char
  1741 ;; This function uses a non-reentrant model
  1742 ;;
  1743                           
  1744                           	psect	text8
  1745   0020DE                     __ptext8:
  1746                           	callstack 0
  1747   0020DE                     _lcd_4bit_send_char:
  1748                           	callstack 24
  1749   0020DE                     
  1750                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 95:     if (((void*)0) == lcd) {
  1751   0020DE  5010               	movf	lcd_4bit_send_char@lcd^0,w,c
  1752   0020E0  A4D8               	btfss	status,2,c
  1753   0020E2  EF75  F010         	goto	u3811
  1754   0020E6  EF77  F010         	goto	u3810
  1755   0020EA                     u3811:
  1756   0020EA  EF7B  F010         	goto	l4354
  1757   0020EE                     u3810:
  1758   0020EE                     
  1759                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 96:         ret = 0x00;
  1760   0020EE  0E00               	movlw	0
  1761   0020F0  6E12               	movwf	lcd_4bit_send_char@ret^0,c
  1762                           
  1763                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 97:     } else {
  1764   0020F2  EF9B  F010         	goto	l4356
  1765   0020F6                     l4354:
  1766                           
  1767                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 98:         ret = gpio_pin_write(&(lcd->lcd_rs), GPIO_HIGH
      +                          );
  1768   0020F6  C010  F002         	movff	lcd_4bit_send_char@lcd,gpio_pin_write@pin
  1769   0020FA  0E01               	movlw	1
  1770   0020FC  6E03               	movwf	gpio_pin_write@logic^0,c
  1771   0020FE  EC31  F00A         	call	_gpio_pin_write	;wreg free
  1772   002102  6E12               	movwf	lcd_4bit_send_char@ret^0,c
  1773                           
  1774                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 100:         ret = lcd_send_4bits(lcd, data >> 4);
  1775   002104  C010  F00A         	movff	lcd_4bit_send_char@lcd,lcd_send_4bits@lcd
  1776   002108  3811               	swapf	lcd_4bit_send_char@data^0,w,c
  1777   00210A  0B0F               	andlw	15
  1778   00210C  6E0B               	movwf	lcd_send_4bits@_data_cmd^0,c
  1779   00210E  EC0F  F010         	call	_lcd_send_4bits	;wreg free
  1780   002112  6E12               	movwf	lcd_4bit_send_char@ret^0,c
  1781                           
  1782                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 101:         ret = lcd_4bits_send_enable_signal(lcd);
  1783   002114  C010  F00A         	movff	lcd_4bit_send_char@lcd,lcd_4bits_send_enable_signal@lcd
  1784   002118  ECBD  F011         	call	_lcd_4bits_send_enable_signal	;wreg free
  1785   00211C  6E12               	movwf	lcd_4bit_send_char@ret^0,c
  1786                           
  1787                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 103:         ret = lcd_send_4bits(lcd, data);
  1788   00211E  C010  F00A         	movff	lcd_4bit_send_char@lcd,lcd_send_4bits@lcd
  1789   002122  C011  F00B         	movff	lcd_4bit_send_char@data,lcd_send_4bits@_data_cmd
  1790   002126  EC0F  F010         	call	_lcd_send_4bits	;wreg free
  1791   00212A  6E12               	movwf	lcd_4bit_send_char@ret^0,c
  1792                           
  1793                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 104:         ret = lcd_4bits_send_enable_signal(lcd);
  1794   00212C  C010  F00A         	movff	lcd_4bit_send_char@lcd,lcd_4bits_send_enable_signal@lcd
  1795   002130  ECBD  F011         	call	_lcd_4bits_send_enable_signal	;wreg free
  1796   002134  6E12               	movwf	lcd_4bit_send_char@ret^0,c
  1797   002136                     l4356:
  1798                           
  1799                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 106:     return ret;
  1800   002136  5012               	movf	lcd_4bit_send_char@ret^0,w,c
  1801   002138  0012               	return		;funcret
  1802   00213A                     __end_of_lcd_4bit_send_char:
  1803                           	callstack 0
  1804                           
  1805 ;; *************** function _lcd_4bit_init *****************
  1806 ;; Defined at:
  1807 ;;		line 30 in file "ECU_Layer/Chr_LCD/chr_lcd.c"
  1808 ;; Parameters:    Size  Location     Type
  1809 ;;  lcd             1   18[COMRAM] PTR struct .
  1810 ;;		 -> lcd1(6), 
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  pins_counter    1   21[COMRAM] unsigned char 
  1813 ;;  ret             1   20[COMRAM] unsigned char 
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      unsigned char 
  1816 ;; Registers used:
  1817 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1823 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1824 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1825 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1826 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1827 ;;Total ram usage:        4 bytes
  1828 ;; Hardware stack levels used: 1
  1829 ;; Hardware stack levels required when called: 5
  1830 ;; This function calls:
  1831 ;;		_gpio_pin_initialize
  1832 ;;		_lcd_4bit_send_cmd
  1833 ;; This function is called by:
  1834 ;;		_main
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text9
  1839   0015C4                     __ptext9:
  1840                           	callstack 0
  1841   0015C4                     _lcd_4bit_init:
  1842                           	callstack 25
  1843   0015C4                     
  1844                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 32:     uint8 pins_counter = 0;
  1845   0015C4  0E00               	movlw	0
  1846   0015C6  6E16               	movwf	lcd_4bit_init@pins_counter^0,c
  1847                           
  1848                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 34:     if (((void*)0) == lcd) {
  1849   0015C8  5013               	movf	lcd_4bit_init@lcd^0,w,c
  1850   0015CA  A4D8               	btfss	status,2,c
  1851   0015CC  EFEA  F00A         	goto	u4031
  1852   0015D0  EFEC  F00A         	goto	u4030
  1853   0015D4                     u4031:
  1854   0015D4  EFEE  F00A         	goto	l4538
  1855   0015D8                     u4030:
  1856   0015D8                     
  1857                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 36:     } else {
  1858   0015D8  EF7B  F00B         	goto	l65
  1859   0015DC                     l4538:
  1860                           
  1861                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 37:         lcd->lcd_rs.direction = GPIO_DIRECTION_OUTPUT;
  1862   0015DC  5013               	movf	lcd_4bit_init@lcd^0,w,c
  1863   0015DE  6ED9               	movwf	fsr2l,c
  1864   0015E0  6ADA               	clrf	fsr2h,c
  1865   0015E2  9CDF               	bcf	indf2,6,c
  1866                           
  1867                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 38:         lcd->lcd_rs.logic = GPIO_LOW;
  1868   0015E4  5013               	movf	lcd_4bit_init@lcd^0,w,c
  1869   0015E6  6ED9               	movwf	fsr2l,c
  1870   0015E8  6ADA               	clrf	fsr2h,c
  1871   0015EA  9EDF               	bcf	indf2,7,c
  1872   0015EC                     
  1873                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 39:         lcd->lcd_en.direction = GPIO_DIRECTION_OUTPUT;
  1874   0015EC  5013               	movf	lcd_4bit_init@lcd^0,w,c
  1875   0015EE  6ED9               	movwf	fsr2l,c
  1876   0015F0  6ADA               	clrf	fsr2h,c
  1877   0015F2  0E01               	movlw	1
  1878   0015F4  26D9               	addwf	fsr2l,f,c
  1879   0015F6  9CDF               	bcf	indf2,6,c
  1880   0015F8                     
  1881                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 40:         lcd->lcd_en.logic = GPIO_LOW;
  1882   0015F8  5013               	movf	lcd_4bit_init@lcd^0,w,c
  1883   0015FA  6ED9               	movwf	fsr2l,c
  1884   0015FC  6ADA               	clrf	fsr2h,c
  1885   0015FE  0E01               	movlw	1
  1886   001600  26D9               	addwf	fsr2l,f,c
  1887   001602  9EDF               	bcf	indf2,7,c
  1888   001604  C013  F00A         	movff	lcd_4bit_init@lcd,gpio_pin_initialize@pin
  1889   001608  EC40  F010         	call	_gpio_pin_initialize	;wreg free
  1890   00160C  2813               	incf	lcd_4bit_init@lcd^0,w,c
  1891   00160E  6E0A               	movwf	gpio_pin_initialize@pin^0,c
  1892   001610  EC40  F010         	call	_gpio_pin_initialize	;wreg free
  1893   001614                     
  1894                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 44:         for (pins_counter = 0; pins_counter < 4; pins_
      +                          counter++) {
  1895   001614  0E00               	movlw	0
  1896   001616  6E16               	movwf	lcd_4bit_init@pins_counter^0,c
  1897   001618                     l4554:
  1898                           
  1899                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 45:             lcd->lcd_data[pins_counter].direction = GP
      +                          IO_DIRECTION_OUTPUT;
  1900   001618  5013               	movf	lcd_4bit_init@lcd^0,w,c
  1901   00161A  2416               	addwf	lcd_4bit_init@pins_counter^0,w,c
  1902   00161C  6ED9               	movwf	fsr2l,c
  1903   00161E  6ADA               	clrf	fsr2h,c
  1904   001620  0E02               	movlw	2
  1905   001622  26D9               	addwf	fsr2l,f,c
  1906   001624  9CDF               	bcf	indf2,6,c
  1907                           
  1908                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 46:             lcd->lcd_data[pins_counter].logic = GPIO_L
      +                          OW;
  1909   001626  5013               	movf	lcd_4bit_init@lcd^0,w,c
  1910   001628  2416               	addwf	lcd_4bit_init@pins_counter^0,w,c
  1911   00162A  6ED9               	movwf	fsr2l,c
  1912   00162C  6ADA               	clrf	fsr2h,c
  1913   00162E  0E02               	movlw	2
  1914   001630  26D9               	addwf	fsr2l,f,c
  1915   001632  9EDF               	bcf	indf2,7,c
  1916   001634  5013               	movf	lcd_4bit_init@lcd^0,w,c
  1917   001636  2416               	addwf	lcd_4bit_init@pins_counter^0,w,c
  1918   001638  0F02               	addlw	2
  1919   00163A  6E0A               	movwf	gpio_pin_initialize@pin^0,c
  1920   00163C  EC40  F010         	call	_gpio_pin_initialize	;wreg free
  1921   001640                     
  1922                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 48:         }
  1923   001640  2A16               	incf	lcd_4bit_init@pins_counter^0,f,c
  1924   001642  0E03               	movlw	3
  1925   001644  6416               	cpfsgt	lcd_4bit_init@pins_counter^0,c
  1926   001646  EF27  F00B         	goto	u4041
  1927   00164A  EF29  F00B         	goto	u4040
  1928   00164E                     u4041:
  1929   00164E  EF0C  F00B         	goto	l4554
  1930   001652                     u4040:
  1931   001652                     
  1932                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 49:         _delay((unsigned long)((20)*(4000000UL/4000.0)
      +                          ));
  1933   001652  0E1A               	movlw	26
  1934   001654  6E14               	movwf	??_lcd_4bit_init^0,c
  1935   001656  0EF8               	movlw	248
  1936   001658                     u4557:
  1937   001658  2EE8               	decfsz	wreg,f,c
  1938   00165A  D7FE               	bra	u4557
  1939   00165C  2E14               	decfsz	??_lcd_4bit_init^0,f,c
  1940   00165E  D7FC               	bra	u4557
  1941   001660  D000               	nop2	
  1942   001662  C013  F010         	movff	lcd_4bit_init@lcd,lcd_4bit_send_cmd@lcd
  1943   001666  0E38               	movlw	56
  1944   001668  6E11               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1945   00166A  EC9D  F010         	call	_lcd_4bit_send_cmd	;wreg free
  1946   00166E                     
  1947                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 51:         _delay((unsigned long)((5)*(4000000UL/4000.0))
      +                          );
  1948   00166E  0E07               	movlw	7
  1949   001670  6E14               	movwf	??_lcd_4bit_init^0,c
  1950   001672  0E7D               	movlw	125
  1951   001674                     u4567:
  1952   001674  2EE8               	decfsz	wreg,f,c
  1953   001676  D7FE               	bra	u4567
  1954   001678  2E14               	decfsz	??_lcd_4bit_init^0,f,c
  1955   00167A  D7FC               	bra	u4567
  1956   00167C  0000               	nop	
  1957   00167E  C013  F010         	movff	lcd_4bit_init@lcd,lcd_4bit_send_cmd@lcd
  1958   001682  0E38               	movlw	56
  1959   001684  6E11               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1960   001686  EC9D  F010         	call	_lcd_4bit_send_cmd	;wreg free
  1961   00168A                     
  1962                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 53:         _delay((unsigned long)((120)*(4000000UL/400000
      +                          0.0)));
  1963   00168A  0E28               	movlw	40
  1964   00168C                     u4577:
  1965   00168C  2EE8               	decfsz	wreg,f,c
  1966   00168E  D7FE               	bra	u4577
  1967   001690  C013  F010         	movff	lcd_4bit_init@lcd,lcd_4bit_send_cmd@lcd
  1968   001694  0E38               	movlw	56
  1969   001696  6E11               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1970   001698  EC9D  F010         	call	_lcd_4bit_send_cmd	;wreg free
  1971   00169C  C013  F010         	movff	lcd_4bit_init@lcd,lcd_4bit_send_cmd@lcd
  1972   0016A0  0E01               	movlw	1
  1973   0016A2  6E11               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1974   0016A4  EC9D  F010         	call	_lcd_4bit_send_cmd	;wreg free
  1975   0016A8                     
  1976                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 57:         _delay((unsigned long)((1)*(4000000UL/4000.0))
      +                          );
  1977   0016A8  0EC8               	movlw	200
  1978   0016AA                     u4587:
  1979   0016AA  D000               	nop2	
  1980   0016AC  2EE8               	decfsz	wreg,f,c
  1981   0016AE  D7FD               	bra	u4587
  1982                           
  1983                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 58:         ret = lcd_4bit_send_cmd(lcd, 0x02);
  1984   0016B0  C013  F010         	movff	lcd_4bit_init@lcd,lcd_4bit_send_cmd@lcd
  1985   0016B4  0E02               	movlw	2
  1986   0016B6  6E11               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1987   0016B8  EC9D  F010         	call	_lcd_4bit_send_cmd	;wreg free
  1988   0016BC  6E15               	movwf	lcd_4bit_init@ret^0,c
  1989                           
  1990                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 59:         ret = lcd_4bit_send_cmd(lcd, 0x06);
  1991   0016BE  C013  F010         	movff	lcd_4bit_init@lcd,lcd_4bit_send_cmd@lcd
  1992   0016C2  0E06               	movlw	6
  1993   0016C4  6E11               	movwf	lcd_4bit_send_cmd@cmd^0,c
  1994   0016C6  EC9D  F010         	call	_lcd_4bit_send_cmd	;wreg free
  1995   0016CA  6E15               	movwf	lcd_4bit_init@ret^0,c
  1996                           
  1997                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 60:         ret = lcd_4bit_send_cmd(lcd, 0x0C);
  1998   0016CC  C013  F010         	movff	lcd_4bit_init@lcd,lcd_4bit_send_cmd@lcd
  1999   0016D0  0E0C               	movlw	12
  2000   0016D2  6E11               	movwf	lcd_4bit_send_cmd@cmd^0,c
  2001   0016D4  EC9D  F010         	call	_lcd_4bit_send_cmd	;wreg free
  2002   0016D8  6E15               	movwf	lcd_4bit_init@ret^0,c
  2003                           
  2004                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 61:         ret = lcd_4bit_send_cmd(lcd, 0x28);
  2005   0016DA  C013  F010         	movff	lcd_4bit_init@lcd,lcd_4bit_send_cmd@lcd
  2006   0016DE  0E28               	movlw	40
  2007   0016E0  6E11               	movwf	lcd_4bit_send_cmd@cmd^0,c
  2008   0016E2  EC9D  F010         	call	_lcd_4bit_send_cmd	;wreg free
  2009   0016E6  6E15               	movwf	lcd_4bit_init@ret^0,c
  2010                           
  2011                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 62:         ret = lcd_4bit_send_cmd(lcd, 0x80);
  2012   0016E8  C013  F010         	movff	lcd_4bit_init@lcd,lcd_4bit_send_cmd@lcd
  2013   0016EC  0E80               	movlw	128
  2014   0016EE  6E11               	movwf	lcd_4bit_send_cmd@cmd^0,c
  2015   0016F0  EC9D  F010         	call	_lcd_4bit_send_cmd	;wreg free
  2016   0016F4  6E15               	movwf	lcd_4bit_init@ret^0,c
  2017   0016F6                     l65:
  2018   0016F6  0012               	return		;funcret
  2019   0016F8                     __end_of_lcd_4bit_init:
  2020                           	callstack 0
  2021                           
  2022 ;; *************** function _lcd_4bit_send_cmd *****************
  2023 ;; Defined at:
  2024 ;;		line 71 in file "ECU_Layer/Chr_LCD/chr_lcd.c"
  2025 ;; Parameters:    Size  Location     Type
  2026 ;;  lcd             1   15[COMRAM] PTR const struct .
  2027 ;;		 -> lcd1(6), 
  2028 ;;  cmd             1   16[COMRAM] unsigned char 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;  ret             1   17[COMRAM] unsigned char 
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  1    wreg      unsigned char 
  2033 ;; Registers used:
  2034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2040 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2041 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2043 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2044 ;;Total ram usage:        3 bytes
  2045 ;; Hardware stack levels used: 1
  2046 ;; Hardware stack levels required when called: 4
  2047 ;; This function calls:
  2048 ;;		_gpio_pin_write
  2049 ;;		_lcd_4bits_send_enable_signal
  2050 ;;		_lcd_send_4bits
  2051 ;; This function is called by:
  2052 ;;		_lcd_4bit_init
  2053 ;;		_lcd_4bit_set_cursor
  2054 ;;		_lcd_4bit_send_custom_char
  2055 ;; This function uses a non-reentrant model
  2056 ;;
  2057                           
  2058                           	psect	text10
  2059   00213A                     __ptext10:
  2060                           	callstack 0
  2061   00213A                     _lcd_4bit_send_cmd:
  2062                           	callstack 24
  2063   00213A                     
  2064                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 74:     if (((void*)0) == lcd) {
  2065   00213A  5010               	movf	lcd_4bit_send_cmd@lcd^0,w,c
  2066   00213C  A4D8               	btfss	status,2,c
  2067   00213E  EFA3  F010         	goto	u3801
  2068   002142  EFA5  F010         	goto	u3800
  2069   002146                     u3801:
  2070   002146  EFA9  F010         	goto	l4344
  2071   00214A                     u3800:
  2072   00214A                     
  2073                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 75:         ret = 0x00;
  2074   00214A  0E00               	movlw	0
  2075   00214C  6E12               	movwf	lcd_4bit_send_cmd@ret^0,c
  2076                           
  2077                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 76:     } else {
  2078   00214E  EFC9  F010         	goto	l4346
  2079   002152                     l4344:
  2080                           
  2081                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 77:         ret = gpio_pin_write(&(lcd->lcd_rs), GPIO_LOW)
      +                          ;
  2082   002152  C010  F002         	movff	lcd_4bit_send_cmd@lcd,gpio_pin_write@pin
  2083   002156  0E00               	movlw	0
  2084   002158  6E03               	movwf	gpio_pin_write@logic^0,c
  2085   00215A  EC31  F00A         	call	_gpio_pin_write	;wreg free
  2086   00215E  6E12               	movwf	lcd_4bit_send_cmd@ret^0,c
  2087                           
  2088                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 79:         ret = lcd_send_4bits(lcd, cmd >> 4);
  2089   002160  C010  F00A         	movff	lcd_4bit_send_cmd@lcd,lcd_send_4bits@lcd
  2090   002164  3811               	swapf	lcd_4bit_send_cmd@cmd^0,w,c
  2091   002166  0B0F               	andlw	15
  2092   002168  6E0B               	movwf	lcd_send_4bits@_data_cmd^0,c
  2093   00216A  EC0F  F010         	call	_lcd_send_4bits	;wreg free
  2094   00216E  6E12               	movwf	lcd_4bit_send_cmd@ret^0,c
  2095                           
  2096                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 80:         ret = lcd_4bits_send_enable_signal(lcd);
  2097   002170  C010  F00A         	movff	lcd_4bit_send_cmd@lcd,lcd_4bits_send_enable_signal@lcd
  2098   002174  ECBD  F011         	call	_lcd_4bits_send_enable_signal	;wreg free
  2099   002178  6E12               	movwf	lcd_4bit_send_cmd@ret^0,c
  2100                           
  2101                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 82:         ret = lcd_send_4bits(lcd, cmd);
  2102   00217A  C010  F00A         	movff	lcd_4bit_send_cmd@lcd,lcd_send_4bits@lcd
  2103   00217E  C011  F00B         	movff	lcd_4bit_send_cmd@cmd,lcd_send_4bits@_data_cmd
  2104   002182  EC0F  F010         	call	_lcd_send_4bits	;wreg free
  2105   002186  6E12               	movwf	lcd_4bit_send_cmd@ret^0,c
  2106                           
  2107                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 83:         ret = lcd_4bits_send_enable_signal(lcd);
  2108   002188  C010  F00A         	movff	lcd_4bit_send_cmd@lcd,lcd_4bits_send_enable_signal@lcd
  2109   00218C  ECBD  F011         	call	_lcd_4bits_send_enable_signal	;wreg free
  2110   002190  6E12               	movwf	lcd_4bit_send_cmd@ret^0,c
  2111   002192                     l4346:
  2112                           
  2113                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 85:     return ret;
  2114   002192  5012               	movf	lcd_4bit_send_cmd@ret^0,w,c
  2115   002194  0012               	return		;funcret
  2116   002196                     __end_of_lcd_4bit_send_cmd:
  2117                           	callstack 0
  2118                           
  2119 ;; *************** function _lcd_send_4bits *****************
  2120 ;; Defined at:
  2121 ;;		line 307 in file "ECU_Layer/Chr_LCD/chr_lcd.c"
  2122 ;; Parameters:    Size  Location     Type
  2123 ;;  lcd             1    9[COMRAM] PTR const struct .
  2124 ;;		 -> lcd1(6), 
  2125 ;;  _data_cmd       1   10[COMRAM] unsigned char 
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;  l_pin_counte    1   14[COMRAM] unsigned char 
  2128 ;;  ret             1   13[COMRAM] unsigned char 
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  1    wreg      unsigned char 
  2131 ;; Registers used:
  2132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2138 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;Total ram usage:        6 bytes
  2143 ;; Hardware stack levels used: 1
  2144 ;; Hardware stack levels required when called: 3
  2145 ;; This function calls:
  2146 ;;		_gpio_pin_write
  2147 ;; This function is called by:
  2148 ;;		_lcd_4bit_send_cmd
  2149 ;;		_lcd_4bit_send_char
  2150 ;; This function uses a non-reentrant model
  2151 ;;
  2152                           
  2153                           	psect	text11
  2154   00201E                     __ptext11:
  2155                           	callstack 0
  2156   00201E                     _lcd_send_4bits:
  2157                           	callstack 24
  2158   00201E                     
  2159                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 309:     uint8 l_pin_counter = 0;
  2160   00201E  0E00               	movlw	0
  2161   002020  6E0F               	movwf	lcd_send_4bits@l_pin_counter^0,c
  2162                           
  2163                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 311:     if (((void*)0) == lcd) {
  2164   002022  500A               	movf	lcd_send_4bits@lcd^0,w,c
  2165   002024  A4D8               	btfss	status,2,c
  2166   002026  EF17  F010         	goto	u3611
  2167   00202A  EF19  F010         	goto	u3610
  2168   00202E                     u3611:
  2169   00202E  EF1D  F010         	goto	l4242
  2170   002032                     u3610:
  2171   002032                     
  2172                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 312:         ret = 0x00;
  2173   002032  0E00               	movlw	0
  2174   002034  6E0E               	movwf	lcd_send_4bits@ret^0,c
  2175                           
  2176                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 313:     } else {
  2177   002036  EF3E  F010         	goto	l4254
  2178   00203A                     l4242:
  2179                           
  2180                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 314:         for (l_pin_counter = 0; l_pin_counter < 4; l_
      +                          pin_counter++) {
  2181   00203A  0E00               	movlw	0
  2182   00203C  6E0F               	movwf	lcd_send_4bits@l_pin_counter^0,c
  2183   00203E                     l4248:
  2184                           
  2185                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 315:             ret = gpio_pin_write(&(lcd->lcd_data[l_pi
      +                          n_counter]), (_data_cmd >> l_pin_counter) & 0x01);
  2186   00203E  500A               	movf	lcd_send_4bits@lcd^0,w,c
  2187   002040  240F               	addwf	lcd_send_4bits@l_pin_counter^0,w,c
  2188   002042  0F02               	addlw	2
  2189   002044  6E02               	movwf	gpio_pin_write@pin^0,c
  2190   002046  C00F  F00C         	movff	lcd_send_4bits@l_pin_counter,??_lcd_send_4bits
  2191   00204A  C00B  F00D         	movff	lcd_send_4bits@_data_cmd,??_lcd_send_4bits+1
  2192   00204E  2A0C               	incf	??_lcd_send_4bits^0,f,c
  2193   002050  EF2C  F010         	goto	u3624
  2194   002054                     u3625:
  2195   002054  90D8               	bcf	status,0,c
  2196   002056  320D               	rrcf	(??_lcd_send_4bits+1)^0,f,c
  2197   002058                     u3624:
  2198   002058  2E0C               	decfsz	??_lcd_send_4bits^0,f,c
  2199   00205A  EF2A  F010         	goto	u3625
  2200   00205E  500D               	movf	(??_lcd_send_4bits+1)^0,w,c
  2201   002060  0B01               	andlw	1
  2202   002062  6E03               	movwf	gpio_pin_write@logic^0,c
  2203   002064  EC31  F00A         	call	_gpio_pin_write	;wreg free
  2204   002068  6E0E               	movwf	lcd_send_4bits@ret^0,c
  2205   00206A                     
  2206                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 316:         }
  2207   00206A  2A0F               	incf	lcd_send_4bits@l_pin_counter^0,f,c
  2208   00206C  0E03               	movlw	3
  2209   00206E  640F               	cpfsgt	lcd_send_4bits@l_pin_counter^0,c
  2210   002070  EF3C  F010         	goto	u3631
  2211   002074  EF3E  F010         	goto	u3630
  2212   002078                     u3631:
  2213   002078  EF1F  F010         	goto	l4248
  2214   00207C                     u3630:
  2215   00207C                     l4254:
  2216                           
  2217                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 318:     return ret;
  2218   00207C  500E               	movf	lcd_send_4bits@ret^0,w,c
  2219   00207E  0012               	return		;funcret
  2220   002080                     __end_of_lcd_send_4bits:
  2221                           	callstack 0
  2222                           
  2223 ;; *************** function _lcd_4bits_send_enable_signal *****************
  2224 ;; Defined at:
  2225 ;;		line 321 in file "ECU_Layer/Chr_LCD/chr_lcd.c"
  2226 ;; Parameters:    Size  Location     Type
  2227 ;;  lcd             1    9[COMRAM] PTR const struct .
  2228 ;;		 -> lcd1(6), 
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;  ret             1   10[COMRAM] unsigned char 
  2231 ;; Return value:  Size  Location     Type
  2232 ;;                  1    wreg      unsigned char 
  2233 ;; Registers used:
  2234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2240 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2241 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2243 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2244 ;;Total ram usage:        2 bytes
  2245 ;; Hardware stack levels used: 1
  2246 ;; Hardware stack levels required when called: 3
  2247 ;; This function calls:
  2248 ;;		_gpio_pin_write
  2249 ;; This function is called by:
  2250 ;;		_lcd_4bit_send_cmd
  2251 ;;		_lcd_4bit_send_char
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           	psect	text12
  2256   00237A                     __ptext12:
  2257                           	callstack 0
  2258   00237A                     _lcd_4bits_send_enable_signal:
  2259                           	callstack 24
  2260   00237A                     
  2261                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 324:     if (((void*)0) == lcd) {
  2262   00237A  500A               	movf	lcd_4bits_send_enable_signal@lcd^0,w,c
  2263   00237C  A4D8               	btfss	status,2,c
  2264   00237E  EFC3  F011         	goto	u3641
  2265   002382  EFC5  F011         	goto	u3640
  2266   002386                     u3641:
  2267   002386  EFC9  F011         	goto	l4262
  2268   00238A                     u3640:
  2269   00238A                     
  2270                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 325:         ret = 0x00;
  2271   00238A  0E00               	movlw	0
  2272   00238C  6E0B               	movwf	lcd_4bits_send_enable_signal@ret^0,c
  2273                           
  2274                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 326:     } else {
  2275   00238E  EFD9  F011         	goto	l4266
  2276   002392                     l4262:
  2277   002392  280A               	incf	lcd_4bits_send_enable_signal@lcd^0,w,c
  2278   002394  6E02               	movwf	gpio_pin_write@pin^0,c
  2279   002396  0E01               	movlw	1
  2280   002398  6E03               	movwf	gpio_pin_write@logic^0,c
  2281   00239A  EC31  F00A         	call	_gpio_pin_write	;wreg free
  2282   00239E                     
  2283                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 328:         _delay((unsigned long)((5)*(4000000UL/4000000
      +                          .0)));
  2284   00239E  D000               	nop2		;2 cycle nop
  2285   0023A0  D000               	nop2		;2 cycle nop
  2286   0023A2  0000               	nop	
  2287                           
  2288                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 329:         ret = gpio_pin_write(&(lcd->lcd_en), GPIO_LOW
      +                          );
  2289   0023A4  280A               	incf	lcd_4bits_send_enable_signal@lcd^0,w,c
  2290   0023A6  6E02               	movwf	gpio_pin_write@pin^0,c
  2291   0023A8  0E00               	movlw	0
  2292   0023AA  6E03               	movwf	gpio_pin_write@logic^0,c
  2293   0023AC  EC31  F00A         	call	_gpio_pin_write	;wreg free
  2294   0023B0  6E0B               	movwf	lcd_4bits_send_enable_signal@ret^0,c
  2295   0023B2                     l4266:
  2296                           
  2297                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 331:     return ret;
  2298   0023B2  500B               	movf	lcd_4bits_send_enable_signal@ret^0,w,c
  2299   0023B4  0012               	return		;funcret
  2300   0023B6                     __end_of_lcd_4bits_send_enable_signal:
  2301                           	callstack 0
  2302                           
  2303 ;; *************** function _gpio_pin_initialize *****************
  2304 ;; Defined at:
  2305 ;;		line 210 in file "MCAL_Layer/GPIO/gpio.c"
  2306 ;; Parameters:    Size  Location     Type
  2307 ;;  pin             1    9[COMRAM] PTR const struct .
  2308 ;;		 -> lcd1$lcd_data(4), lcd1$lcd_en(1), lcd1$lcd_rs(1), lcd1(6), 
  2309 ;;		 -> relay_init@pin(1), led_init@pin(1), dc_motor_init@pin2(1), dc_motor_init@pin1(1), 
  2310 ;; Auto vars:     Size  Location     Type
  2311 ;;  ret             1   11[COMRAM] unsigned char 
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  1    wreg      unsigned char 
  2314 ;; Registers used:
  2315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2321 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2322 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2323 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2324 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2325 ;;Total ram usage:        3 bytes
  2326 ;; Hardware stack levels used: 1
  2327 ;; Hardware stack levels required when called: 3
  2328 ;; This function calls:
  2329 ;;		_gpio_pin_set_direction
  2330 ;;		_gpio_pin_write
  2331 ;; This function is called by:
  2332 ;;		_lcd_4bit_init
  2333 ;;		_led_init
  2334 ;;		_seven_seg_init
  2335 ;;		_dc_motor_init
  2336 ;;		_keypad_init
  2337 ;;		_relay_init
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           	psect	text13
  2342   002080                     __ptext13:
  2343                           	callstack 0
  2344   002080                     _gpio_pin_initialize:
  2345                           	callstack 26
  2346   002080                     
  2347                           ;MCAL_Layer/GPIO/gpio.c: 214:     if(((void*)0) == pin || pin->pin_num > 8 - 1)
  2348   002080  500A               	movf	gpio_pin_initialize@pin^0,w,c
  2349   002082  B4D8               	btfsc	status,2,c
  2350   002084  EF46  F010         	goto	u3831
  2351   002088  EF48  F010         	goto	u3830
  2352   00208C                     u3831:
  2353   00208C  EF58  F010         	goto	l4410
  2354   002090                     u3830:
  2355   002090  500A               	movf	gpio_pin_initialize@pin^0,w,c
  2356   002092  6ED9               	movwf	fsr2l,c
  2357   002094  6ADA               	clrf	fsr2h,c
  2358   002096  30DF               	rrcf	223,w,c
  2359   002098  32E8               	rrcf	wreg,f,c
  2360   00209A  32E8               	rrcf	wreg,f,c
  2361   00209C  0B07               	andlw	7
  2362   00209E  6E0B               	movwf	??_gpio_pin_initialize^0,c
  2363   0020A0  0E07               	movlw	7
  2364   0020A2  640B               	cpfsgt	??_gpio_pin_initialize^0,c
  2365   0020A4  EF56  F010         	goto	u3841
  2366   0020A8  EF58  F010         	goto	u3840
  2367   0020AC                     u3841:
  2368   0020AC  EF5C  F010         	goto	l4412
  2369   0020B0                     u3840:
  2370   0020B0                     l4410:
  2371                           
  2372                           ;MCAL_Layer/GPIO/gpio.c: 215:     {;MCAL_Layer/GPIO/gpio.c: 216:         ret = 0x00;
  2373   0020B0  0E00               	movlw	0
  2374   0020B2  6E0C               	movwf	gpio_pin_initialize@ret^0,c
  2375                           
  2376                           ;MCAL_Layer/GPIO/gpio.c: 217:     }
  2377   0020B4  EF6D  F010         	goto	l4414
  2378   0020B8                     l4412:
  2379                           
  2380                           ;MCAL_Layer/GPIO/gpio.c: 219:     {;MCAL_Layer/GPIO/gpio.c: 220:         ret = gpio_pin_
      +                          set_direction(pin);
  2381   0020B8  C00A  F002         	movff	gpio_pin_initialize@pin,gpio_pin_set_direction@pin
  2382   0020BC  EC7C  F00B         	call	_gpio_pin_set_direction	;wreg free
  2383   0020C0  6E0C               	movwf	gpio_pin_initialize@ret^0,c
  2384                           
  2385                           ;MCAL_Layer/GPIO/gpio.c: 221:         ret = gpio_pin_write(pin, pin->logic);
  2386   0020C2  C00A  F002         	movff	gpio_pin_initialize@pin,gpio_pin_write@pin
  2387   0020C6  500A               	movf	gpio_pin_initialize@pin^0,w,c
  2388   0020C8  6ED9               	movwf	fsr2l,c
  2389   0020CA  6ADA               	clrf	fsr2h,c
  2390   0020CC  0E00               	movlw	0
  2391   0020CE  BEDF               	btfsc	indf2,7,c
  2392   0020D0  0E01               	movlw	1
  2393   0020D2  6E03               	movwf	gpio_pin_write@logic^0,c
  2394   0020D4  EC31  F00A         	call	_gpio_pin_write	;wreg free
  2395   0020D8  6E0C               	movwf	gpio_pin_initialize@ret^0,c
  2396   0020DA                     l4414:
  2397                           
  2398                           ;MCAL_Layer/GPIO/gpio.c: 224:     return ret;
  2399   0020DA  500C               	movf	gpio_pin_initialize@ret^0,w,c
  2400   0020DC  0012               	return		;funcret
  2401   0020DE                     __end_of_gpio_pin_initialize:
  2402                           	callstack 0
  2403                           
  2404 ;; *************** function _gpio_pin_write *****************
  2405 ;; Defined at:
  2406 ;;		line 114 in file "MCAL_Layer/GPIO/gpio.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;  pin             1    1[COMRAM] PTR const struct .
  2409 ;;		 -> lcd1$lcd_data(4), lcd1$lcd_en(1), lcd1$lcd_rs(1), lcd1(6), 
  2410 ;;		 -> relay_turn_off@pin(1), relay_turn_on@pin(1), relay_init@pin(1), led_turn_off@pin(1), 
  2411 ;;		 -> led_turn_on@pin(1), led_init@pin(1), dc_motor_stop@pin2(1), dc_motor_stop@pin1(1), 
  2412 ;;		 -> dc_motor_move_dir2@pin2(1), dc_motor_move_dir2@pin1(1), dc_motor_move_dir1@pin2(1), dc_motor_move_dir1@pin1(1), 
  2413 ;;		 -> dc_motor_init@pin2(1), dc_motor_init@pin1(1), 
  2414 ;;  logic           1    2[COMRAM] enum E2993
  2415 ;; Auto vars:     Size  Location     Type
  2416 ;;  ret             1    8[COMRAM] unsigned char 
  2417 ;; Return value:  Size  Location     Type
  2418 ;;                  1    wreg      unsigned char 
  2419 ;; Registers used:
  2420 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2421 ;; Tracked objects:
  2422 ;;		On entry : 0/0
  2423 ;;		On exit  : 0/0
  2424 ;;		Unchanged: 0/0
  2425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2426 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2427 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2428 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2429 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2430 ;;Total ram usage:        8 bytes
  2431 ;; Hardware stack levels used: 1
  2432 ;; Hardware stack levels required when called: 2
  2433 ;; This function calls:
  2434 ;;		Nothing
  2435 ;; This function is called by:
  2436 ;;		_lcd_4bit_send_cmd
  2437 ;;		_lcd_4bit_send_char
  2438 ;;		_lcd_send_4bits
  2439 ;;		_lcd_4bits_send_enable_signal
  2440 ;;		_led_turn_on
  2441 ;;		_led_turn_off
  2442 ;;		_gpio_pin_initialize
  2443 ;;		_seven_seg_write_number
  2444 ;;		_dc_motor_move_dir1
  2445 ;;		_dc_motor_move_dir2
  2446 ;;		_dc_motor_stop
  2447 ;;		_keypad_get_value
  2448 ;;		_relay_turn_on
  2449 ;;		_relay_turn_off
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           	psect	text14
  2454   001462                     __ptext14:
  2455                           	callstack 0
  2456   001462                     _gpio_pin_write:
  2457                           	callstack 27
  2458   001462                     
  2459                           ;MCAL_Layer/GPIO/gpio.c: 114: Std_ReturnType gpio_pin_write(const pin_config_t *pin, log
      +                          ic_t logic);MCAL_Layer/GPIO/gpio.c: 115: {;MCAL_Layer/GPIO/gpio.c: 116:     Std_ReturnTy
      +                          pe ret = 0x01;
  2460   001462  0E01               	movlw	1
  2461   001464  6E09               	movwf	gpio_pin_write@ret^0,c
  2462                           
  2463                           ;MCAL_Layer/GPIO/gpio.c: 118:     if(((void*)0) == pin || pin->pin_num > 8 - 1)
  2464   001466  5002               	movf	gpio_pin_write@pin^0,w,c
  2465   001468  B4D8               	btfsc	status,2,c
  2466   00146A  EF39  F00A         	goto	u3391
  2467   00146E  EF3B  F00A         	goto	u3390
  2468   001472                     u3391:
  2469   001472  EF4B  F00A         	goto	l4120
  2470   001476                     u3390:
  2471   001476  5002               	movf	gpio_pin_write@pin^0,w,c
  2472   001478  6ED9               	movwf	fsr2l,c
  2473   00147A  6ADA               	clrf	fsr2h,c
  2474   00147C  30DF               	rrcf	223,w,c
  2475   00147E  32E8               	rrcf	wreg,f,c
  2476   001480  32E8               	rrcf	wreg,f,c
  2477   001482  0B07               	andlw	7
  2478   001484  6E04               	movwf	??_gpio_pin_write^0,c
  2479   001486  0E07               	movlw	7
  2480   001488  6404               	cpfsgt	??_gpio_pin_write^0,c
  2481   00148A  EF49  F00A         	goto	u3401
  2482   00148E  EF4B  F00A         	goto	u3400
  2483   001492                     u3401:
  2484   001492  EFCB  F00A         	goto	l4130
  2485   001496                     u3400:
  2486   001496                     l4120:
  2487                           
  2488                           ;MCAL_Layer/GPIO/gpio.c: 119:     {;MCAL_Layer/GPIO/gpio.c: 120:         ret = 0x00;
  2489   001496  0E00               	movlw	0
  2490   001498  6E09               	movwf	gpio_pin_write@ret^0,c
  2491                           
  2492                           ;MCAL_Layer/GPIO/gpio.c: 121:     }
  2493   00149A  EFE0  F00A         	goto	l4132
  2494   00149E                     l4122:
  2495                           
  2496                           ;MCAL_Layer/GPIO/gpio.c: 127:             (*lat_registers[pin->port] &= (~((uint8)1 << p
      +                          in->pin_num)));
  2497   00149E  5002               	movf	gpio_pin_write@pin^0,w,c
  2498   0014A0  6ED9               	movwf	fsr2l,c
  2499   0014A2  6ADA               	clrf	fsr2h,c
  2500   0014A4  30DF               	rrcf	223,w,c
  2501   0014A6  32E8               	rrcf	wreg,f,c
  2502   0014A8  32E8               	rrcf	wreg,f,c
  2503   0014AA  0B07               	andlw	7
  2504   0014AC  6E04               	movwf	??_gpio_pin_write^0,c
  2505   0014AE  0E01               	movlw	1
  2506   0014B0  6E05               	movwf	(??_gpio_pin_write+1)^0,c
  2507   0014B2  2A04               	incf	??_gpio_pin_write^0,f,c
  2508   0014B4  EF5E  F00A         	goto	u3414
  2509   0014B8                     u3415:
  2510   0014B8  90D8               	bcf	status,0,c
  2511   0014BA  3605               	rlcf	(??_gpio_pin_write+1)^0,f,c
  2512   0014BC                     u3414:
  2513   0014BC  2E04               	decfsz	??_gpio_pin_write^0,f,c
  2514   0014BE  EF5C  F00A         	goto	u3415
  2515   0014C2  5005               	movf	(??_gpio_pin_write+1)^0,w,c
  2516   0014C4  0AFF               	xorlw	255
  2517   0014C6  6E06               	movwf	(??_gpio_pin_write+2)^0,c
  2518   0014C8  5002               	movf	gpio_pin_write@pin^0,w,c
  2519   0014CA  6ED9               	movwf	fsr2l,c
  2520   0014CC  6ADA               	clrf	fsr2h,c
  2521   0014CE  50DF               	movf	223,w,c
  2522   0014D0  0B07               	andlw	7
  2523   0014D2  0D02               	mullw	2
  2524   0014D4  50F3               	movf	243,w,c
  2525   0014D6  0FB0               	addlw	low _lat_registers
  2526   0014D8  6ED9               	movwf	fsr2l,c
  2527   0014DA  6ADA               	clrf	fsr2h,c
  2528   0014DC  CFDE F007          	movff	postinc2,??_gpio_pin_write+3
  2529   0014E0  CFDD F008          	movff	postdec2,??_gpio_pin_write+4
  2530   0014E4  C007  FFD9         	movff	??_gpio_pin_write+3,fsr2l
  2531   0014E8  C008  FFDA         	movff	??_gpio_pin_write+4,fsr2h
  2532   0014EC  5006               	movf	(??_gpio_pin_write+2)^0,w,c
  2533   0014EE  16DF               	andwf	indf2,f,c
  2534                           
  2535                           ;MCAL_Layer/GPIO/gpio.c: 128:             break;
  2536   0014F0  EFE0  F00A         	goto	l4132
  2537   0014F4                     l4124:
  2538                           
  2539                           ;MCAL_Layer/GPIO/gpio.c: 130:             (*lat_registers[pin->port] &= (~((uint8)1 << p
      +                          in->pin_num)));
  2540   0014F4  5002               	movf	gpio_pin_write@pin^0,w,c
  2541   0014F6  6ED9               	movwf	fsr2l,c
  2542   0014F8  6ADA               	clrf	fsr2h,c
  2543   0014FA  30DF               	rrcf	223,w,c
  2544   0014FC  32E8               	rrcf	wreg,f,c
  2545   0014FE  32E8               	rrcf	wreg,f,c
  2546   001500  0B07               	andlw	7
  2547   001502  6E04               	movwf	??_gpio_pin_write^0,c
  2548   001504  0E01               	movlw	1
  2549   001506  6E05               	movwf	(??_gpio_pin_write+1)^0,c
  2550   001508  2A04               	incf	??_gpio_pin_write^0,f,c
  2551   00150A  EF89  F00A         	goto	u3424
  2552   00150E                     u3425:
  2553   00150E  90D8               	bcf	status,0,c
  2554   001510  3605               	rlcf	(??_gpio_pin_write+1)^0,f,c
  2555   001512                     u3424:
  2556   001512  2E04               	decfsz	??_gpio_pin_write^0,f,c
  2557   001514  EF87  F00A         	goto	u3425
  2558   001518  5005               	movf	(??_gpio_pin_write+1)^0,w,c
  2559   00151A  0AFF               	xorlw	255
  2560   00151C  6E06               	movwf	(??_gpio_pin_write+2)^0,c
  2561   00151E  5002               	movf	gpio_pin_write@pin^0,w,c
  2562   001520  6ED9               	movwf	fsr2l,c
  2563   001522  6ADA               	clrf	fsr2h,c
  2564   001524  50DF               	movf	223,w,c
  2565   001526  0B07               	andlw	7
  2566   001528  0D02               	mullw	2
  2567   00152A  50F3               	movf	243,w,c
  2568   00152C  0FB0               	addlw	low _lat_registers
  2569   00152E  6ED9               	movwf	fsr2l,c
  2570   001530  6ADA               	clrf	fsr2h,c
  2571   001532  CFDE F007          	movff	postinc2,??_gpio_pin_write+3
  2572   001536  CFDD F008          	movff	postdec2,??_gpio_pin_write+4
  2573   00153A  C007  FFD9         	movff	??_gpio_pin_write+3,fsr2l
  2574   00153E  C008  FFDA         	movff	??_gpio_pin_write+4,fsr2h
  2575   001542  5006               	movf	(??_gpio_pin_write+2)^0,w,c
  2576   001544  16DF               	andwf	indf2,f,c
  2577                           
  2578                           ;MCAL_Layer/GPIO/gpio.c: 131:             (*lat_registers[pin->port] |= ((uint8)1 << pin
      +                          ->pin_num));
  2579   001546  5002               	movf	gpio_pin_write@pin^0,w,c
  2580   001548  6ED9               	movwf	fsr2l,c
  2581   00154A  6ADA               	clrf	fsr2h,c
  2582   00154C  30DF               	rrcf	223,w,c
  2583   00154E  32E8               	rrcf	wreg,f,c
  2584   001550  32E8               	rrcf	wreg,f,c
  2585   001552  0B07               	andlw	7
  2586   001554  6E04               	movwf	??_gpio_pin_write^0,c
  2587   001556  0E01               	movlw	1
  2588   001558  6E05               	movwf	(??_gpio_pin_write+1)^0,c
  2589   00155A  2A04               	incf	??_gpio_pin_write^0,f,c
  2590   00155C  EFB2  F00A         	goto	u3434
  2591   001560                     u3435:
  2592   001560  90D8               	bcf	status,0,c
  2593   001562  3605               	rlcf	(??_gpio_pin_write+1)^0,f,c
  2594   001564                     u3434:
  2595   001564  2E04               	decfsz	??_gpio_pin_write^0,f,c
  2596   001566  EFB0  F00A         	goto	u3435
  2597   00156A  5002               	movf	gpio_pin_write@pin^0,w,c
  2598   00156C  6ED9               	movwf	fsr2l,c
  2599   00156E  6ADA               	clrf	fsr2h,c
  2600   001570  50DF               	movf	223,w,c
  2601   001572  0B07               	andlw	7
  2602   001574  0D02               	mullw	2
  2603   001576  50F3               	movf	243,w,c
  2604   001578  0FB0               	addlw	low _lat_registers
  2605   00157A  6ED9               	movwf	fsr2l,c
  2606   00157C  6ADA               	clrf	fsr2h,c
  2607   00157E  CFDE F006          	movff	postinc2,??_gpio_pin_write+2
  2608   001582  CFDD F007          	movff	postdec2,??_gpio_pin_write+3
  2609   001586  C006  FFD9         	movff	??_gpio_pin_write+2,fsr2l
  2610   00158A  C007  FFDA         	movff	??_gpio_pin_write+3,fsr2h
  2611   00158E  5005               	movf	(??_gpio_pin_write+1)^0,w,c
  2612   001590  12DF               	iorwf	indf2,f,c
  2613                           
  2614                           ;MCAL_Layer/GPIO/gpio.c: 132:             break;
  2615   001592  EFE0  F00A         	goto	l4132
  2616   001596                     l4130:
  2617   001596  5003               	movf	gpio_pin_write@logic^0,w,c
  2618   001598  6E04               	movwf	??_gpio_pin_write^0,c
  2619   00159A  6A05               	clrf	(??_gpio_pin_write+1)^0,c
  2620                           
  2621                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2622                           ; Switch size 1, requested type "simple"
  2623                           ; Number of cases is 1, Range of values is 0 to 0
  2624                           ; switch strategies available:
  2625                           ; Name         Instructions Cycles
  2626                           ; simple_byte            4     3 (average)
  2627                           ;	Chosen strategy is simple_byte
  2628   00159C  5005               	movf	(??_gpio_pin_write+1)^0,w,c
  2629   00159E  0A00               	xorlw	0	; case 0
  2630   0015A0  B4D8               	btfsc	status,2,c
  2631   0015A2  EFD5  F00A         	goto	l5102
  2632   0015A6  EF4B  F00A         	goto	l4120
  2633   0015AA                     l5102:
  2634                           
  2635                           ; Switch size 1, requested type "simple"
  2636                           ; Number of cases is 2, Range of values is 0 to 1
  2637                           ; switch strategies available:
  2638                           ; Name         Instructions Cycles
  2639                           ; simple_byte            7     4 (average)
  2640                           ;	Chosen strategy is simple_byte
  2641   0015AA  5004               	movf	??_gpio_pin_write^0,w,c
  2642   0015AC  0A00               	xorlw	0	; case 0
  2643   0015AE  B4D8               	btfsc	status,2,c
  2644   0015B0  EF4F  F00A         	goto	l4122
  2645   0015B4  0A01               	xorlw	1	; case 1
  2646   0015B6  B4D8               	btfsc	status,2,c
  2647   0015B8  EF7A  F00A         	goto	l4124
  2648   0015BC  EF4B  F00A         	goto	l4120
  2649   0015C0                     l4132:
  2650                           
  2651                           ;MCAL_Layer/GPIO/gpio.c: 139:     return ret;
  2652   0015C0  5009               	movf	gpio_pin_write@ret^0,w,c
  2653   0015C2  0012               	return		;funcret
  2654   0015C4                     __end_of_gpio_pin_write:
  2655                           	callstack 0
  2656                           
  2657 ;; *************** function _gpio_pin_set_direction *****************
  2658 ;; Defined at:
  2659 ;;		line 47 in file "MCAL_Layer/GPIO/gpio.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;  pin             1    1[COMRAM] PTR const struct .
  2662 ;;		 -> lcd1$lcd_data(4), lcd1$lcd_en(1), lcd1$lcd_rs(1), lcd1(6), 
  2663 ;;		 -> relay_init@pin(1), led_init@pin(1), dc_motor_init@pin2(1), dc_motor_init@pin1(1), 
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;  ret             1    7[COMRAM] unsigned char 
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1    wreg      unsigned char 
  2668 ;; Registers used:
  2669 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/0
  2672 ;;		On exit  : 0/0
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2675 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2678 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2679 ;;Total ram usage:        7 bytes
  2680 ;; Hardware stack levels used: 1
  2681 ;; Hardware stack levels required when called: 2
  2682 ;; This function calls:
  2683 ;;		Nothing
  2684 ;; This function is called by:
  2685 ;;		_gpio_pin_initialize
  2686 ;;		_button_init
  2687 ;;		_keypad_init
  2688 ;;		_Interrupt_RBx_Init
  2689 ;;		_Interrupt_INTx_Pin_Init
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text15
  2694   0016F8                     __ptext15:
  2695                           	callstack 0
  2696   0016F8                     _gpio_pin_set_direction:
  2697                           	callstack 26
  2698   0016F8                     
  2699                           ;MCAL_Layer/GPIO/gpio.c: 47: Std_ReturnType gpio_pin_set_direction(const pin_config_t *p
      +                          in);MCAL_Layer/GPIO/gpio.c: 48: {;MCAL_Layer/GPIO/gpio.c: 49:     Std_ReturnType ret = 0
      +                          x01;
  2700   0016F8  0E01               	movlw	1
  2701   0016FA  6E08               	movwf	gpio_pin_set_direction@ret^0,c
  2702                           
  2703                           ;MCAL_Layer/GPIO/gpio.c: 51:     if(((void*)0) == pin || pin->pin_num > 8 - 1)
  2704   0016FC  5002               	movf	gpio_pin_set_direction@pin^0,w,c
  2705   0016FE  B4D8               	btfsc	status,2,c
  2706   001700  EF84  F00B         	goto	u3751
  2707   001704  EF86  F00B         	goto	u3750
  2708   001708                     u3751:
  2709   001708  EF96  F00B         	goto	l4324
  2710   00170C                     u3750:
  2711   00170C  5002               	movf	gpio_pin_set_direction@pin^0,w,c
  2712   00170E  6ED9               	movwf	fsr2l,c
  2713   001710  6ADA               	clrf	fsr2h,c
  2714   001712  30DF               	rrcf	223,w,c
  2715   001714  32E8               	rrcf	wreg,f,c
  2716   001716  32E8               	rrcf	wreg,f,c
  2717   001718  0B07               	andlw	7
  2718   00171A  6E03               	movwf	??_gpio_pin_set_direction^0,c
  2719   00171C  0E07               	movlw	7
  2720   00171E  6403               	cpfsgt	??_gpio_pin_set_direction^0,c
  2721   001720  EF94  F00B         	goto	u3761
  2722   001724  EF96  F00B         	goto	u3760
  2723   001728                     u3761:
  2724   001728  EFED  F00B         	goto	l4334
  2725   00172C                     u3760:
  2726   00172C                     l4324:
  2727                           
  2728                           ;MCAL_Layer/GPIO/gpio.c: 52:     {;MCAL_Layer/GPIO/gpio.c: 53:         ret = 0x00;
  2729   00172C  0E00               	movlw	0
  2730   00172E  6E08               	movwf	gpio_pin_set_direction@ret^0,c
  2731                           
  2732                           ;MCAL_Layer/GPIO/gpio.c: 54:     }
  2733   001730  EF03  F00C         	goto	l4336
  2734   001734                     l4326:
  2735                           
  2736                           ;MCAL_Layer/GPIO/gpio.c: 60:             (*tris_registers[pin->port] |= ((uint8)1 << pin
      +                          ->pin_num));
  2737   001734  5002               	movf	gpio_pin_set_direction@pin^0,w,c
  2738   001736  6ED9               	movwf	fsr2l,c
  2739   001738  6ADA               	clrf	fsr2h,c
  2740   00173A  30DF               	rrcf	223,w,c
  2741   00173C  32E8               	rrcf	wreg,f,c
  2742   00173E  32E8               	rrcf	wreg,f,c
  2743   001740  0B07               	andlw	7
  2744   001742  6E03               	movwf	??_gpio_pin_set_direction^0,c
  2745   001744  0E01               	movlw	1
  2746   001746  6E04               	movwf	(??_gpio_pin_set_direction+1)^0,c
  2747   001748  2A03               	incf	??_gpio_pin_set_direction^0,f,c
  2748   00174A  EFA9  F00B         	goto	u3774
  2749   00174E                     u3775:
  2750   00174E  90D8               	bcf	status,0,c
  2751   001750  3604               	rlcf	(??_gpio_pin_set_direction+1)^0,f,c
  2752   001752                     u3774:
  2753   001752  2E03               	decfsz	??_gpio_pin_set_direction^0,f,c
  2754   001754  EFA7  F00B         	goto	u3775
  2755   001758  5002               	movf	gpio_pin_set_direction@pin^0,w,c
  2756   00175A  6ED9               	movwf	fsr2l,c
  2757   00175C  6ADA               	clrf	fsr2h,c
  2758   00175E  50DF               	movf	223,w,c
  2759   001760  0B07               	andlw	7
  2760   001762  0D02               	mullw	2
  2761   001764  50F3               	movf	243,w,c
  2762   001766  0F5C               	addlw	low _tris_registers
  2763   001768  6ED9               	movwf	fsr2l,c
  2764   00176A  6ADA               	clrf	fsr2h,c
  2765   00176C  CFDE F005          	movff	postinc2,??_gpio_pin_set_direction+2
  2766   001770  CFDD F006          	movff	postdec2,??_gpio_pin_set_direction+3
  2767   001774  C005  FFD9         	movff	??_gpio_pin_set_direction+2,fsr2l
  2768   001778  C006  FFDA         	movff	??_gpio_pin_set_direction+3,fsr2h
  2769   00177C  5004               	movf	(??_gpio_pin_set_direction+1)^0,w,c
  2770   00177E  12DF               	iorwf	indf2,f,c
  2771                           
  2772                           ;MCAL_Layer/GPIO/gpio.c: 61:             break;
  2773   001780  EF03  F00C         	goto	l4336
  2774   001784                     l4328:
  2775                           
  2776                           ;MCAL_Layer/GPIO/gpio.c: 63:             (*tris_registers[pin->port] &= (~((uint8)1 << p
      +                          in->pin_num)));
  2777   001784  5002               	movf	gpio_pin_set_direction@pin^0,w,c
  2778   001786  6ED9               	movwf	fsr2l,c
  2779   001788  6ADA               	clrf	fsr2h,c
  2780   00178A  30DF               	rrcf	223,w,c
  2781   00178C  32E8               	rrcf	wreg,f,c
  2782   00178E  32E8               	rrcf	wreg,f,c
  2783   001790  0B07               	andlw	7
  2784   001792  6E03               	movwf	??_gpio_pin_set_direction^0,c
  2785   001794  0E01               	movlw	1
  2786   001796  6E04               	movwf	(??_gpio_pin_set_direction+1)^0,c
  2787   001798  2A03               	incf	??_gpio_pin_set_direction^0,f,c
  2788   00179A  EFD1  F00B         	goto	u3784
  2789   00179E                     u3785:
  2790   00179E  90D8               	bcf	status,0,c
  2791   0017A0  3604               	rlcf	(??_gpio_pin_set_direction+1)^0,f,c
  2792   0017A2                     u3784:
  2793   0017A2  2E03               	decfsz	??_gpio_pin_set_direction^0,f,c
  2794   0017A4  EFCF  F00B         	goto	u3785
  2795   0017A8  5004               	movf	(??_gpio_pin_set_direction+1)^0,w,c
  2796   0017AA  0AFF               	xorlw	255
  2797   0017AC  6E05               	movwf	(??_gpio_pin_set_direction+2)^0,c
  2798   0017AE  5002               	movf	gpio_pin_set_direction@pin^0,w,c
  2799   0017B0  6ED9               	movwf	fsr2l,c
  2800   0017B2  6ADA               	clrf	fsr2h,c
  2801   0017B4  50DF               	movf	223,w,c
  2802   0017B6  0B07               	andlw	7
  2803   0017B8  0D02               	mullw	2
  2804   0017BA  50F3               	movf	243,w,c
  2805   0017BC  0F5C               	addlw	low _tris_registers
  2806   0017BE  6ED9               	movwf	fsr2l,c
  2807   0017C0  6ADA               	clrf	fsr2h,c
  2808   0017C2  CFDE F006          	movff	postinc2,??_gpio_pin_set_direction+3
  2809   0017C6  CFDD F007          	movff	postdec2,??_gpio_pin_set_direction+4
  2810   0017CA  C006  FFD9         	movff	??_gpio_pin_set_direction+3,fsr2l
  2811   0017CE  C007  FFDA         	movff	??_gpio_pin_set_direction+4,fsr2h
  2812   0017D2  5005               	movf	(??_gpio_pin_set_direction+2)^0,w,c
  2813   0017D4  16DF               	andwf	indf2,f,c
  2814                           
  2815                           ;MCAL_Layer/GPIO/gpio.c: 64:             break;
  2816   0017D6  EF03  F00C         	goto	l4336
  2817   0017DA                     l4334:
  2818   0017DA  5002               	movf	gpio_pin_set_direction@pin^0,w,c
  2819   0017DC  6ED9               	movwf	fsr2l,c
  2820   0017DE  6ADA               	clrf	fsr2h,c
  2821   0017E0  BCDF               	btfsc	indf2,6,c
  2822   0017E2  EFF5  F00B         	goto	u3791
  2823   0017E6  EFF8  F00B         	goto	u3790
  2824   0017EA                     u3791:
  2825   0017EA  0E01               	movlw	1
  2826   0017EC  EFF9  F00B         	goto	u3796
  2827   0017F0                     u3790:
  2828   0017F0  0E00               	movlw	0
  2829   0017F2                     u3796:
  2830                           
  2831                           ; Switch size 1, requested type "simple"
  2832                           ; Number of cases is 2, Range of values is 0 to 1
  2833                           ; switch strategies available:
  2834                           ; Name         Instructions Cycles
  2835                           ; simple_byte            7     4 (average)
  2836                           ;	Chosen strategy is simple_byte
  2837   0017F2  0A00               	xorlw	0	; case 0
  2838   0017F4  B4D8               	btfsc	status,2,c
  2839   0017F6  EFC2  F00B         	goto	l4328
  2840   0017FA  0A01               	xorlw	1	; case 1
  2841   0017FC  B4D8               	btfsc	status,2,c
  2842   0017FE  EF9A  F00B         	goto	l4326
  2843   001802  EF96  F00B         	goto	l4324
  2844   001806                     l4336:
  2845                           
  2846                           ;MCAL_Layer/GPIO/gpio.c: 71:     return ret;
  2847   001806  5008               	movf	gpio_pin_set_direction@ret^0,w,c
  2848   001808  0012               	return		;funcret
  2849   00180A                     __end_of_gpio_pin_set_direction:
  2850                           	callstack 0
  2851                           
  2852 ;; *************** function _convert_uint16_to_string *****************
  2853 ;; Defined at:
  2854 ;;		line 420 in file "ECU_Layer/Chr_LCD/chr_lcd.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  value           2   45[COMRAM] unsigned short 
  2857 ;;  str             1   47[COMRAM] PTR unsigned char 
  2858 ;;		 -> main@buff(6), 
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;  ret             1    0        unsigned char 
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  1    wreg      unsigned char 
  2863 ;; Registers used:
  2864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2870 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2873 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2874 ;;Total ram usage:        3 bytes
  2875 ;; Hardware stack levels used: 1
  2876 ;; Hardware stack levels required when called: 7
  2877 ;; This function calls:
  2878 ;;		_memset
  2879 ;;		_sprintf
  2880 ;; This function is called by:
  2881 ;;		_main
  2882 ;; This function uses a non-reentrant model
  2883 ;;
  2884                           
  2885                           	psect	text16
  2886   00227A                     __ptext16:
  2887                           	callstack 0
  2888   00227A                     _convert_uint16_to_string:
  2889                           	callstack 23
  2890   00227A                     
  2891                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 423:     if (((void*)0) == str) {
  2892   00227A  5030               	movf	convert_uint16_to_string@str^0,w,c
  2893   00227C  A4D8               	btfss	status,2,c
  2894   00227E  EF43  F011         	goto	u4081
  2895   002282  EF45  F011         	goto	u4080
  2896   002286                     u4081:
  2897   002286  EF47  F011         	goto	l4604
  2898   00228A                     u4080:
  2899   00228A                     
  2900                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 425:     } else {
  2901   00228A  EF5D  F011         	goto	l138
  2902   00228E                     l4604:
  2903                           
  2904                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 426:         memset(str,0,6);
  2905   00228E  C030  F002         	movff	convert_uint16_to_string@str,memset@dest
  2906   002292  0E00               	movlw	0
  2907   002294  6E04               	movwf	(memset@c+1)^0,c
  2908   002296  0E00               	movlw	0
  2909   002298  6E03               	movwf	memset@c^0,c
  2910   00229A  0E00               	movlw	0
  2911   00229C  6E06               	movwf	(memset@n+1)^0,c
  2912   00229E  0E06               	movlw	6
  2913   0022A0  6E05               	movwf	memset@n^0,c
  2914   0022A2  EC2B  F012         	call	_memset	;wreg free
  2915   0022A6                     
  2916                           ;ECU_Layer/Chr_LCD/chr_lcd.c: 427:         sprintf(str,"%d",value);
  2917   0022A6  C030  F01B         	movff	convert_uint16_to_string@str,sprintf@s
  2918   0022AA  0E17               	movlw	low STR_1
  2919   0022AC  6E1C               	movwf	sprintf@fmt^0,c
  2920   0022AE  C02E  F01D         	movff	convert_uint16_to_string@value,?_sprintf+2
  2921   0022B2  C02F  F01E         	movff	convert_uint16_to_string@value+1,?_sprintf+3
  2922   0022B6  ECF7  F011         	call	_sprintf	;wreg free
  2923   0022BA                     l138:
  2924   0022BA  0012               	return		;funcret
  2925   0022BC                     __end_of_convert_uint16_to_string:
  2926                           	callstack 0
  2927                           
  2928 ;; *************** function _sprintf *****************
  2929 ;; Defined at:
  2930 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  s               1   26[COMRAM] PTR unsigned char 
  2933 ;;		 -> main@buff(6), 
  2934 ;;  fmt             1   27[COMRAM] PTR const unsigned char 
  2935 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  2936 ;; Auto vars:     Size  Location     Type
  2937 ;;  f              12   33[COMRAM] struct _IO_FILE
  2938 ;;  ret             2    0        int 
  2939 ;;  ap              1   32[COMRAM] PTR void [1]
  2940 ;;		 -> ?_sprintf(2), 
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  2   26[COMRAM] int 
  2943 ;; Registers used:
  2944 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2950 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2951 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2953 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2954 ;;Total ram usage:       19 bytes
  2955 ;; Hardware stack levels used: 1
  2956 ;; Hardware stack levels required when called: 6
  2957 ;; This function calls:
  2958 ;;		_vfprintf
  2959 ;; This function is called by:
  2960 ;;		_convert_uint16_to_string
  2961 ;;		_convert_uint8_to_string
  2962 ;;		_convert_uint32_to_string
  2963 ;; This function uses a non-reentrant model
  2964 ;;
  2965                           
  2966                           	psect	text17
  2967   0023EE                     __ptext17:
  2968                           	callstack 0
  2969   0023EE                     _sprintf:
  2970                           	callstack 23
  2971   0023EE  0E1D               	movlw	low (?_sprintf+2)
  2972   0023F0  6E21               	movwf	sprintf@ap^0,c
  2973   0023F2  C01B  F022         	movff	sprintf@s,sprintf@f
  2974   0023F6  0E00               	movlw	0
  2975   0023F8  6E26               	movwf	(sprintf@f+4)^0,c
  2976   0023FA  0E00               	movlw	0
  2977   0023FC  6E25               	movwf	(sprintf@f+3)^0,c
  2978   0023FE  0E00               	movlw	0
  2979   002400  6E2D               	movwf	(sprintf@f+11)^0,c
  2980   002402  0E00               	movlw	0
  2981   002404  6E2C               	movwf	(sprintf@f+10)^0,c
  2982   002406  0E22               	movlw	low sprintf@f
  2983   002408  6E17               	movwf	vfprintf@fp^0,c
  2984   00240A  C01C  F018         	movff	sprintf@fmt,vfprintf@fmt
  2985   00240E  0E21               	movlw	low sprintf@ap
  2986   002410  6E19               	movwf	vfprintf@ap^0,c
  2987   002412  EC7F  F011         	call	_vfprintf	;wreg free
  2988   002416  501B               	movf	sprintf@s^0,w,c
  2989   002418  2425               	addwf	(sprintf@f+3)^0,w,c
  2990   00241A  6ED9               	movwf	fsr2l,c
  2991   00241C  6ADA               	clrf	fsr2h,c
  2992   00241E  6ADF               	clrf	indf2,c
  2993   002420  0012               	return		;funcret
  2994   002422                     __end_of_sprintf:
  2995                           	callstack 0
  2996                           
  2997 ;; *************** function _vfprintf *****************
  2998 ;; Defined at:
  2999 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  3002 ;;		 -> sprintf@f(12), 
  3003 ;;  fmt             1   23[COMRAM] PTR const unsigned char 
  3004 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3005 ;;  ap              1   24[COMRAM] PTR PTR void 
  3006 ;;		 -> sprintf@ap(1), 
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  cfmt            1   25[COMRAM] PTR unsigned char 
  3009 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  2   22[COMRAM] int 
  3012 ;; Registers used:
  3013 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3019 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;Total ram usage:        4 bytes
  3024 ;; Hardware stack levels used: 1
  3025 ;; Hardware stack levels required when called: 5
  3026 ;; This function calls:
  3027 ;;		_vfpfcnvrt
  3028 ;; This function is called by:
  3029 ;;		_sprintf
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text18
  3034   0022FE                     __ptext18:
  3035                           	callstack 0
  3036   0022FE                     _vfprintf:
  3037                           	callstack 23
  3038   0022FE                     
  3039                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3040   0022FE  C018  F01A         	movff	vfprintf@fmt,vfprintf@cfmt
  3041                           
  3042                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3043   002302  EF8B  F011         	goto	l4400
  3044   002306                     l4398:
  3045                           
  3046                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3047   002306  C017  F00C         	movff	vfprintf@fp,vfpfcnvrt@fp
  3048   00230A  0E1A               	movlw	low vfprintf@cfmt
  3049   00230C  6E0D               	movwf	vfpfcnvrt@fmt^0,c
  3050   00230E  C019  F00E         	movff	vfprintf@ap,vfpfcnvrt@ap
  3051   002312  EC51  F009         	call	_vfpfcnvrt	;wreg free
  3052   002316                     l4400:
  3053                           
  3054                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3055   002316  C01A  FFF6         	movff	vfprintf@cfmt,tblptrl
  3056   00231A                     	if	1	;There is more than 1 active tblptr byte
  3057   00231A  0E10               	movlw	high __smallconst
  3058   00231C  6EF7               	movwf	tblptrh,c
  3059   00231E                     	endif
  3060   00231E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3061   00231E  6AF8               	clrf	tblptru,c
  3062   002320                     	endif
  3063   002320                     	if	0	;tblptru may be non-zero
  3064   002320                     	endif
  3065   002320  0008               	tblrd		*
  3066   002322  50F5               	movf	tablat,w,c
  3067   002324  0900               	iorlw	0
  3068   002326  A4D8               	btfss	status,2,c
  3069   002328  EF98  F011         	goto	u3821
  3070   00232C  EF9A  F011         	goto	u3820
  3071   002330                     u3821:
  3072   002330  EF83  F011         	goto	l4398
  3073   002334                     u3820:
  3074   002334                     
  3075                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3076   002334  0E00               	movlw	0
  3077   002336  6E18               	movwf	(?_vfprintf+1)^0,c
  3078   002338  0E00               	movlw	0
  3079   00233A  6E17               	movwf	?_vfprintf^0,c
  3080   00233C  0012               	return		;funcret
  3081   00233E                     __end_of_vfprintf:
  3082                           	callstack 0
  3083                           
  3084 ;; *************** function _vfpfcnvrt *****************
  3085 ;; Defined at:
  3086 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  fp              1   11[COMRAM] PTR struct _IO_FILE
  3089 ;;		 -> sprintf@f(12), 
  3090 ;;  fmt             1   12[COMRAM] PTR PTR unsigned char 
  3091 ;;		 -> vfprintf@cfmt(1), 
  3092 ;;  ap              1   13[COMRAM] PTR PTR void 
  3093 ;;		 -> sprintf@ap(1), 
  3094 ;; Auto vars:     Size  Location     Type
  3095 ;;  convarg         4   17[COMRAM] struct .
  3096 ;;  c               1   21[COMRAM] unsigned char 
  3097 ;;  cp              1   16[COMRAM] PTR unsigned char 
  3098 ;;		 -> STR_3(3), STR_2(3), STR_1(3), 
  3099 ;;  done            1   15[COMRAM] _Bool 
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      void 
  3102 ;; Registers used:
  3103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3109 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3111 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3112 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3113 ;;Total ram usage:       11 bytes
  3114 ;; Hardware stack levels used: 1
  3115 ;; Hardware stack levels required when called: 4
  3116 ;; This function calls:
  3117 ;;		___awdiv
  3118 ;;		___awmod
  3119 ;;		_abs
  3120 ;;		_fputc
  3121 ;; This function is called by:
  3122 ;;		_vfprintf
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           	psect	text19
  3127   0012A2                     __ptext19:
  3128                           	callstack 0
  3129   0012A2                     _vfpfcnvrt:
  3130                           	callstack 23
  3131   0012A2                     
  3132                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3133   0012A2  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3134   0012A4  6ED9               	movwf	fsr2l,c
  3135   0012A6  6ADA               	clrf	fsr2h,c
  3136   0012A8  CFDF FFF6          	movff	indf2,tblptrl
  3137   0012AC                     	if	1	;There is more than 1 active tblptr byte
  3138   0012AC  0E10               	movlw	high __smallconst
  3139   0012AE  6EF7               	movwf	tblptrh,c
  3140   0012B0                     	endif
  3141   0012B0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3142   0012B0  6AF8               	clrf	tblptru,c
  3143   0012B2                     	endif
  3144   0012B2                     	if	0	;tblptru may be non-zero
  3145   0012B2                     	endif
  3146   0012B2  0008               	tblrd		*
  3147   0012B4  50F5               	movf	tablat,w,c
  3148   0012B6  0A25               	xorlw	37
  3149   0012B8  A4D8               	btfss	status,2,c
  3150   0012BA  EF61  F009         	goto	u3651
  3151   0012BE  EF63  F009         	goto	u3650
  3152   0012C2                     u3651:
  3153   0012C2  EF1E  F00A         	goto	l4314
  3154   0012C6                     u3650:
  3155   0012C6                     
  3156                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3157   0012C6  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3158   0012C8  6ED9               	movwf	fsr2l,c
  3159   0012CA  6ADA               	clrf	fsr2h,c
  3160   0012CC  2ADF               	incf	indf2,f,c
  3161   0012CE                     
  3162                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3163   0012CE  0E00               	movlw	0
  3164   0012D0  6E33               	movwf	(_width+1)^0,c
  3165   0012D2  0E00               	movlw	0
  3166   0012D4  6E32               	movwf	_width^0,c
  3167   0012D6  C032  F04C         	movff	_width,_flags
  3168   0012DA                     
  3169                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3170   0012DA  6834               	setf	_prec^0,c
  3171   0012DC  6835               	setf	(_prec+1)^0,c
  3172   0012DE                     
  3173                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3174   0012DE  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3175   0012E0  6ED9               	movwf	fsr2l,c
  3176   0012E2  6ADA               	clrf	fsr2h,c
  3177   0012E4  50DF               	movf	indf2,w,c
  3178   0012E6  6E11               	movwf	vfpfcnvrt@cp^0,c
  3179   0012E8                     
  3180                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3181   0012E8  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3182   0012EC                     	if	1	;There is more than 1 active tblptr byte
  3183   0012EC  0E10               	movlw	high __smallconst
  3184   0012EE  6EF7               	movwf	tblptrh,c
  3185   0012F0                     	endif
  3186   0012F0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3187   0012F0  6AF8               	clrf	tblptru,c
  3188   0012F2                     	endif
  3189   0012F2                     	if	0	;tblptru may be non-zero
  3190   0012F2                     	endif
  3191   0012F2  0008               	tblrd		*
  3192   0012F4  50F5               	movf	tablat,w,c
  3193   0012F6  0A64               	xorlw	100
  3194   0012F8  B4D8               	btfsc	status,2,c
  3195   0012FA  EF81  F009         	goto	u3661
  3196   0012FE  EF83  F009         	goto	u3660
  3197   001302                     u3661:
  3198   001302  EF92  F009         	goto	l4284
  3199   001306                     u3660:
  3200   001306  C011  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3201   00130A                     	if	1	;There is more than 1 active tblptr byte
  3202   00130A  0E10               	movlw	high __smallconst
  3203   00130C  6EF7               	movwf	tblptrh,c
  3204   00130E                     	endif
  3205   00130E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3206   00130E  6AF8               	clrf	tblptru,c
  3207   001310                     	endif
  3208   001310                     	if	0	;tblptru may be non-zero
  3209   001310                     	endif
  3210   001310  0008               	tblrd		*
  3211   001312  50F5               	movf	tablat,w,c
  3212   001314  0A69               	xorlw	105
  3213   001316  A4D8               	btfss	status,2,c
  3214   001318  EF90  F009         	goto	u3671
  3215   00131C  EF92  F009         	goto	u3670
  3216   001320                     u3671:
  3217   001320  EF18  F00A         	goto	l4310
  3218   001324                     u3670:
  3219   001324                     l4284:
  3220                           
  3221                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3222   001324  500E               	movf	vfpfcnvrt@ap^0,w,c
  3223   001326  6ED9               	movwf	fsr2l,c
  3224   001328  6ADA               	clrf	fsr2h,c
  3225   00132A  0E02               	movlw	2
  3226   00132C  26DF               	addwf	indf2,f,c
  3227   00132E  5CDF               	subwf	indf2,w,c
  3228   001330  6ED9               	movwf	fsr2l,c
  3229   001332  6ADA               	clrf	fsr2h,c
  3230   001334  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg
  3231   001338  CFDE F013          	movff	postinc2,vfpfcnvrt@convarg+1
  3232   00133C                     
  3233                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3234   00133C  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3235   00133E  6ED9               	movwf	fsr2l,c
  3236   001340  6ADA               	clrf	fsr2h,c
  3237   001342  2811               	incf	vfpfcnvrt@cp^0,w,c
  3238   001344  6EDF               	movwf	indf2,c
  3239   001346                     
  3240                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3241   001346  0E20               	movlw	32
  3242   001348  6E16               	movwf	vfpfcnvrt@c^0,c
  3243                           
  3244                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3245   00134A  BE13               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  3246   00134C  EFAA  F009         	goto	u3681
  3247   001350  EFAD  F009         	goto	u3680
  3248   001354                     u3681:
  3249   001354  0E01               	movlw	1
  3250   001356  EFAE  F009         	goto	u3690
  3251   00135A                     u3680:
  3252   00135A  0E00               	movlw	0
  3253   00135C                     u3690:
  3254   00135C  6E10               	movwf	vfpfcnvrt@done^0,c
  3255   00135E                     l4290:
  3256                           
  3257                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3258   00135E  0616               	decf	vfpfcnvrt@c^0,f,c
  3259   001360  5016               	movf	vfpfcnvrt@c^0,w,c
  3260   001362  0F80               	addlw	low _dbuf
  3261   001364  6ED9               	movwf	fsr2l,c
  3262   001366  6ADA               	clrf	fsr2h,c
  3263   001368  C012  F002         	movff	vfpfcnvrt@convarg,___awmod@dividend
  3264   00136C  C013  F003         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  3265   001370  0E00               	movlw	0
  3266   001372  6E05               	movwf	(___awmod@divisor+1)^0,c
  3267   001374  0E0A               	movlw	10
  3268   001376  6E04               	movwf	___awmod@divisor^0,c
  3269   001378  EC9C  F00D         	call	___awmod	;wreg free
  3270   00137C  C002  F008         	movff	?___awmod,abs@a
  3271   001380  C003  F009         	movff	?___awmod+1,abs@a+1
  3272   001384  EC11  F012         	call	_abs	;wreg free
  3273   001388  5008               	movf	?_abs^0,w,c
  3274   00138A  0F30               	addlw	48
  3275   00138C  6EDF               	movwf	indf2,c
  3276   00138E                     
  3277                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3278   00138E  C012  F002         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  3279   001392  C013  F003         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  3280   001396  0E00               	movlw	0
  3281   001398  6E05               	movwf	(___awdiv@divisor+1)^0,c
  3282   00139A  0E0A               	movlw	10
  3283   00139C  6E04               	movwf	___awdiv@divisor^0,c
  3284   00139E  ECDC  F00C         	call	___awdiv	;wreg free
  3285   0013A2  C002  F012         	movff	?___awdiv,vfpfcnvrt@convarg
  3286   0013A6  C003  F013         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  3287   0013AA                     
  3288                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3289   0013AA  5012               	movf	vfpfcnvrt@convarg^0,w,c
  3290   0013AC  1013               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3291   0013AE  B4D8               	btfsc	status,2,c
  3292   0013B0  EFDC  F009         	goto	u3701
  3293   0013B4  EFDE  F009         	goto	u3700
  3294   0013B8                     u3701:
  3295   0013B8  EFE6  F009         	goto	l4298
  3296   0013BC                     u3700:
  3297   0013BC  5016               	movf	vfpfcnvrt@c^0,w,c
  3298   0013BE  A4D8               	btfss	status,2,c
  3299   0013C0  EFE4  F009         	goto	u3711
  3300   0013C4  EFE6  F009         	goto	u3710
  3301   0013C8                     u3711:
  3302   0013C8  EFAF  F009         	goto	l4290
  3303   0013CC                     u3710:
  3304   0013CC                     l4298:
  3305                           
  3306                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3307   0013CC  5016               	movf	vfpfcnvrt@c^0,w,c
  3308   0013CE  B4D8               	btfsc	status,2,c
  3309   0013D0  EFEC  F009         	goto	u3721
  3310   0013D4  EFEE  F009         	goto	u3720
  3311   0013D8                     u3721:
  3312   0013D8  EF0D  F00A         	goto	l4308
  3313   0013DC                     u3720:
  3314   0013DC  5010               	movf	vfpfcnvrt@done^0,w,c
  3315   0013DE  B4D8               	btfsc	status,2,c
  3316   0013E0  EFF4  F009         	goto	u3731
  3317   0013E4  EFF6  F009         	goto	u3730
  3318   0013E8                     u3731:
  3319   0013E8  EF0D  F00A         	goto	l4308
  3320   0013EC                     u3730:
  3321   0013EC                     
  3322                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3323   0013EC  0616               	decf	vfpfcnvrt@c^0,f,c
  3324   0013EE  5016               	movf	vfpfcnvrt@c^0,w,c
  3325   0013F0  0F80               	addlw	low _dbuf
  3326   0013F2  6ED9               	movwf	fsr2l,c
  3327   0013F4  6ADA               	clrf	fsr2h,c
  3328   0013F6  0E2D               	movlw	45
  3329   0013F8  6EDF               	movwf	indf2,c
  3330   0013FA  EF0D  F00A         	goto	l4308
  3331   0013FE                     l4304:
  3332                           
  3333                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  3334   0013FE  5016               	movf	vfpfcnvrt@c^0,w,c
  3335   001400  0F80               	addlw	low _dbuf
  3336   001402  6ED9               	movwf	fsr2l,c
  3337   001404  6ADA               	clrf	fsr2h,c
  3338   001406  50DF               	movf	indf2,w,c
  3339   001408  6E0F               	movwf	??_vfpfcnvrt^0,c
  3340   00140A  500F               	movf	??_vfpfcnvrt^0,w,c
  3341   00140C  6E02               	movwf	fputc@c^0,c
  3342   00140E  6A03               	clrf	(fputc@c+1)^0,c
  3343   001410  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  3344   001414  ECF4  F00D         	call	_fputc	;wreg free
  3345   001418  2A16               	incf	vfpfcnvrt@c^0,f,c
  3346   00141A                     l4308:
  3347                           
  3348                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  3349   00141A  0E20               	movlw	32
  3350   00141C  1816               	xorwf	vfpfcnvrt@c^0,w,c
  3351   00141E  A4D8               	btfss	status,2,c
  3352   001420  EF14  F00A         	goto	u3741
  3353   001424  EF16  F00A         	goto	u3740
  3354   001428                     u3741:
  3355   001428  EFFF  F009         	goto	l4304
  3356   00142C                     u3740:
  3357   00142C  EF30  F00A         	goto	l1542
  3358   001430                     l4310:
  3359                           
  3360                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3361   001430  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3362   001432  6ED9               	movwf	fsr2l,c
  3363   001434  6ADA               	clrf	fsr2h,c
  3364   001436  2ADF               	incf	indf2,f,c
  3365   001438  EF30  F00A         	goto	l1542
  3366   00143C                     l4314:
  3367                           
  3368                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3369   00143C  500D               	movf	vfpfcnvrt@fmt^0,w,c
  3370   00143E  6ED9               	movwf	fsr2l,c
  3371   001440  6ADA               	clrf	fsr2h,c
  3372   001442  CFDF FFF6          	movff	indf2,tblptrl
  3373   001446                     	if	1	;There is more than 1 active tblptr byte
  3374   001446  0E10               	movlw	high __smallconst
  3375   001448  6EF7               	movwf	tblptrh,c
  3376   00144A                     	endif
  3377   00144A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3378   00144A  6AF8               	clrf	tblptru,c
  3379   00144C                     	endif
  3380   00144C                     	if	0	;tblptru may be non-zero
  3381   00144C                     	endif
  3382   00144C  0008               	tblrd		*
  3383   00144E  50F5               	movf	tablat,w,c
  3384   001450  6E02               	movwf	fputc@c^0,c
  3385   001452  6A03               	clrf	(fputc@c+1)^0,c
  3386   001454  C00C  F004         	movff	vfpfcnvrt@fp,fputc@fp
  3387   001458  ECF4  F00D         	call	_fputc	;wreg free
  3388   00145C  EF18  F00A         	goto	l4310
  3389   001460                     l1542:
  3390   001460  0012               	return		;funcret
  3391   001462                     __end_of_vfpfcnvrt:
  3392                           	callstack 0
  3393                           
  3394 ;; *************** function _fputc *****************
  3395 ;; Defined at:
  3396 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  c               2    1[COMRAM] int 
  3399 ;;  fp              1    3[COMRAM] PTR struct _IO_FILE
  3400 ;;		 -> sprintf@f(12), 
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;		None
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  2    1[COMRAM] int 
  3405 ;; Registers used:
  3406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3412 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;Total ram usage:        8 bytes
  3417 ;; Hardware stack levels used: 1
  3418 ;; Hardware stack levels required when called: 3
  3419 ;; This function calls:
  3420 ;;		_putch
  3421 ;; This function is called by:
  3422 ;;		_vfpfcnvrt
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           	psect	text20
  3427   001BE8                     __ptext20:
  3428                           	callstack 0
  3429   001BE8                     _fputc:
  3430                           	callstack 23
  3431   001BE8  5004               	movf	fputc@fp^0,w,c
  3432   001BEA  B4D8               	btfsc	status,2,c
  3433   001BEC  EFFA  F00D         	goto	u3561
  3434   001BF0  EFFC  F00D         	goto	u3560
  3435   001BF4                     u3561:
  3436   001BF4  EF04  F00E         	goto	l4224
  3437   001BF8                     u3560:
  3438   001BF8  5004               	movf	fputc@fp^0,w,c
  3439   001BFA  A4D8               	btfss	status,2,c
  3440   001BFC  EF02  F00E         	goto	u3571
  3441   001C00  EF04  F00E         	goto	u3570
  3442   001C04                     u3571:
  3443   001C04  EF09  F00E         	goto	l4226
  3444   001C08                     u3570:
  3445   001C08                     l4224:
  3446   001C08  5002               	movf	fputc@c^0,w,c
  3447   001C0A  ECA5  F012         	call	_putch
  3448   001C0E  EF48  F00E         	goto	l1567
  3449   001C12                     l4226:
  3450   001C12  5004               	movf	fputc@fp^0,w,c
  3451   001C14  6ED9               	movwf	fsr2l,c
  3452   001C16  6ADA               	clrf	fsr2h,c
  3453   001C18  0E0A               	movlw	10
  3454   001C1A  26D9               	addwf	fsr2l,f,c
  3455   001C1C  50DE               	movf	postinc2,w,c
  3456   001C1E  10DE               	iorwf	postinc2,w,c
  3457   001C20  B4D8               	btfsc	status,2,c
  3458   001C22  EF15  F00E         	goto	u3581
  3459   001C26  EF17  F00E         	goto	u3580
  3460   001C2A                     u3581:
  3461   001C2A  EF30  F00E         	goto	l4230
  3462   001C2E                     u3580:
  3463   001C2E  5004               	movf	fputc@fp^0,w,c
  3464   001C30  6ED9               	movwf	fsr2l,c
  3465   001C32  6ADA               	clrf	fsr2h,c
  3466   001C34  0E0A               	movlw	10
  3467   001C36  26D9               	addwf	fsr2l,f,c
  3468   001C38  5004               	movf	fputc@fp^0,w,c
  3469   001C3A  6EE1               	movwf	fsr1l,c
  3470   001C3C  6AE2               	clrf	fsr1h,c
  3471   001C3E  0E03               	movlw	3
  3472   001C40  26E1               	addwf	fsr1l,f,c
  3473   001C42  50DE               	movf	postinc2,w,c
  3474   001C44  5CE6               	subwf	postinc1,w,c
  3475   001C46  50E6               	movf	postinc1,w,c
  3476   001C48  0A80               	xorlw	128
  3477   001C4A  6E09               	movwf	(??_fputc+4)^0,c
  3478   001C4C  50DE               	movf	postinc2,w,c
  3479   001C4E  0A80               	xorlw	128
  3480   001C50  5809               	subwfb	(??_fputc+4)^0,w,c
  3481   001C52  B0D8               	btfsc	status,0,c
  3482   001C54  EF2E  F00E         	goto	u3591
  3483   001C58  EF30  F00E         	goto	u3590
  3484   001C5C                     u3591:
  3485   001C5C  EF48  F00E         	goto	l1567
  3486   001C60                     u3590:
  3487   001C60                     l4230:
  3488   001C60  5004               	movf	fputc@fp^0,w,c
  3489   001C62  6ED9               	movwf	fsr2l,c
  3490   001C64  6ADA               	clrf	fsr2h,c
  3491   001C66  0E03               	movlw	3
  3492   001C68  26D9               	addwf	fsr2l,f,c
  3493   001C6A  50DF               	movf	indf2,w,c
  3494   001C6C  6E05               	movwf	??_fputc^0,c
  3495   001C6E  5004               	movf	fputc@fp^0,w,c
  3496   001C70  6ED9               	movwf	fsr2l,c
  3497   001C72  6ADA               	clrf	fsr2h,c
  3498   001C74  50DF               	movf	indf2,w,c
  3499   001C76  2405               	addwf	??_fputc^0,w,c
  3500   001C78  6ED9               	movwf	fsr2l,c
  3501   001C7A  6ADA               	clrf	fsr2h,c
  3502   001C7C  C002  FFDF         	movff	fputc@c,indf2
  3503   001C80  5004               	movf	fputc@fp^0,w,c
  3504   001C82  6ED9               	movwf	fsr2l,c
  3505   001C84  6ADA               	clrf	fsr2h,c
  3506   001C86  0E03               	movlw	3
  3507   001C88  26D9               	addwf	fsr2l,f,c
  3508   001C8A  2ADE               	incf	postinc2,f,c
  3509   001C8C  0E00               	movlw	0
  3510   001C8E  22DD               	addwfc	postdec2,f,c
  3511   001C90                     l1567:
  3512   001C90  0012               	return		;funcret
  3513   001C92                     __end_of_fputc:
  3514                           	callstack 0
  3515                           
  3516 ;; *************** function _putch *****************
  3517 ;; Defined at:
  3518 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  3519 ;; Parameters:    Size  Location     Type
  3520 ;;  c               1    wreg     unsigned char 
  3521 ;; Auto vars:     Size  Location     Type
  3522 ;;  c               1    0[COMRAM] unsigned char 
  3523 ;; Return value:  Size  Location     Type
  3524 ;;                  1    wreg      void 
  3525 ;; Registers used:
  3526 ;;		wreg
  3527 ;; Tracked objects:
  3528 ;;		On entry : 0/0
  3529 ;;		On exit  : 0/0
  3530 ;;		Unchanged: 0/0
  3531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3536 ;;Total ram usage:        0 bytes
  3537 ;; Hardware stack levels used: 1
  3538 ;; Hardware stack levels required when called: 2
  3539 ;; This function calls:
  3540 ;;		Nothing
  3541 ;; This function is called by:
  3542 ;;		_fputc
  3543 ;; This function uses a non-reentrant model
  3544 ;;
  3545                           
  3546                           	psect	text21
  3547   00254A                     __ptext21:
  3548                           	callstack 0
  3549   00254A                     _putch:
  3550                           	callstack 23
  3551   00254A  0012               	return		;funcret
  3552   00254C                     __end_of_putch:
  3553                           	callstack 0
  3554                           
  3555 ;; *************** function _abs *****************
  3556 ;; Defined at:
  3557 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;  a               2    7[COMRAM] int 
  3560 ;; Auto vars:     Size  Location     Type
  3561 ;;		None
  3562 ;; Return value:  Size  Location     Type
  3563 ;;                  2    7[COMRAM] int 
  3564 ;; Registers used:
  3565 ;;		wreg, status,2, status,0
  3566 ;; Tracked objects:
  3567 ;;		On entry : 0/0
  3568 ;;		On exit  : 0/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3571 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3573 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3574 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;Total ram usage:        4 bytes
  3576 ;; Hardware stack levels used: 1
  3577 ;; Hardware stack levels required when called: 2
  3578 ;; This function calls:
  3579 ;;		Nothing
  3580 ;; This function is called by:
  3581 ;;		_vfpfcnvrt
  3582 ;; This function uses a non-reentrant model
  3583 ;;
  3584                           
  3585                           	psect	text22
  3586   002422                     __ptext22:
  3587                           	callstack 0
  3588   002422                     _abs:
  3589                           	callstack 24
  3590   002422  BE09               	btfsc	(abs@a+1)^0,7,c
  3591   002424  EF16  F012         	goto	u3601
  3592   002428  EF18  F012         	goto	u3600
  3593   00242C                     u3601:
  3594   00242C  EF1E  F012         	goto	l1552
  3595   002430                     u3600:
  3596   002430  C008  F008         	movff	abs@a,?_abs
  3597   002434  C009  F009         	movff	abs@a+1,?_abs+1
  3598   002438  EF2A  F012         	goto	l1555
  3599   00243C                     l1552:
  3600   00243C  C008  F00A         	movff	abs@a,??_abs
  3601   002440  C009  F00B         	movff	abs@a+1,??_abs+1
  3602   002444  1E0A               	comf	??_abs^0,f,c
  3603   002446  1E0B               	comf	(??_abs+1)^0,f,c
  3604   002448  4A0A               	infsnz	??_abs^0,f,c
  3605   00244A  2A0B               	incf	(??_abs+1)^0,f,c
  3606   00244C  C00A  F008         	movff	??_abs,?_abs
  3607   002450  C00B  F009         	movff	??_abs+1,?_abs+1
  3608   002454                     l1555:
  3609   002454  0012               	return		;funcret
  3610   002456                     __end_of_abs:
  3611                           	callstack 0
  3612                           
  3613 ;; *************** function ___awmod *****************
  3614 ;; Defined at:
  3615 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  3616 ;; Parameters:    Size  Location     Type
  3617 ;;  dividend        2    1[COMRAM] int 
  3618 ;;  divisor         2    3[COMRAM] int 
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;  sign            1    6[COMRAM] unsigned char 
  3621 ;;  counter         1    5[COMRAM] unsigned char 
  3622 ;; Return value:  Size  Location     Type
  3623 ;;                  2    1[COMRAM] int 
  3624 ;; Registers used:
  3625 ;;		wreg, status,2, status,0
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3631 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;Total ram usage:        6 bytes
  3636 ;; Hardware stack levels used: 1
  3637 ;; Hardware stack levels required when called: 2
  3638 ;; This function calls:
  3639 ;;		Nothing
  3640 ;; This function is called by:
  3641 ;;		_vfpfcnvrt
  3642 ;; This function uses a non-reentrant model
  3643 ;;
  3644                           
  3645                           	psect	text23
  3646   001B38                     __ptext23:
  3647                           	callstack 0
  3648   001B38                     ___awmod:
  3649                           	callstack 24
  3650   001B38  0E00               	movlw	0
  3651   001B3A  6E07               	movwf	___awmod@sign^0,c
  3652   001B3C  BE03               	btfsc	(___awmod@dividend+1)^0,7,c
  3653   001B3E  EFA5  F00D         	goto	u3500
  3654   001B42  EFA3  F00D         	goto	u3501
  3655   001B46                     u3501:
  3656   001B46  EFAB  F00D         	goto	l4192
  3657   001B4A                     u3500:
  3658   001B4A  6C02               	negf	___awmod@dividend^0,c
  3659   001B4C  1E03               	comf	(___awmod@dividend+1)^0,f,c
  3660   001B4E  B0D8               	btfsc	status,0,c
  3661   001B50  2A03               	incf	(___awmod@dividend+1)^0,f,c
  3662   001B52  0E01               	movlw	1
  3663   001B54  6E07               	movwf	___awmod@sign^0,c
  3664   001B56                     l4192:
  3665   001B56  BE05               	btfsc	(___awmod@divisor+1)^0,7,c
  3666   001B58  EFB2  F00D         	goto	u3510
  3667   001B5C  EFB0  F00D         	goto	u3511
  3668   001B60                     u3511:
  3669   001B60  EFB6  F00D         	goto	l4196
  3670   001B64                     u3510:
  3671   001B64  6C04               	negf	___awmod@divisor^0,c
  3672   001B66  1E05               	comf	(___awmod@divisor+1)^0,f,c
  3673   001B68  B0D8               	btfsc	status,0,c
  3674   001B6A  2A05               	incf	(___awmod@divisor+1)^0,f,c
  3675   001B6C                     l4196:
  3676   001B6C  5004               	movf	___awmod@divisor^0,w,c
  3677   001B6E  1005               	iorwf	(___awmod@divisor+1)^0,w,c
  3678   001B70  B4D8               	btfsc	status,2,c
  3679   001B72  EFBD  F00D         	goto	u3521
  3680   001B76  EFBF  F00D         	goto	u3520
  3681   001B7A                     u3521:
  3682   001B7A  EFE3  F00D         	goto	l4212
  3683   001B7E                     u3520:
  3684   001B7E  0E01               	movlw	1
  3685   001B80  6E06               	movwf	___awmod@counter^0,c
  3686   001B82  EFC7  F00D         	goto	l4202
  3687   001B86                     l4200:
  3688   001B86  90D8               	bcf	status,0,c
  3689   001B88  3604               	rlcf	___awmod@divisor^0,f,c
  3690   001B8A  3605               	rlcf	(___awmod@divisor+1)^0,f,c
  3691   001B8C  2A06               	incf	___awmod@counter^0,f,c
  3692   001B8E                     l4202:
  3693   001B8E  AE05               	btfss	(___awmod@divisor+1)^0,7,c
  3694   001B90  EFCC  F00D         	goto	u3531
  3695   001B94  EFCE  F00D         	goto	u3530
  3696   001B98                     u3531:
  3697   001B98  EFC3  F00D         	goto	l4200
  3698   001B9C                     u3530:
  3699   001B9C                     l4204:
  3700   001B9C  5004               	movf	___awmod@divisor^0,w,c
  3701   001B9E  5C02               	subwf	___awmod@dividend^0,w,c
  3702   001BA0  5005               	movf	(___awmod@divisor+1)^0,w,c
  3703   001BA2  5803               	subwfb	(___awmod@dividend+1)^0,w,c
  3704   001BA4  A0D8               	btfss	status,0,c
  3705   001BA6  EFD7  F00D         	goto	u3541
  3706   001BAA  EFD9  F00D         	goto	u3540
  3707   001BAE                     u3541:
  3708   001BAE  EFDD  F00D         	goto	l4208
  3709   001BB2                     u3540:
  3710   001BB2  5004               	movf	___awmod@divisor^0,w,c
  3711   001BB4  5E02               	subwf	___awmod@dividend^0,f,c
  3712   001BB6  5005               	movf	(___awmod@divisor+1)^0,w,c
  3713   001BB8  5A03               	subwfb	(___awmod@dividend+1)^0,f,c
  3714   001BBA                     l4208:
  3715   001BBA  90D8               	bcf	status,0,c
  3716   001BBC  3205               	rrcf	(___awmod@divisor+1)^0,f,c
  3717   001BBE  3204               	rrcf	___awmod@divisor^0,f,c
  3718   001BC0  2E06               	decfsz	___awmod@counter^0,f,c
  3719   001BC2  EFCE  F00D         	goto	l4204
  3720   001BC6                     l4212:
  3721   001BC6  5007               	movf	___awmod@sign^0,w,c
  3722   001BC8  B4D8               	btfsc	status,2,c
  3723   001BCA  EFE9  F00D         	goto	u3551
  3724   001BCE  EFEB  F00D         	goto	u3550
  3725   001BD2                     u3551:
  3726   001BD2  EFEF  F00D         	goto	l4216
  3727   001BD6                     u3550:
  3728   001BD6  6C02               	negf	___awmod@dividend^0,c
  3729   001BD8  1E03               	comf	(___awmod@dividend+1)^0,f,c
  3730   001BDA  B0D8               	btfsc	status,0,c
  3731   001BDC  2A03               	incf	(___awmod@dividend+1)^0,f,c
  3732   001BDE                     l4216:
  3733   001BDE  C002  F002         	movff	___awmod@dividend,?___awmod
  3734   001BE2  C003  F003         	movff	___awmod@dividend+1,?___awmod+1
  3735   001BE6  0012               	return		;funcret
  3736   001BE8                     __end_of___awmod:
  3737                           	callstack 0
  3738                           
  3739 ;; *************** function ___awdiv *****************
  3740 ;; Defined at:
  3741 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  3742 ;; Parameters:    Size  Location     Type
  3743 ;;  dividend        2    1[COMRAM] int 
  3744 ;;  divisor         2    3[COMRAM] int 
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;  quotient        2    7[COMRAM] int 
  3747 ;;  sign            1    6[COMRAM] unsigned char 
  3748 ;;  counter         1    5[COMRAM] unsigned char 
  3749 ;; Return value:  Size  Location     Type
  3750 ;;                  2    1[COMRAM] int 
  3751 ;; Registers used:
  3752 ;;		wreg, status,2, status,0
  3753 ;; Tracked objects:
  3754 ;;		On entry : 0/0
  3755 ;;		On exit  : 0/0
  3756 ;;		Unchanged: 0/0
  3757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3758 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3759 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3761 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3762 ;;Total ram usage:        8 bytes
  3763 ;; Hardware stack levels used: 1
  3764 ;; Hardware stack levels required when called: 2
  3765 ;; This function calls:
  3766 ;;		Nothing
  3767 ;; This function is called by:
  3768 ;;		_vfpfcnvrt
  3769 ;; This function uses a non-reentrant model
  3770 ;;
  3771                           
  3772                           	psect	text24
  3773   0019B8                     __ptext24:
  3774                           	callstack 0
  3775   0019B8                     ___awdiv:
  3776                           	callstack 24
  3777   0019B8  0E00               	movlw	0
  3778   0019BA  6E07               	movwf	___awdiv@sign^0,c
  3779   0019BC  BE05               	btfsc	(___awdiv@divisor+1)^0,7,c
  3780   0019BE  EFE5  F00C         	goto	u3440
  3781   0019C2  EFE3  F00C         	goto	u3441
  3782   0019C6                     u3441:
  3783   0019C6  EFEB  F00C         	goto	l4148
  3784   0019CA                     u3440:
  3785   0019CA  6C04               	negf	___awdiv@divisor^0,c
  3786   0019CC  1E05               	comf	(___awdiv@divisor+1)^0,f,c
  3787   0019CE  B0D8               	btfsc	status,0,c
  3788   0019D0  2A05               	incf	(___awdiv@divisor+1)^0,f,c
  3789   0019D2  0E01               	movlw	1
  3790   0019D4  6E07               	movwf	___awdiv@sign^0,c
  3791   0019D6                     l4148:
  3792   0019D6  BE03               	btfsc	(___awdiv@dividend+1)^0,7,c
  3793   0019D8  EFF2  F00C         	goto	u3450
  3794   0019DC  EFF0  F00C         	goto	u3451
  3795   0019E0                     u3451:
  3796   0019E0  EFF8  F00C         	goto	l4154
  3797   0019E4                     u3450:
  3798   0019E4  6C02               	negf	___awdiv@dividend^0,c
  3799   0019E6  1E03               	comf	(___awdiv@dividend+1)^0,f,c
  3800   0019E8  B0D8               	btfsc	status,0,c
  3801   0019EA  2A03               	incf	(___awdiv@dividend+1)^0,f,c
  3802   0019EC  0E01               	movlw	1
  3803   0019EE  1A07               	xorwf	___awdiv@sign^0,f,c
  3804   0019F0                     l4154:
  3805   0019F0  0E00               	movlw	0
  3806   0019F2  6E09               	movwf	(___awdiv@quotient+1)^0,c
  3807   0019F4  0E00               	movlw	0
  3808   0019F6  6E08               	movwf	___awdiv@quotient^0,c
  3809   0019F8  5004               	movf	___awdiv@divisor^0,w,c
  3810   0019FA  1005               	iorwf	(___awdiv@divisor+1)^0,w,c
  3811   0019FC  B4D8               	btfsc	status,2,c
  3812   0019FE  EF03  F00D         	goto	u3461
  3813   001A02  EF05  F00D         	goto	u3460
  3814   001A06                     u3461:
  3815   001A06  EF2D  F00D         	goto	l4176
  3816   001A0A                     u3460:
  3817   001A0A  0E01               	movlw	1
  3818   001A0C  6E06               	movwf	___awdiv@counter^0,c
  3819   001A0E  EF0D  F00D         	goto	l4162
  3820   001A12                     l4160:
  3821   001A12  90D8               	bcf	status,0,c
  3822   001A14  3604               	rlcf	___awdiv@divisor^0,f,c
  3823   001A16  3605               	rlcf	(___awdiv@divisor+1)^0,f,c
  3824   001A18  2A06               	incf	___awdiv@counter^0,f,c
  3825   001A1A                     l4162:
  3826   001A1A  AE05               	btfss	(___awdiv@divisor+1)^0,7,c
  3827   001A1C  EF12  F00D         	goto	u3471
  3828   001A20  EF14  F00D         	goto	u3470
  3829   001A24                     u3471:
  3830   001A24  EF09  F00D         	goto	l4160
  3831   001A28                     u3470:
  3832   001A28                     l4164:
  3833   001A28  90D8               	bcf	status,0,c
  3834   001A2A  3608               	rlcf	___awdiv@quotient^0,f,c
  3835   001A2C  3609               	rlcf	(___awdiv@quotient+1)^0,f,c
  3836   001A2E  5004               	movf	___awdiv@divisor^0,w,c
  3837   001A30  5C02               	subwf	___awdiv@dividend^0,w,c
  3838   001A32  5005               	movf	(___awdiv@divisor+1)^0,w,c
  3839   001A34  5803               	subwfb	(___awdiv@dividend+1)^0,w,c
  3840   001A36  A0D8               	btfss	status,0,c
  3841   001A38  EF20  F00D         	goto	u3481
  3842   001A3C  EF22  F00D         	goto	u3480
  3843   001A40                     u3481:
  3844   001A40  EF27  F00D         	goto	l4172
  3845   001A44                     u3480:
  3846   001A44  5004               	movf	___awdiv@divisor^0,w,c
  3847   001A46  5E02               	subwf	___awdiv@dividend^0,f,c
  3848   001A48  5005               	movf	(___awdiv@divisor+1)^0,w,c
  3849   001A4A  5A03               	subwfb	(___awdiv@dividend+1)^0,f,c
  3850   001A4C  8008               	bsf	___awdiv@quotient^0,0,c
  3851   001A4E                     l4172:
  3852   001A4E  90D8               	bcf	status,0,c
  3853   001A50  3205               	rrcf	(___awdiv@divisor+1)^0,f,c
  3854   001A52  3204               	rrcf	___awdiv@divisor^0,f,c
  3855   001A54  2E06               	decfsz	___awdiv@counter^0,f,c
  3856   001A56  EF14  F00D         	goto	l4164
  3857   001A5A                     l4176:
  3858   001A5A  5007               	movf	___awdiv@sign^0,w,c
  3859   001A5C  B4D8               	btfsc	status,2,c
  3860   001A5E  EF33  F00D         	goto	u3491
  3861   001A62  EF35  F00D         	goto	u3490
  3862   001A66                     u3491:
  3863   001A66  EF39  F00D         	goto	l4180
  3864   001A6A                     u3490:
  3865   001A6A  6C08               	negf	___awdiv@quotient^0,c
  3866   001A6C  1E09               	comf	(___awdiv@quotient+1)^0,f,c
  3867   001A6E  B0D8               	btfsc	status,0,c
  3868   001A70  2A09               	incf	(___awdiv@quotient+1)^0,f,c
  3869   001A72                     l4180:
  3870   001A72  C008  F002         	movff	___awdiv@quotient,?___awdiv
  3871   001A76  C009  F003         	movff	___awdiv@quotient+1,?___awdiv+1
  3872   001A7A  0012               	return		;funcret
  3873   001A7C                     __end_of___awdiv:
  3874                           	callstack 0
  3875                           
  3876 ;; *************** function _memset *****************
  3877 ;; Defined at:
  3878 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memset.c"
  3879 ;; Parameters:    Size  Location     Type
  3880 ;;  dest            1    1[COMRAM] PTR void 
  3881 ;;		 -> main@buff(6), 
  3882 ;;  c               2    2[COMRAM] int 
  3883 ;;  n               2    4[COMRAM] unsigned int 
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  p               1    6[COMRAM] PTR unsigned char 
  3886 ;;		 -> main@buff(6), 
  3887 ;; Return value:  Size  Location     Type
  3888 ;;                  1    wreg      PTR void 
  3889 ;; Registers used:
  3890 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3891 ;; Tracked objects:
  3892 ;;		On entry : 0/0
  3893 ;;		On exit  : 0/0
  3894 ;;		Unchanged: 0/0
  3895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3896 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3897 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3899 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3900 ;;Total ram usage:        6 bytes
  3901 ;; Hardware stack levels used: 1
  3902 ;; Hardware stack levels required when called: 2
  3903 ;; This function calls:
  3904 ;;		Nothing
  3905 ;; This function is called by:
  3906 ;;		_convert_uint16_to_string
  3907 ;;		_convert_uint8_to_string
  3908 ;;		_convert_uint32_to_string
  3909 ;; This function uses a non-reentrant model
  3910 ;;
  3911                           
  3912                           	psect	text25
  3913   002456                     __ptext25:
  3914                           	callstack 0
  3915   002456                     _memset:
  3916                           	callstack 27
  3917   002456  C002  F007         	movff	memset@dest,memset@p
  3918   00245A  EF35  F012         	goto	l4466
  3919   00245E                     l4462:
  3920   00245E  5007               	movf	memset@p^0,w,c
  3921   002460  6ED9               	movwf	fsr2l,c
  3922   002462  6ADA               	clrf	fsr2h,c
  3923   002464  C003  FFDF         	movff	memset@c,indf2
  3924   002468  2A07               	incf	memset@p^0,f,c
  3925   00246A                     l4466:
  3926   00246A  0605               	decf	memset@n^0,f,c
  3927   00246C  A0D8               	btfss	status,0,c
  3928   00246E  0606               	decf	(memset@n+1)^0,f,c
  3929   002470  2805               	incf	memset@n^0,w,c
  3930   002472  E106               	bnz	u3911
  3931   002474  2806               	incf	(memset@n+1)^0,w,c
  3932   002476  A4D8               	btfss	status,2,c
  3933   002478  EF40  F012         	goto	u3911
  3934   00247C  EF42  F012         	goto	u3910
  3935   002480                     u3911:
  3936   002480  EF2F  F012         	goto	l4462
  3937   002484                     u3910:
  3938   002484  0012               	return		;funcret
  3939   002486                     __end_of_memset:
  3940                           	callstack 0
  3941                           
  3942 ;; *************** function _ADC_Init *****************
  3943 ;; Defined at:
  3944 ;;		line 37 in file "MCAL_Layer/ADC/adc.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;  adc             1    4[COMRAM] PTR const struct .
  3947 ;;		 -> adc1(5), 
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;  ret             1    0        unsigned char 
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      unsigned char 
  3952 ;; Registers used:
  3953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3959 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3961 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3962 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3963 ;;Total ram usage:        2 bytes
  3964 ;; Hardware stack levels used: 1
  3965 ;; Hardware stack levels required when called: 3
  3966 ;; This function calls:
  3967 ;;		_ADC_Input_Channel_Pin_Config
  3968 ;;		_ADC_Select_Result_Format
  3969 ;;		_ADC_Select_Volt_Ref
  3970 ;; This function is called by:
  3971 ;;		_main
  3972 ;; This function uses a non-reentrant model
  3973 ;;
  3974                           
  3975                           	psect	text26
  3976   001E5C                     __ptext26:
  3977                           	callstack 0
  3978   001E5C                     _ADC_Init:
  3979                           	callstack 27
  3980   001E5C                     
  3981                           ;MCAL_Layer/ADC/adc.c: 40:     if (((void*)0) == adc) {
  3982   001E5C  5005               	movf	ADC_Init@adc^0,w,c
  3983   001E5E  A4D8               	btfss	status,2,c
  3984   001E60  EF34  F00F         	goto	u4171
  3985   001E64  EF36  F00F         	goto	u4170
  3986   001E68                     u4171:
  3987   001E68  EF38  F00F         	goto	l732
  3988   001E6C                     u4170:
  3989   001E6C                     
  3990                           ;MCAL_Layer/ADC/adc.c: 42:     } else {
  3991   001E6C  EF71  F00F         	goto	l734
  3992   001E70                     l732:
  3993                           
  3994                           ;MCAL_Layer/ADC/adc.c: 44:         (ADCON0bits.ADON = 0);
  3995   001E70  90C2               	bcf	194,0,c	;volatile
  3996   001E72                     
  3997                           ;MCAL_Layer/ADC/adc.c: 46:         ADCON2bits.ACQT = adc->acq_time;
  3998   001E72  5005               	movf	ADC_Init@adc^0,w,c
  3999   001E74  6ED9               	movwf	fsr2l,c
  4000   001E76  6ADA               	clrf	fsr2h,c
  4001   001E78  50DF               	movf	indf2,w,c
  4002   001E7A  6E06               	movwf	??_ADC_Init^0,c
  4003   001E7C  4606               	rlncf	??_ADC_Init^0,f,c
  4004   001E7E  4606               	rlncf	??_ADC_Init^0,f,c
  4005   001E80  4606               	rlncf	??_ADC_Init^0,f,c
  4006   001E82  50C0               	movf	192,w,c	;volatile
  4007   001E84  1806               	xorwf	??_ADC_Init^0,w,c
  4008   001E86  0BC7               	andlw	-57
  4009   001E88  1806               	xorwf	??_ADC_Init^0,w,c
  4010   001E8A  6EC0               	movwf	192,c	;volatile
  4011                           
  4012                           ;MCAL_Layer/ADC/adc.c: 48:         ADCON2bits.ADCS = adc->clock;
  4013   001E8C  5005               	movf	ADC_Init@adc^0,w,c
  4014   001E8E  6ED9               	movwf	fsr2l,c
  4015   001E90  6ADA               	clrf	fsr2h,c
  4016   001E92  0E01               	movlw	1
  4017   001E94  26D9               	addwf	fsr2l,f,c
  4018   001E96  50DF               	movf	indf2,w,c
  4019   001E98  6E06               	movwf	??_ADC_Init^0,c
  4020   001E9A  50C0               	movf	192,w,c	;volatile
  4021   001E9C  1806               	xorwf	??_ADC_Init^0,w,c
  4022   001E9E  0BF8               	andlw	-8
  4023   001EA0  1806               	xorwf	??_ADC_Init^0,w,c
  4024   001EA2  6EC0               	movwf	192,c	;volatile
  4025                           
  4026                           ;MCAL_Layer/ADC/adc.c: 50:         ADCON0bits.CHS = adc->channel;
  4027   001EA4  5005               	movf	ADC_Init@adc^0,w,c
  4028   001EA6  6ED9               	movwf	fsr2l,c
  4029   001EA8  6ADA               	clrf	fsr2h,c
  4030   001EAA  0E02               	movlw	2
  4031   001EAC  26D9               	addwf	fsr2l,f,c
  4032   001EAE  50DF               	movf	indf2,w,c
  4033   001EB0  6E06               	movwf	??_ADC_Init^0,c
  4034   001EB2  4606               	rlncf	??_ADC_Init^0,f,c
  4035   001EB4  4606               	rlncf	??_ADC_Init^0,f,c
  4036   001EB6  50C2               	movf	194,w,c	;volatile
  4037   001EB8  1806               	xorwf	??_ADC_Init^0,w,c
  4038   001EBA  0BC3               	andlw	-61
  4039   001EBC  1806               	xorwf	??_ADC_Init^0,w,c
  4040   001EBE  6EC2               	movwf	194,c	;volatile
  4041   001EC0                     
  4042                           ;MCAL_Layer/ADC/adc.c: 51:         ADC_Input_Channel_Pin_Config(adc->channel);
  4043   001EC0  5005               	movf	ADC_Init@adc^0,w,c
  4044   001EC2  6ED9               	movwf	fsr2l,c
  4045   001EC4  6ADA               	clrf	fsr2h,c
  4046   001EC6  0E02               	movlw	2
  4047   001EC8  26D9               	addwf	fsr2l,f,c
  4048   001ECA  50DF               	movf	indf2,w,c
  4049   001ECC  EC05  F00C         	call	_ADC_Input_Channel_Pin_Config
  4050   001ED0                     
  4051                           ;MCAL_Layer/ADC/adc.c: 75:         ADC_Select_Result_Format(adc);
  4052   001ED0  C005  F002         	movff	ADC_Init@adc,ADC_Select_Result_Format@adc
  4053   001ED4  EC1B  F011         	call	_ADC_Select_Result_Format	;wreg free
  4054   001ED8                     
  4055                           ;MCAL_Layer/ADC/adc.c: 77:         ADC_Select_Volt_Ref(adc);
  4056   001ED8  C005  F002         	movff	ADC_Init@adc,ADC_Select_Volt_Ref@adc
  4057   001EDC  EC5E  F011         	call	_ADC_Select_Volt_Ref	;wreg free
  4058   001EE0                     
  4059                           ;MCAL_Layer/ADC/adc.c: 79:         (ADCON0bits.ADON = 1);
  4060   001EE0  80C2               	bsf	194,0,c	;volatile
  4061   001EE2                     l734:
  4062   001EE2  0012               	return		;funcret
  4063   001EE4                     __end_of_ADC_Init:
  4064                           	callstack 0
  4065                           
  4066 ;; *************** function _ADC_Select_Volt_Ref *****************
  4067 ;; Defined at:
  4068 ;;		line 321 in file "MCAL_Layer/ADC/adc.c"
  4069 ;; Parameters:    Size  Location     Type
  4070 ;;  adc             1    1[COMRAM] PTR const struct .
  4071 ;;		 -> adc1(5), 
  4072 ;; Auto vars:     Size  Location     Type
  4073 ;;		None
  4074 ;; Return value:  Size  Location     Type
  4075 ;;                  1    wreg      void 
  4076 ;; Registers used:
  4077 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4078 ;; Tracked objects:
  4079 ;;		On entry : 0/0
  4080 ;;		On exit  : 0/0
  4081 ;;		Unchanged: 0/0
  4082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4083 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4086 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4087 ;;Total ram usage:        1 bytes
  4088 ;; Hardware stack levels used: 1
  4089 ;; Hardware stack levels required when called: 2
  4090 ;; This function calls:
  4091 ;;		Nothing
  4092 ;; This function is called by:
  4093 ;;		_ADC_Init
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           	psect	text27
  4098   0022BC                     __ptext27:
  4099                           	callstack 0
  4100   0022BC                     _ADC_Select_Volt_Ref:
  4101                           	callstack 27
  4102   0022BC                     
  4103                           ;MCAL_Layer/ADC/adc.c: 322:     if (0x01U == adc->volt_P_reference) {
  4104   0022BC  5002               	movf	ADC_Select_Volt_Ref@adc^0,w,c
  4105   0022BE  6ED9               	movwf	fsr2l,c
  4106   0022C0  6ADA               	clrf	fsr2h,c
  4107   0022C2  0E04               	movlw	4
  4108   0022C4  26D9               	addwf	fsr2l,f,c
  4109   0022C6  A0DF               	btfss	indf2,0,c
  4110   0022C8  EF68  F011         	goto	u3941
  4111   0022CC  EF6A  F011         	goto	u3940
  4112   0022D0                     u3941:
  4113   0022D0  EF6D  F011         	goto	l810
  4114   0022D4                     u3940:
  4115   0022D4                     
  4116                           ;MCAL_Layer/ADC/adc.c: 323:         (ADCON1bits.VCFG0 = 1);
  4117   0022D4  88C1               	bsf	193,4,c	;volatile
  4118                           
  4119                           ;MCAL_Layer/ADC/adc.c: 324:     } else {
  4120   0022D6  EF6E  F011         	goto	l4492
  4121   0022DA                     l810:
  4122                           
  4123                           ;MCAL_Layer/ADC/adc.c: 325:         (ADCON1bits.VCFG0 = 0);
  4124   0022DA  98C1               	bcf	193,4,c	;volatile
  4125   0022DC                     l4492:
  4126                           
  4127                           ;MCAL_Layer/ADC/adc.c: 327:     if (0x01U == adc->volt_N_reference) {
  4128   0022DC  5002               	movf	ADC_Select_Volt_Ref@adc^0,w,c
  4129   0022DE  6ED9               	movwf	fsr2l,c
  4130   0022E0  6ADA               	clrf	fsr2h,c
  4131   0022E2  0E04               	movlw	4
  4132   0022E4  26D9               	addwf	fsr2l,f,c
  4133   0022E6  A2DF               	btfss	indf2,1,c
  4134   0022E8  EF78  F011         	goto	u3951
  4135   0022EC  EF7A  F011         	goto	u3950
  4136   0022F0                     u3951:
  4137   0022F0  EF7D  F011         	goto	l812
  4138   0022F4                     u3950:
  4139   0022F4                     
  4140                           ;MCAL_Layer/ADC/adc.c: 328:         (ADCON1bits.VCFG1 = 1);
  4141   0022F4  8AC1               	bsf	193,5,c	;volatile
  4142                           
  4143                           ;MCAL_Layer/ADC/adc.c: 329:     } else {
  4144   0022F6  EF7E  F011         	goto	l814
  4145   0022FA                     l812:
  4146                           
  4147                           ;MCAL_Layer/ADC/adc.c: 330:         (ADCON1bits.VCFG1 = 0);
  4148   0022FA  9AC1               	bcf	193,5,c	;volatile
  4149   0022FC                     l814:
  4150   0022FC  0012               	return		;funcret
  4151   0022FE                     __end_of_ADC_Select_Volt_Ref:
  4152                           	callstack 0
  4153                           
  4154 ;; *************** function _ADC_Select_Result_Format *****************
  4155 ;; Defined at:
  4156 ;;		line 308 in file "MCAL_Layer/ADC/adc.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;  adc             1    1[COMRAM] PTR const struct .
  4159 ;;		 -> adc1(5), 
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;		None
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  1    wreg      void 
  4164 ;; Registers used:
  4165 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4171 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4175 ;;Total ram usage:        2 bytes
  4176 ;; Hardware stack levels used: 1
  4177 ;; Hardware stack levels required when called: 2
  4178 ;; This function calls:
  4179 ;;		Nothing
  4180 ;; This function is called by:
  4181 ;;		_ADC_Init
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           	psect	text28
  4186   002236                     __ptext28:
  4187                           	callstack 0
  4188   002236                     _ADC_Select_Result_Format:
  4189                           	callstack 27
  4190   002236                     
  4191                           ;MCAL_Layer/ADC/adc.c: 309:     if (ADC_RESULT_RIGHT == adc->res_format) {
  4192   002236  5002               	movf	ADC_Select_Result_Format@adc^0,w,c
  4193   002238  6ED9               	movwf	fsr2l,c
  4194   00223A  6ADA               	clrf	fsr2h,c
  4195   00223C  0E03               	movlw	3
  4196   00223E  26D9               	addwf	fsr2l,f,c
  4197   002240  50DF               	movf	indf2,w,c
  4198   002242  A4D8               	btfss	status,2,c
  4199   002244  EF26  F011         	goto	u3921
  4200   002248  EF28  F011         	goto	u3920
  4201   00224C                     u3921:
  4202   00224C  EF2B  F011         	goto	l4484
  4203   002250                     u3920:
  4204   002250                     
  4205                           ;MCAL_Layer/ADC/adc.c: 310:         (ADCON2bits.ADFM = 1);
  4206   002250  8EC0               	bsf	192,7,c	;volatile
  4207                           
  4208                           ;MCAL_Layer/ADC/adc.c: 311:     } else if (ADC_RESULT_LEFT == adc->res_format) {
  4209   002252  EF3C  F011         	goto	l807
  4210   002256                     l4484:
  4211   002256  5002               	movf	ADC_Select_Result_Format@adc^0,w,c
  4212   002258  6ED9               	movwf	fsr2l,c
  4213   00225A  6ADA               	clrf	fsr2h,c
  4214   00225C  0E03               	movlw	3
  4215   00225E  26D9               	addwf	fsr2l,f,c
  4216   002260  04DE               	decf	postinc2,w,c
  4217   002262  A4D8               	btfss	status,2,c
  4218   002264  EF36  F011         	goto	u3931
  4219   002268  EF38  F011         	goto	u3930
  4220   00226C                     u3931:
  4221   00226C  EF3B  F011         	goto	l805
  4222   002270                     u3930:
  4223   002270                     
  4224                           ;MCAL_Layer/ADC/adc.c: 312:         (ADCON2bits.ADFM = 0);
  4225   002270  9EC0               	bcf	192,7,c	;volatile
  4226                           
  4227                           ;MCAL_Layer/ADC/adc.c: 313:     } else (ADCON2bits.ADFM = 1);
  4228   002272  EF3C  F011         	goto	l807
  4229   002276                     l805:
  4230   002276  8EC0               	bsf	192,7,c	;volatile
  4231   002278                     l807:
  4232   002278  0012               	return		;funcret
  4233   00227A                     __end_of_ADC_Select_Result_Format:
  4234                           	callstack 0
  4235                           
  4236 ;; *************** function _ADC_Get_Conversion_Blocking *****************
  4237 ;; Defined at:
  4238 ;;		line 211 in file "MCAL_Layer/ADC/adc.c"
  4239 ;; Parameters:    Size  Location     Type
  4240 ;;  adc             1    8[COMRAM] PTR const struct .
  4241 ;;		 -> adc1(5), 
  4242 ;;  channel         1    9[COMRAM] enum E3061
  4243 ;;  adc_res         1   10[COMRAM] PTR unsigned short 
  4244 ;;		 -> main@adc_res(2), 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;  ret             1   12[COMRAM] unsigned char 
  4247 ;;  l_conv_statu    1   11[COMRAM] unsigned char 
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      unsigned char 
  4250 ;; Registers used:
  4251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4257 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4258 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4260 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;Total ram usage:        5 bytes
  4262 ;; Hardware stack levels used: 1
  4263 ;; Hardware stack levels required when called: 4
  4264 ;; This function calls:
  4265 ;;		_ADC_Get_Result
  4266 ;;		_ADC_Select_Channel
  4267 ;;		_ADC_Start
  4268 ;; This function is called by:
  4269 ;;		_main
  4270 ;; This function uses a non-reentrant model
  4271 ;;
  4272                           
  4273                           	psect	text29
  4274   002196                     __ptext29:
  4275                           	callstack 0
  4276   002196                     _ADC_Get_Conversion_Blocking:
  4277                           	callstack 26
  4278   002196                     
  4279                           ;MCAL_Layer/ADC/adc.c: 214:     uint8 l_conv_status = 0;
  4280   002196  0E00               	movlw	0
  4281   002198  6E0C               	movwf	ADC_Get_Conversion_Blocking@l_conv_status^0,c
  4282                           
  4283                           ;MCAL_Layer/ADC/adc.c: 216:     if (((void*)0) == adc || ((void*)0) == adc_res) {
  4284   00219A  5009               	movf	ADC_Get_Conversion_Blocking@adc^0,w,c
  4285   00219C  B4D8               	btfsc	status,2,c
  4286   00219E  EFD3  F010         	goto	u4181
  4287   0021A2  EFD5  F010         	goto	u4180
  4288   0021A6                     u4181:
  4289   0021A6  EFDD  F010         	goto	l4664
  4290   0021AA                     u4180:
  4291   0021AA  500B               	movf	ADC_Get_Conversion_Blocking@adc_res^0,w,c
  4292   0021AC  A4D8               	btfss	status,2,c
  4293   0021AE  EFDB  F010         	goto	u4191
  4294   0021B2  EFDD  F010         	goto	u4190
  4295   0021B6                     u4191:
  4296   0021B6  EFDF  F010         	goto	l4666
  4297   0021BA                     u4190:
  4298   0021BA                     l4664:
  4299                           
  4300                           ;MCAL_Layer/ADC/adc.c: 218:     } else {
  4301   0021BA  EFF8  F010         	goto	l776
  4302   0021BE                     l4666:
  4303                           
  4304                           ;MCAL_Layer/ADC/adc.c: 220:         ret = ADC_Select_Channel(adc, channel);
  4305   0021BE  C009  F005         	movff	ADC_Get_Conversion_Blocking@adc,ADC_Select_Channel@adc
  4306   0021C2  C00A  F006         	movff	ADC_Get_Conversion_Blocking@channel,ADC_Select_Channel@channel
  4307   0021C6  ECDB  F011         	call	_ADC_Select_Channel	;wreg free
  4308   0021CA  6E0D               	movwf	ADC_Get_Conversion_Blocking@ret^0,c
  4309                           
  4310                           ;MCAL_Layer/ADC/adc.c: 222:         ret = ADC_Start(adc);
  4311   0021CC  C009  F002         	movff	ADC_Get_Conversion_Blocking@adc,ADC_Start@adc
  4312   0021D0  EC43  F012         	call	_ADC_Start	;wreg free
  4313   0021D4  6E0D               	movwf	ADC_Get_Conversion_Blocking@ret^0,c
  4314   0021D6                     l773:
  4315   0021D6  B2C2               	btfsc	194,1,c	;volatile
  4316   0021D8  EFF0  F010         	goto	u4201
  4317   0021DC  EFF2  F010         	goto	u4200
  4318   0021E0                     u4201:
  4319   0021E0  EFEB  F010         	goto	l773
  4320   0021E4                     u4200:
  4321   0021E4  C009  F002         	movff	ADC_Get_Conversion_Blocking@adc,ADC_Get_Result@adc
  4322   0021E8  C00B  F003         	movff	ADC_Get_Conversion_Blocking@adc_res,ADC_Get_Result@adc_res
  4323   0021EC  EC3E  F00D         	call	_ADC_Get_Result	;wreg free
  4324   0021F0                     l776:
  4325   0021F0  0012               	return		;funcret
  4326   0021F2                     __end_of_ADC_Get_Conversion_Blocking:
  4327                           	callstack 0
  4328                           
  4329 ;; *************** function _ADC_Start *****************
  4330 ;; Defined at:
  4331 ;;		line 141 in file "MCAL_Layer/ADC/adc.c"
  4332 ;; Parameters:    Size  Location     Type
  4333 ;;  adc             1    1[COMRAM] PTR const struct .
  4334 ;;		 -> adc1(5), 
  4335 ;; Auto vars:     Size  Location     Type
  4336 ;;  ret             1    2[COMRAM] unsigned char 
  4337 ;; Return value:  Size  Location     Type
  4338 ;;                  1    wreg      unsigned char 
  4339 ;; Registers used:
  4340 ;;		wreg, status,2
  4341 ;; Tracked objects:
  4342 ;;		On entry : 0/0
  4343 ;;		On exit  : 0/0
  4344 ;;		Unchanged: 0/0
  4345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4346 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4349 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4350 ;;Total ram usage:        2 bytes
  4351 ;; Hardware stack levels used: 1
  4352 ;; Hardware stack levels required when called: 2
  4353 ;; This function calls:
  4354 ;;		Nothing
  4355 ;; This function is called by:
  4356 ;;		_ADC_Get_Conversion_Blocking
  4357 ;;		_ADC_Start_Conversion_Interrupt
  4358 ;; This function uses a non-reentrant model
  4359 ;;
  4360                           
  4361                           	psect	text30
  4362   002486                     __ptext30:
  4363                           	callstack 0
  4364   002486                     _ADC_Start:
  4365                           	callstack 27
  4366   002486                     
  4367                           ;MCAL_Layer/ADC/adc.c: 142:     Std_ReturnType ret = 0x01;
  4368   002486  0E01               	movlw	1
  4369   002488  6E03               	movwf	ADC_Start@ret^0,c
  4370                           
  4371                           ;MCAL_Layer/ADC/adc.c: 144:     if (((void*)0) == adc) {
  4372   00248A  5002               	movf	ADC_Start@adc^0,w,c
  4373   00248C  A4D8               	btfss	status,2,c
  4374   00248E  EF4B  F012         	goto	u3971
  4375   002492  EF4D  F012         	goto	u3970
  4376   002496                     u3971:
  4377   002496  EF51  F012         	goto	l747
  4378   00249A                     u3970:
  4379   00249A                     
  4380                           ;MCAL_Layer/ADC/adc.c: 145:         ret = 0x00;
  4381   00249A  0E00               	movlw	0
  4382   00249C  6E03               	movwf	ADC_Start@ret^0,c
  4383                           
  4384                           ;MCAL_Layer/ADC/adc.c: 146:     } else {
  4385   00249E  EF52  F012         	goto	l4512
  4386   0024A2                     l747:
  4387                           
  4388                           ;MCAL_Layer/ADC/adc.c: 147:         (ADCON0bits.GODONE = 1);
  4389   0024A2  82C2               	bsf	194,1,c	;volatile
  4390   0024A4                     l4512:
  4391                           
  4392                           ;MCAL_Layer/ADC/adc.c: 149:     return ret;
  4393   0024A4  5003               	movf	ADC_Start@ret^0,w,c
  4394   0024A6  0012               	return		;funcret
  4395   0024A8                     __end_of_ADC_Start:
  4396                           	callstack 0
  4397                           
  4398 ;; *************** function _ADC_Select_Channel *****************
  4399 ;; Defined at:
  4400 ;;		line 120 in file "MCAL_Layer/ADC/adc.c"
  4401 ;; Parameters:    Size  Location     Type
  4402 ;;  adc             1    4[COMRAM] PTR const struct .
  4403 ;;		 -> adc1(5), 
  4404 ;;  channel         1    5[COMRAM] enum E3061
  4405 ;; Auto vars:     Size  Location     Type
  4406 ;;  ret             1    7[COMRAM] unsigned char 
  4407 ;; Return value:  Size  Location     Type
  4408 ;;                  1    wreg      unsigned char 
  4409 ;; Registers used:
  4410 ;;		wreg, status,2, status,0, cstack
  4411 ;; Tracked objects:
  4412 ;;		On entry : 0/0
  4413 ;;		On exit  : 0/0
  4414 ;;		Unchanged: 0/0
  4415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4416 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4418 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4419 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4420 ;;Total ram usage:        4 bytes
  4421 ;; Hardware stack levels used: 1
  4422 ;; Hardware stack levels required when called: 3
  4423 ;; This function calls:
  4424 ;;		_ADC_Input_Channel_Pin_Config
  4425 ;; This function is called by:
  4426 ;;		_ADC_Get_Conversion_Blocking
  4427 ;;		_ADC_Start_Conversion_Interrupt
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           	psect	text31
  4432   0023B6                     __ptext31:
  4433                           	callstack 0
  4434   0023B6                     _ADC_Select_Channel:
  4435                           	callstack 26
  4436   0023B6                     
  4437                           ;MCAL_Layer/ADC/adc.c: 121:     Std_ReturnType ret = 0x01;
  4438   0023B6  0E01               	movlw	1
  4439   0023B8  6E08               	movwf	ADC_Select_Channel@ret^0,c
  4440                           
  4441                           ;MCAL_Layer/ADC/adc.c: 123:     if (((void*)0) == adc) {
  4442   0023BA  5005               	movf	ADC_Select_Channel@adc^0,w,c
  4443   0023BC  A4D8               	btfss	status,2,c
  4444   0023BE  EFE3  F011         	goto	u3961
  4445   0023C2  EFE5  F011         	goto	u3960
  4446   0023C6                     u3961:
  4447   0023C6  EFE9  F011         	goto	l4500
  4448   0023CA                     u3960:
  4449   0023CA                     
  4450                           ;MCAL_Layer/ADC/adc.c: 124:         ret = 0x00;
  4451   0023CA  0E00               	movlw	0
  4452   0023CC  6E08               	movwf	ADC_Select_Channel@ret^0,c
  4453                           
  4454                           ;MCAL_Layer/ADC/adc.c: 125:     } else {
  4455   0023CE  EFF5  F011         	goto	l4504
  4456   0023D2                     l4500:
  4457                           
  4458                           ;MCAL_Layer/ADC/adc.c: 127:         ADCON0bits.CHS = channel;
  4459   0023D2  C006  F007         	movff	ADC_Select_Channel@channel,??_ADC_Select_Channel
  4460   0023D6  4607               	rlncf	??_ADC_Select_Channel^0,f,c
  4461   0023D8  4607               	rlncf	??_ADC_Select_Channel^0,f,c
  4462   0023DA  50C2               	movf	194,w,c	;volatile
  4463   0023DC  1807               	xorwf	??_ADC_Select_Channel^0,w,c
  4464   0023DE  0BC3               	andlw	-61
  4465   0023E0  1807               	xorwf	??_ADC_Select_Channel^0,w,c
  4466   0023E2  6EC2               	movwf	194,c	;volatile
  4467   0023E4                     
  4468                           ;MCAL_Layer/ADC/adc.c: 128:         ADC_Input_Channel_Pin_Config(channel);
  4469   0023E4  5006               	movf	ADC_Select_Channel@channel^0,w,c
  4470   0023E6  EC05  F00C         	call	_ADC_Input_Channel_Pin_Config
  4471   0023EA                     l4504:
  4472                           
  4473                           ;MCAL_Layer/ADC/adc.c: 130:     return ret;
  4474   0023EA  5008               	movf	ADC_Select_Channel@ret^0,w,c
  4475   0023EC  0012               	return		;funcret
  4476   0023EE                     __end_of_ADC_Select_Channel:
  4477                           	callstack 0
  4478                           
  4479 ;; *************** function _ADC_Input_Channel_Pin_Config *****************
  4480 ;; Defined at:
  4481 ;;		line 268 in file "MCAL_Layer/ADC/adc.c"
  4482 ;; Parameters:    Size  Location     Type
  4483 ;;  channel         1    wreg     enum E3061
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;  channel         1    3[COMRAM] enum E3061
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      void 
  4488 ;; Registers used:
  4489 ;;		wreg, status,2, status,0
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4496 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4497 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4498 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4499 ;;Total ram usage:        3 bytes
  4500 ;; Hardware stack levels used: 1
  4501 ;; Hardware stack levels required when called: 2
  4502 ;; This function calls:
  4503 ;;		Nothing
  4504 ;; This function is called by:
  4505 ;;		_ADC_Init
  4506 ;;		_ADC_Select_Channel
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           	psect	text32
  4511   00180A                     __ptext32:
  4512                           	callstack 0
  4513   00180A                     _ADC_Input_Channel_Pin_Config:
  4514                           	callstack 27
  4515                           
  4516                           ;incstack = 0
  4517                           ;ADC_Input_Channel_Pin_Config@channel stored from wreg
  4518   00180A  6E04               	movwf	ADC_Input_Channel_Pin_Config@channel^0,c
  4519   00180C                     
  4520                           ;MCAL_Layer/ADC/adc.c: 270:     switch (channel) {
  4521   00180C  EF2F  F00C         	goto	l4390
  4522   001810                     l4362:
  4523   001810  8092               	bsf	146,0,c	;volatile
  4524                           
  4525                           ;MCAL_Layer/ADC/adc.c: 272:             break;
  4526   001812  EF70  F00C         	goto	l800
  4527   001816                     l4364:
  4528   001816  8292               	bsf	146,1,c	;volatile
  4529                           
  4530                           ;MCAL_Layer/ADC/adc.c: 274:             break;
  4531   001818  EF70  F00C         	goto	l800
  4532   00181C                     l4366:
  4533   00181C  8492               	bsf	146,2,c	;volatile
  4534                           
  4535                           ;MCAL_Layer/ADC/adc.c: 276:             break;
  4536   00181E  EF70  F00C         	goto	l800
  4537   001822                     l4368:
  4538   001822  8692               	bsf	146,3,c	;volatile
  4539                           
  4540                           ;MCAL_Layer/ADC/adc.c: 278:             break;
  4541   001824  EF70  F00C         	goto	l800
  4542   001828                     l4370:
  4543   001828  8A92               	bsf	146,5,c	;volatile
  4544                           
  4545                           ;MCAL_Layer/ADC/adc.c: 280:             break;
  4546   00182A  EF70  F00C         	goto	l800
  4547   00182E                     l4372:
  4548   00182E  8096               	bsf	150,0,c	;volatile
  4549                           
  4550                           ;MCAL_Layer/ADC/adc.c: 283:             break;
  4551   001830  EF70  F00C         	goto	l800
  4552   001834                     l4374:
  4553   001834  8296               	bsf	150,1,c	;volatile
  4554                           
  4555                           ;MCAL_Layer/ADC/adc.c: 285:             break;
  4556   001836  EF70  F00C         	goto	l800
  4557   00183A                     l4376:
  4558   00183A  8496               	bsf	150,2,c	;volatile
  4559                           
  4560                           ;MCAL_Layer/ADC/adc.c: 287:             break;
  4561   00183C  EF70  F00C         	goto	l800
  4562   001840                     l4378:
  4563   001840  8493               	bsf	147,2,c	;volatile
  4564                           
  4565                           ;MCAL_Layer/ADC/adc.c: 290:             break;
  4566   001842  EF70  F00C         	goto	l800
  4567   001846                     l4380:
  4568   001846  8693               	bsf	147,3,c	;volatile
  4569                           
  4570                           ;MCAL_Layer/ADC/adc.c: 292:             break;
  4571   001848  EF70  F00C         	goto	l800
  4572   00184C                     l4382:
  4573   00184C  8293               	bsf	147,1,c	;volatile
  4574                           
  4575                           ;MCAL_Layer/ADC/adc.c: 294:             break;
  4576   00184E  EF70  F00C         	goto	l800
  4577   001852                     l4384:
  4578   001852  8893               	bsf	147,4,c	;volatile
  4579                           
  4580                           ;MCAL_Layer/ADC/adc.c: 296:             break;
  4581   001854  EF70  F00C         	goto	l800
  4582   001858                     l4386:
  4583   001858  8093               	bsf	147,0,c	;volatile
  4584                           
  4585                           ;MCAL_Layer/ADC/adc.c: 298:             break;
  4586   00185A  EF70  F00C         	goto	l800
  4587   00185E                     l4390:
  4588   00185E  5004               	movf	ADC_Input_Channel_Pin_Config@channel^0,w,c
  4589   001860  6E02               	movwf	??_ADC_Input_Channel_Pin_Config^0,c
  4590   001862  6A03               	clrf	(??_ADC_Input_Channel_Pin_Config+1)^0,c
  4591                           
  4592                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4593                           ; Switch size 1, requested type "simple"
  4594                           ; Number of cases is 1, Range of values is 0 to 0
  4595                           ; switch strategies available:
  4596                           ; Name         Instructions Cycles
  4597                           ; simple_byte            4     3 (average)
  4598                           ;	Chosen strategy is simple_byte
  4599   001864  5003               	movf	(??_ADC_Input_Channel_Pin_Config+1)^0,w,c
  4600   001866  0A00               	xorlw	0	; case 0
  4601   001868  B4D8               	btfsc	status,2,c
  4602   00186A  EF39  F00C         	goto	l5104
  4603   00186E  EF70  F00C         	goto	l800
  4604   001872                     l5104:
  4605                           
  4606                           ; Switch size 1, requested type "simple"
  4607                           ; Number of cases is 13, Range of values is 0 to 12
  4608                           ; switch strategies available:
  4609                           ; Name         Instructions Cycles
  4610                           ; simple_byte           40    21 (average)
  4611                           ;	Chosen strategy is simple_byte
  4612   001872  5002               	movf	??_ADC_Input_Channel_Pin_Config^0,w,c
  4613   001874  0A00               	xorlw	0	; case 0
  4614   001876  B4D8               	btfsc	status,2,c
  4615   001878  EF08  F00C         	goto	l4362
  4616   00187C  0A01               	xorlw	1	; case 1
  4617   00187E  B4D8               	btfsc	status,2,c
  4618   001880  EF0B  F00C         	goto	l4364
  4619   001884  0A03               	xorlw	3	; case 2
  4620   001886  B4D8               	btfsc	status,2,c
  4621   001888  EF0E  F00C         	goto	l4366
  4622   00188C  0A01               	xorlw	1	; case 3
  4623   00188E  B4D8               	btfsc	status,2,c
  4624   001890  EF11  F00C         	goto	l4368
  4625   001894  0A07               	xorlw	7	; case 4
  4626   001896  B4D8               	btfsc	status,2,c
  4627   001898  EF14  F00C         	goto	l4370
  4628   00189C  0A01               	xorlw	1	; case 5
  4629   00189E  B4D8               	btfsc	status,2,c
  4630   0018A0  EF17  F00C         	goto	l4372
  4631   0018A4  0A03               	xorlw	3	; case 6
  4632   0018A6  B4D8               	btfsc	status,2,c
  4633   0018A8  EF1A  F00C         	goto	l4374
  4634   0018AC  0A01               	xorlw	1	; case 7
  4635   0018AE  B4D8               	btfsc	status,2,c
  4636   0018B0  EF1D  F00C         	goto	l4376
  4637   0018B4  0A0F               	xorlw	15	; case 8
  4638   0018B6  B4D8               	btfsc	status,2,c
  4639   0018B8  EF20  F00C         	goto	l4378
  4640   0018BC  0A01               	xorlw	1	; case 9
  4641   0018BE  B4D8               	btfsc	status,2,c
  4642   0018C0  EF23  F00C         	goto	l4380
  4643   0018C4  0A03               	xorlw	3	; case 10
  4644   0018C6  B4D8               	btfsc	status,2,c
  4645   0018C8  EF26  F00C         	goto	l4382
  4646   0018CC  0A01               	xorlw	1	; case 11
  4647   0018CE  B4D8               	btfsc	status,2,c
  4648   0018D0  EF29  F00C         	goto	l4384
  4649   0018D4  0A07               	xorlw	7	; case 12
  4650   0018D6  B4D8               	btfsc	status,2,c
  4651   0018D8  EF2C  F00C         	goto	l4386
  4652   0018DC  EF70  F00C         	goto	l800
  4653   0018E0                     l800:
  4654   0018E0  0012               	return		;funcret
  4655   0018E2                     __end_of_ADC_Input_Channel_Pin_Config:
  4656                           	callstack 0
  4657                           
  4658 ;; *************** function _ADC_Get_Result *****************
  4659 ;; Defined at:
  4660 ;;		line 183 in file "MCAL_Layer/ADC/adc.c"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;  adc             1    1[COMRAM] PTR const struct .
  4663 ;;		 -> adc1(5), 
  4664 ;;  adc_res         1    2[COMRAM] PTR unsigned short 
  4665 ;;		 -> main@adc_res(2), 
  4666 ;; Auto vars:     Size  Location     Type
  4667 ;;  ret             1    6[COMRAM] unsigned char 
  4668 ;; Return value:  Size  Location     Type
  4669 ;;                  1    wreg      unsigned char 
  4670 ;; Registers used:
  4671 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4672 ;; Tracked objects:
  4673 ;;		On entry : 0/0
  4674 ;;		On exit  : 0/0
  4675 ;;		Unchanged: 0/0
  4676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4677 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4678 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4679 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4680 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4681 ;;Total ram usage:        6 bytes
  4682 ;; Hardware stack levels used: 1
  4683 ;; Hardware stack levels required when called: 2
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_ADC_Get_Conversion_Blocking
  4688 ;; This function uses a non-reentrant model
  4689 ;;
  4690                           
  4691                           	psect	text33
  4692   001A7C                     __ptext33:
  4693                           	callstack 0
  4694   001A7C                     _ADC_Get_Result:
  4695                           	callstack 27
  4696   001A7C                     
  4697                           ;MCAL_Layer/ADC/adc.c: 184:     Std_ReturnType ret = 0x01;
  4698   001A7C  0E01               	movlw	1
  4699   001A7E  6E07               	movwf	ADC_Get_Result@ret^0,c
  4700                           
  4701                           ;MCAL_Layer/ADC/adc.c: 186:     if (((void*)0) == adc || ((void*)0) == adc_res) {
  4702   001A80  5002               	movf	ADC_Get_Result@adc^0,w,c
  4703   001A82  B4D8               	btfsc	status,2,c
  4704   001A84  EF46  F00D         	goto	u3981
  4705   001A88  EF48  F00D         	goto	u3980
  4706   001A8C                     u3981:
  4707   001A8C  EF50  F00D         	goto	l4520
  4708   001A90                     u3980:
  4709   001A90  5003               	movf	ADC_Get_Result@adc_res^0,w,c
  4710   001A92  A4D8               	btfss	status,2,c
  4711   001A94  EF4E  F00D         	goto	u3991
  4712   001A98  EF50  F00D         	goto	u3990
  4713   001A9C                     u3991:
  4714   001A9C  EF54  F00D         	goto	l4522
  4715   001AA0                     u3990:
  4716   001AA0                     l4520:
  4717                           
  4718                           ;MCAL_Layer/ADC/adc.c: 187:         ret = 0x00;
  4719   001AA0  0E00               	movlw	0
  4720   001AA2  6E07               	movwf	ADC_Get_Result@ret^0,c
  4721                           
  4722                           ;MCAL_Layer/ADC/adc.c: 188:     } else {
  4723   001AA4  EF9A  F00D         	goto	l4530
  4724   001AA8                     l4522:
  4725                           
  4726                           ;MCAL_Layer/ADC/adc.c: 189:         if (ADC_RESULT_RIGHT == adc->res_format) {
  4727   001AA8  5002               	movf	ADC_Get_Result@adc^0,w,c
  4728   001AAA  6ED9               	movwf	fsr2l,c
  4729   001AAC  6ADA               	clrf	fsr2h,c
  4730   001AAE  0E03               	movlw	3
  4731   001AB0  26D9               	addwf	fsr2l,f,c
  4732   001AB2  50DF               	movf	indf2,w,c
  4733   001AB4  A4D8               	btfss	status,2,c
  4734   001AB6  EF5F  F00D         	goto	u4001
  4735   001ABA  EF61  F00D         	goto	u4000
  4736   001ABE                     u4001:
  4737   001ABE  EF74  F00D         	goto	l4526
  4738   001AC2                     u4000:
  4739   001AC2                     
  4740                           ;MCAL_Layer/ADC/adc.c: 190:             *adc_res = (uint16) ((ADRESH << 8) + ADRESL);
  4741   001AC2  50C3               	movf	195,w,c	;volatile
  4742   001AC4  CFC4 F004          	movff	4036,??_ADC_Get_Result	;volatile
  4743   001AC8  6A05               	clrf	(??_ADC_Get_Result+1)^0,c
  4744   001ACA  C004  F005         	movff	??_ADC_Get_Result,??_ADC_Get_Result+1
  4745   001ACE  6A04               	clrf	??_ADC_Get_Result^0,c
  4746   001AD0  2604               	addwf	??_ADC_Get_Result^0,f,c
  4747   001AD2  0E00               	movlw	0
  4748   001AD4  2205               	addwfc	(??_ADC_Get_Result+1)^0,f,c
  4749   001AD6  5003               	movf	ADC_Get_Result@adc_res^0,w,c
  4750   001AD8  6ED9               	movwf	fsr2l,c
  4751   001ADA  6ADA               	clrf	fsr2h,c
  4752   001ADC  C004  FFDE         	movff	??_ADC_Get_Result,postinc2
  4753   001AE0  C005  FFDD         	movff	??_ADC_Get_Result+1,postdec2
  4754                           
  4755                           ;MCAL_Layer/ADC/adc.c: 191:         } else if (ADC_RESULT_LEFT == adc->res_format) {
  4756   001AE4  EF9A  F00D         	goto	l4530
  4757   001AE8                     l4526:
  4758   001AE8  5002               	movf	ADC_Get_Result@adc^0,w,c
  4759   001AEA  6ED9               	movwf	fsr2l,c
  4760   001AEC  6ADA               	clrf	fsr2h,c
  4761   001AEE  0E03               	movlw	3
  4762   001AF0  26D9               	addwf	fsr2l,f,c
  4763   001AF2  04DE               	decf	postinc2,w,c
  4764   001AF4  A4D8               	btfss	status,2,c
  4765   001AF6  EF7F  F00D         	goto	u4011
  4766   001AFA  EF81  F00D         	goto	u4010
  4767   001AFE                     u4011:
  4768   001AFE  EF9A  F00D         	goto	l4530
  4769   001B02                     u4010:
  4770   001B02                     
  4771                           ;MCAL_Layer/ADC/adc.c: 192:             *adc_res = (uint16) (((ADRESH << 8) + ADRESL) >>
      +                           6);
  4772   001B02  50C3               	movf	195,w,c	;volatile
  4773   001B04  CFC4 F004          	movff	4036,??_ADC_Get_Result	;volatile
  4774   001B08  6A05               	clrf	(??_ADC_Get_Result+1)^0,c
  4775   001B0A  C004  F005         	movff	??_ADC_Get_Result,??_ADC_Get_Result+1
  4776   001B0E  6A04               	clrf	??_ADC_Get_Result^0,c
  4777   001B10  2604               	addwf	??_ADC_Get_Result^0,f,c
  4778   001B12  0E00               	movlw	0
  4779   001B14  2205               	addwfc	(??_ADC_Get_Result+1)^0,f,c
  4780   001B16  0E06               	movlw	6
  4781   001B18  6E06               	movwf	(??_ADC_Get_Result+2)^0,c
  4782   001B1A                     u4025:
  4783   001B1A  3405               	rlcf	(??_ADC_Get_Result+1)^0,w,c
  4784   001B1C  3205               	rrcf	(??_ADC_Get_Result+1)^0,f,c
  4785   001B1E  3204               	rrcf	??_ADC_Get_Result^0,f,c
  4786   001B20  2E06               	decfsz	(??_ADC_Get_Result+2)^0,f,c
  4787   001B22  EF8D  F00D         	goto	u4025
  4788   001B26  5003               	movf	ADC_Get_Result@adc_res^0,w,c
  4789   001B28  6ED9               	movwf	fsr2l,c
  4790   001B2A  6ADA               	clrf	fsr2h,c
  4791   001B2C  C004  FFDE         	movff	??_ADC_Get_Result,postinc2
  4792   001B30  C005  FFDD         	movff	??_ADC_Get_Result+1,postdec2
  4793   001B34                     l4530:
  4794                           
  4795                           ;MCAL_Layer/ADC/adc.c: 195:     return ret;
  4796   001B34  5007               	movf	ADC_Get_Result@ret^0,w,c
  4797   001B36  0012               	return		;funcret
  4798   001B38                     __end_of_ADC_Get_Result:
  4799                           	callstack 0
  4800                           
  4801 ;; *************** function _InterruptManager *****************
  4802 ;; Defined at:
  4803 ;;		line 46 in file "MCAL_Layer/Interrupt/interrupt_manager.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;		None
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;		None
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  1    wreg      void 
  4810 ;; Registers used:
  4811 ;;		wreg, status,2, status,0, cstack
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4820 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4821 ;;Total ram usage:        0 bytes
  4822 ;; Hardware stack levels used: 1
  4823 ;; Hardware stack levels required when called: 1
  4824 ;; This function calls:
  4825 ;;		_INT0_ISR
  4826 ;;		_INT1_ISR
  4827 ;;		_INT2_ISR
  4828 ;;		_RB4_ISR
  4829 ;;		_RB5_ISR
  4830 ;;		_RB6_ISR
  4831 ;;		_RB7_ISR
  4832 ;; This function is called by:
  4833 ;;		Interrupt level 2
  4834 ;; This function uses a non-reentrant model
  4835 ;;
  4836                           
  4837                           	psect	intcode
  4838   000008                     __pintcode:
  4839                           	callstack 0
  4840   000008                     _InterruptManager:
  4841                           	callstack 23
  4842                           
  4843                           ;incstack = 0
  4844   000008  8276               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  4845   00000A  ED0E  F008         	call	int_func,f	;refresh shadow registers
  4846                           
  4847                           	psect	intcode_body
  4848   00101C                     __pintcode_body:
  4849                           	callstack 23
  4850   00101C                     int_func:
  4851                           	callstack 23
  4852   00101C  0006               	pop		; remove dummy address from shadow register refresh
  4853   00101E                     
  4854                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 49:     if(1 == INTCONbits.INT0IE && 1 == INT
      +                          CONbits.INT0IF)
  4855   00101E  A8F2               	btfss	242,4,c	;volatile
  4856   001020  EF14  F008         	goto	i2u160_41
  4857   001024  EF16  F008         	goto	i2u160_40
  4858   001028                     i2u160_41:
  4859   001028  EF1F  F008         	goto	i2l2882
  4860   00102C                     i2u160_40:
  4861   00102C  A2F2               	btfss	242,1,c	;volatile
  4862   00102E  EF1B  F008         	goto	i2u161_41
  4863   001032  EF1D  F008         	goto	i2u161_40
  4864   001036                     i2u161_41:
  4865   001036  EF1F  F008         	goto	i2l2882
  4866   00103A                     i2u161_40:
  4867   00103A                     
  4868                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 50:     {;MCAL_Layer/Interrupt/interrupt_mana
      +                          ger.c: 51:         INT0_ISR();
  4869   00103A  ECA3  F012         	call	_INT0_ISR	;wreg free
  4870   00103E                     i2l2882:
  4871                           
  4872                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 53:     if(1 == INTCON3bits.INT1IE && 1 == IN
      +                          TCON3bits.INT1IF)
  4873   00103E  A6F0               	btfss	240,3,c	;volatile
  4874   001040  EF24  F008         	goto	i2u162_41
  4875   001044  EF26  F008         	goto	i2u162_40
  4876   001048                     i2u162_41:
  4877   001048  EF2F  F008         	goto	i2l2888
  4878   00104C                     i2u162_40:
  4879   00104C  A0F0               	btfss	240,0,c	;volatile
  4880   00104E  EF2B  F008         	goto	i2u163_41
  4881   001052  EF2D  F008         	goto	i2u163_40
  4882   001056                     i2u163_41:
  4883   001056  EF2F  F008         	goto	i2l2888
  4884   00105A                     i2u163_40:
  4885   00105A                     
  4886                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 54:     {;MCAL_Layer/Interrupt/interrupt_mana
      +                          ger.c: 55:         INT1_ISR();
  4887   00105A  ECA1  F012         	call	_INT1_ISR	;wreg free
  4888   00105E                     i2l2888:
  4889                           
  4890                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 57:     if(1 == INTCON3bits.INT2IE && 1 == IN
      +                          TCON3bits.INT2IF)
  4891   00105E  A8F0               	btfss	240,4,c	;volatile
  4892   001060  EF34  F008         	goto	i2u164_41
  4893   001064  EF36  F008         	goto	i2u164_40
  4894   001068                     i2u164_41:
  4895   001068  EF3F  F008         	goto	i2l2894
  4896   00106C                     i2u164_40:
  4897   00106C  A2F0               	btfss	240,1,c	;volatile
  4898   00106E  EF3B  F008         	goto	i2u165_41
  4899   001072  EF3D  F008         	goto	i2u165_40
  4900   001076                     i2u165_41:
  4901   001076  EF3F  F008         	goto	i2l2894
  4902   00107A                     i2u165_40:
  4903   00107A                     
  4904                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 58:     {;MCAL_Layer/Interrupt/interrupt_mana
      +                          ger.c: 59:         INT2_ISR();
  4905   00107A  EC9F  F012         	call	_INT2_ISR	;wreg free
  4906   00107E                     i2l2894:
  4907                           
  4908                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 65:     if(1 == INTCONbits.RBIE && 1 == INTCO
      +                          Nbits.RBIF
  4909   00107E  A6F2               	btfss	242,3,c	;volatile
  4910   001080  EF44  F008         	goto	i2u166_41
  4911   001084  EF46  F008         	goto	i2u166_40
  4912   001088                     i2u166_41:
  4913   001088  EF61  F008         	goto	i2l2906
  4914   00108C                     i2u166_40:
  4915   00108C  A0F2               	btfss	242,0,c	;volatile
  4916   00108E  EF4B  F008         	goto	i2u167_41
  4917   001092  EF4D  F008         	goto	i2u167_40
  4918   001096                     i2u167_41:
  4919   001096  EF61  F008         	goto	i2l2906
  4920   00109A                     i2u167_40:
  4921   00109A  A881               	btfss	129,4,c	;volatile
  4922   00109C  EF52  F008         	goto	i2u168_41
  4923   0010A0  EF54  F008         	goto	i2u168_40
  4924   0010A4                     i2u168_41:
  4925   0010A4  EF61  F008         	goto	i2l2906
  4926   0010A8                     i2u168_40:
  4927   0010A8  0469               	decf	_RB4_Flag^0,w,c	;volatile
  4928   0010AA  A4D8               	btfss	status,2,c
  4929   0010AC  EF5A  F008         	goto	i2u169_41
  4930   0010B0  EF5C  F008         	goto	i2u169_40
  4931   0010B4                     i2u169_41:
  4932   0010B4  EF61  F008         	goto	i2l2906
  4933   0010B8                     i2u169_40:
  4934   0010B8                     
  4935                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 67:     {;MCAL_Layer/Interrupt/interrupt_mana
      +                          ger.c: 68:         RB4_Flag = 0;
  4936   0010B8  0E00               	movlw	0
  4937   0010BA  6E69               	movwf	_RB4_Flag^0,c	;volatile
  4938   0010BC                     
  4939                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 69:         RB4_ISR(1);
  4940   0010BC  0E01               	movlw	1
  4941   0010BE  EC88  F012         	call	_RB4_ISR
  4942   0010C2                     i2l2906:
  4943                           
  4944                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 71:     if(1 == INTCONbits.RBIE && 1 == INTCO
      +                          Nbits.RBIF
  4945   0010C2  A6F2               	btfss	242,3,c	;volatile
  4946   0010C4  EF66  F008         	goto	i2u170_41
  4947   0010C8  EF68  F008         	goto	i2u170_40
  4948   0010CC                     i2u170_41:
  4949   0010CC  EF83  F008         	goto	i2l2918
  4950   0010D0                     i2u170_40:
  4951   0010D0  A0F2               	btfss	242,0,c	;volatile
  4952   0010D2  EF6D  F008         	goto	i2u171_41
  4953   0010D6  EF6F  F008         	goto	i2u171_40
  4954   0010DA                     i2u171_41:
  4955   0010DA  EF83  F008         	goto	i2l2918
  4956   0010DE                     i2u171_40:
  4957   0010DE  B881               	btfsc	129,4,c	;volatile
  4958   0010E0  EF74  F008         	goto	i2u172_41
  4959   0010E4  EF76  F008         	goto	i2u172_40
  4960   0010E8                     i2u172_41:
  4961   0010E8  EF83  F008         	goto	i2l2918
  4962   0010EC                     i2u172_40:
  4963   0010EC  5069               	movf	_RB4_Flag^0,w,c	;volatile
  4964   0010EE  A4D8               	btfss	status,2,c
  4965   0010F0  EF7C  F008         	goto	i2u173_41
  4966   0010F4  EF7E  F008         	goto	i2u173_40
  4967   0010F8                     i2u173_41:
  4968   0010F8  EF83  F008         	goto	i2l2918
  4969   0010FC                     i2u173_40:
  4970   0010FC                     
  4971                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 73:     {;MCAL_Layer/Interrupt/interrupt_mana
      +                          ger.c: 74:         RB4_Flag = 1;
  4972   0010FC  0E01               	movlw	1
  4973   0010FE  6E69               	movwf	_RB4_Flag^0,c	;volatile
  4974   001100                     
  4975                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 75:         RB4_ISR(0);
  4976   001100  0E00               	movlw	0
  4977   001102  EC88  F012         	call	_RB4_ISR
  4978   001106                     i2l2918:
  4979                           
  4980                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 79:     if(1 == INTCONbits.RBIE && 1 == INTCO
      +                          Nbits.RBIF
  4981   001106  A6F2               	btfss	242,3,c	;volatile
  4982   001108  EF88  F008         	goto	i2u174_41
  4983   00110C  EF8A  F008         	goto	i2u174_40
  4984   001110                     i2u174_41:
  4985   001110  EFA5  F008         	goto	i2l2930
  4986   001114                     i2u174_40:
  4987   001114  A0F2               	btfss	242,0,c	;volatile
  4988   001116  EF8F  F008         	goto	i2u175_41
  4989   00111A  EF91  F008         	goto	i2u175_40
  4990   00111E                     i2u175_41:
  4991   00111E  EFA5  F008         	goto	i2l2930
  4992   001122                     i2u175_40:
  4993   001122  AA81               	btfss	129,5,c	;volatile
  4994   001124  EF96  F008         	goto	i2u176_41
  4995   001128  EF98  F008         	goto	i2u176_40
  4996   00112C                     i2u176_41:
  4997   00112C  EFA5  F008         	goto	i2l2930
  4998   001130                     i2u176_40:
  4999   001130  0468               	decf	_RB5_Flag^0,w,c	;volatile
  5000   001132  A4D8               	btfss	status,2,c
  5001   001134  EF9E  F008         	goto	i2u177_41
  5002   001138  EFA0  F008         	goto	i2u177_40
  5003   00113C                     i2u177_41:
  5004   00113C  EFA5  F008         	goto	i2l2930
  5005   001140                     i2u177_40:
  5006   001140                     
  5007                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 81:     {;MCAL_Layer/Interrupt/interrupt_mana
      +                          ger.c: 82:         RB5_Flag = 0;
  5008   001140  0E00               	movlw	0
  5009   001142  6E68               	movwf	_RB5_Flag^0,c	;volatile
  5010   001144                     
  5011                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 83:         RB5_ISR(1);
  5012   001144  0E01               	movlw	1
  5013   001146  EC7B  F012         	call	_RB5_ISR
  5014   00114A                     i2l2930:
  5015                           
  5016                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 85:     if(1 == INTCONbits.RBIE && 1 == INTCO
      +                          Nbits.RBIF
  5017   00114A  A6F2               	btfss	242,3,c	;volatile
  5018   00114C  EFAA  F008         	goto	i2u178_41
  5019   001150  EFAC  F008         	goto	i2u178_40
  5020   001154                     i2u178_41:
  5021   001154  EFC7  F008         	goto	i2l2942
  5022   001158                     i2u178_40:
  5023   001158  A0F2               	btfss	242,0,c	;volatile
  5024   00115A  EFB1  F008         	goto	i2u179_41
  5025   00115E  EFB3  F008         	goto	i2u179_40
  5026   001162                     i2u179_41:
  5027   001162  EFC7  F008         	goto	i2l2942
  5028   001166                     i2u179_40:
  5029   001166  BA81               	btfsc	129,5,c	;volatile
  5030   001168  EFB8  F008         	goto	i2u180_41
  5031   00116C  EFBA  F008         	goto	i2u180_40
  5032   001170                     i2u180_41:
  5033   001170  EFC7  F008         	goto	i2l2942
  5034   001174                     i2u180_40:
  5035   001174  5068               	movf	_RB5_Flag^0,w,c	;volatile
  5036   001176  A4D8               	btfss	status,2,c
  5037   001178  EFC0  F008         	goto	i2u181_41
  5038   00117C  EFC2  F008         	goto	i2u181_40
  5039   001180                     i2u181_41:
  5040   001180  EFC7  F008         	goto	i2l2942
  5041   001184                     i2u181_40:
  5042   001184                     
  5043                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 87:     {;MCAL_Layer/Interrupt/interrupt_mana
      +                          ger.c: 88:         RB5_Flag = 1;
  5044   001184  0E01               	movlw	1
  5045   001186  6E68               	movwf	_RB5_Flag^0,c	;volatile
  5046   001188                     
  5047                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 89:         RB5_ISR(0);
  5048   001188  0E00               	movlw	0
  5049   00118A  EC7B  F012         	call	_RB5_ISR
  5050   00118E                     i2l2942:
  5051                           
  5052                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 93:     if(1 == INTCONbits.RBIE && 1 == INTCO
      +                          Nbits.RBIF
  5053   00118E  A6F2               	btfss	242,3,c	;volatile
  5054   001190  EFCC  F008         	goto	i2u182_41
  5055   001194  EFCE  F008         	goto	i2u182_40
  5056   001198                     i2u182_41:
  5057   001198  EFE9  F008         	goto	i2l2954
  5058   00119C                     i2u182_40:
  5059   00119C  A0F2               	btfss	242,0,c	;volatile
  5060   00119E  EFD3  F008         	goto	i2u183_41
  5061   0011A2  EFD5  F008         	goto	i2u183_40
  5062   0011A6                     i2u183_41:
  5063   0011A6  EFE9  F008         	goto	i2l2954
  5064   0011AA                     i2u183_40:
  5065   0011AA  AC81               	btfss	129,6,c	;volatile
  5066   0011AC  EFDA  F008         	goto	i2u184_41
  5067   0011B0  EFDC  F008         	goto	i2u184_40
  5068   0011B4                     i2u184_41:
  5069   0011B4  EFE9  F008         	goto	i2l2954
  5070   0011B8                     i2u184_40:
  5071   0011B8  0467               	decf	_RB6_Flag^0,w,c	;volatile
  5072   0011BA  A4D8               	btfss	status,2,c
  5073   0011BC  EFE2  F008         	goto	i2u185_41
  5074   0011C0  EFE4  F008         	goto	i2u185_40
  5075   0011C4                     i2u185_41:
  5076   0011C4  EFE9  F008         	goto	i2l2954
  5077   0011C8                     i2u185_40:
  5078   0011C8                     
  5079                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 95:     {;MCAL_Layer/Interrupt/interrupt_mana
      +                          ger.c: 96:         RB6_Flag = 0;
  5080   0011C8  0E00               	movlw	0
  5081   0011CA  6E67               	movwf	_RB6_Flag^0,c	;volatile
  5082   0011CC                     
  5083                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 97:         RB6_ISR(1);
  5084   0011CC  0E01               	movlw	1
  5085   0011CE  EC6E  F012         	call	_RB6_ISR
  5086   0011D2                     i2l2954:
  5087                           
  5088                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 99:     if(1 == INTCONbits.RBIE && 1 == INTCO
      +                          Nbits.RBIF
  5089   0011D2  A6F2               	btfss	242,3,c	;volatile
  5090   0011D4  EFEE  F008         	goto	i2u186_41
  5091   0011D8  EFF0  F008         	goto	i2u186_40
  5092   0011DC                     i2u186_41:
  5093   0011DC  EF0B  F009         	goto	i2l2966
  5094   0011E0                     i2u186_40:
  5095   0011E0  A0F2               	btfss	242,0,c	;volatile
  5096   0011E2  EFF5  F008         	goto	i2u187_41
  5097   0011E6  EFF7  F008         	goto	i2u187_40
  5098   0011EA                     i2u187_41:
  5099   0011EA  EF0B  F009         	goto	i2l2966
  5100   0011EE                     i2u187_40:
  5101   0011EE  BC81               	btfsc	129,6,c	;volatile
  5102   0011F0  EFFC  F008         	goto	i2u188_41
  5103   0011F4  EFFE  F008         	goto	i2u188_40
  5104   0011F8                     i2u188_41:
  5105   0011F8  EF0B  F009         	goto	i2l2966
  5106   0011FC                     i2u188_40:
  5107   0011FC  5067               	movf	_RB6_Flag^0,w,c	;volatile
  5108   0011FE  A4D8               	btfss	status,2,c
  5109   001200  EF04  F009         	goto	i2u189_41
  5110   001204  EF06  F009         	goto	i2u189_40
  5111   001208                     i2u189_41:
  5112   001208  EF0B  F009         	goto	i2l2966
  5113   00120C                     i2u189_40:
  5114   00120C                     
  5115                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 101:     {;MCAL_Layer/Interrupt/interrupt_man
      +                          ager.c: 102:         RB6_Flag = 1;
  5116   00120C  0E01               	movlw	1
  5117   00120E  6E67               	movwf	_RB6_Flag^0,c	;volatile
  5118   001210                     
  5119                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 103:         RB6_ISR(0);
  5120   001210  0E00               	movlw	0
  5121   001212  EC6E  F012         	call	_RB6_ISR
  5122   001216                     i2l2966:
  5123                           
  5124                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 107:     if(1 == INTCONbits.RBIE && 1 == INTC
      +                          ONbits.RBIF
  5125   001216  A6F2               	btfss	242,3,c	;volatile
  5126   001218  EF10  F009         	goto	i2u190_41
  5127   00121C  EF12  F009         	goto	i2u190_40
  5128   001220                     i2u190_41:
  5129   001220  EF2D  F009         	goto	i2l2978
  5130   001224                     i2u190_40:
  5131   001224  A0F2               	btfss	242,0,c	;volatile
  5132   001226  EF17  F009         	goto	i2u191_41
  5133   00122A  EF19  F009         	goto	i2u191_40
  5134   00122E                     i2u191_41:
  5135   00122E  EF2D  F009         	goto	i2l2978
  5136   001232                     i2u191_40:
  5137   001232  AE81               	btfss	129,7,c	;volatile
  5138   001234  EF1E  F009         	goto	i2u192_41
  5139   001238  EF20  F009         	goto	i2u192_40
  5140   00123C                     i2u192_41:
  5141   00123C  EF2D  F009         	goto	i2l2978
  5142   001240                     i2u192_40:
  5143   001240  0466               	decf	_RB7_Flag^0,w,c	;volatile
  5144   001242  A4D8               	btfss	status,2,c
  5145   001244  EF26  F009         	goto	i2u193_41
  5146   001248  EF28  F009         	goto	i2u193_40
  5147   00124C                     i2u193_41:
  5148   00124C  EF2D  F009         	goto	i2l2978
  5149   001250                     i2u193_40:
  5150   001250                     
  5151                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 109:     {;MCAL_Layer/Interrupt/interrupt_man
      +                          ager.c: 110:         RB7_Flag = 0;
  5152   001250  0E00               	movlw	0
  5153   001252  6E66               	movwf	_RB7_Flag^0,c	;volatile
  5154   001254                     
  5155                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 111:         RB7_ISR(1);
  5156   001254  0E01               	movlw	1
  5157   001256  EC61  F012         	call	_RB7_ISR
  5158   00125A                     i2l2978:
  5159                           
  5160                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 113:     if(1 == INTCONbits.RBIE && 1 == INTC
      +                          ONbits.RBIF
  5161   00125A  A6F2               	btfss	242,3,c	;volatile
  5162   00125C  EF32  F009         	goto	i2u194_41
  5163   001260  EF34  F009         	goto	i2u194_40
  5164   001264                     i2u194_41:
  5165   001264  EF4F  F009         	goto	i2l682
  5166   001268                     i2u194_40:
  5167   001268  A0F2               	btfss	242,0,c	;volatile
  5168   00126A  EF39  F009         	goto	i2u195_41
  5169   00126E  EF3B  F009         	goto	i2u195_40
  5170   001272                     i2u195_41:
  5171   001272  EF4F  F009         	goto	i2l682
  5172   001276                     i2u195_40:
  5173   001276  BE81               	btfsc	129,7,c	;volatile
  5174   001278  EF40  F009         	goto	i2u196_41
  5175   00127C  EF42  F009         	goto	i2u196_40
  5176   001280                     i2u196_41:
  5177   001280  EF4F  F009         	goto	i2l682
  5178   001284                     i2u196_40:
  5179   001284  5066               	movf	_RB7_Flag^0,w,c	;volatile
  5180   001286  A4D8               	btfss	status,2,c
  5181   001288  EF48  F009         	goto	i2u197_41
  5182   00128C  EF4A  F009         	goto	i2u197_40
  5183   001290                     i2u197_41:
  5184   001290  EF4F  F009         	goto	i2l682
  5185   001294                     i2u197_40:
  5186   001294                     
  5187                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 115:     {;MCAL_Layer/Interrupt/interrupt_man
      +                          ager.c: 116:         RB7_Flag = 1;
  5188   001294  0E01               	movlw	1
  5189   001296  6E66               	movwf	_RB7_Flag^0,c	;volatile
  5190   001298                     
  5191                           ;MCAL_Layer/Interrupt/interrupt_manager.c: 117:         RB7_ISR(0);
  5192   001298  0E00               	movlw	0
  5193   00129A  EC61  F012         	call	_RB7_ISR
  5194   00129E                     i2l682:
  5195   00129E  9276               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5196   0012A0  0011               	retfie		f
  5197   0012A2                     __end_of_InterruptManager:
  5198                           	callstack 0
  5199                           
  5200 ;; *************** function _RB7_ISR *****************
  5201 ;; Defined at:
  5202 ;;		line 691 in file "MCAL_Layer/Interrupt/external_interrupt.c"
  5203 ;; Parameters:    Size  Location     Type
  5204 ;;  RB_src          1    wreg     unsigned char 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;  RB_src          1    0[COMRAM] unsigned char 
  5207 ;; Return value:  Size  Location     Type
  5208 ;;                  1    wreg      void 
  5209 ;; Registers used:
  5210 ;;		wreg, status,2
  5211 ;; Tracked objects:
  5212 ;;		On entry : 0/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5219 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5220 ;;Total ram usage:        1 bytes
  5221 ;; Hardware stack levels used: 1
  5222 ;; This function calls:
  5223 ;;		Nothing
  5224 ;; This function is called by:
  5225 ;;		_InterruptManager
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           	psect	text35
  5230   0024C2                     __ptext35:
  5231                           	callstack 0
  5232   0024C2                     _RB7_ISR:
  5233                           	callstack 23
  5234                           
  5235                           ;incstack = 0
  5236                           ;RB7_ISR@RB_src stored from wreg
  5237   0024C2  6E01               	movwf	RB7_ISR@RB_src^0,c
  5238   0024C4                     
  5239                           ;MCAL_Layer/Interrupt/external_interrupt.c: 693:     (INTCONbits.RBIF = 0);
  5240   0024C4  90F2               	bcf	242,0,c	;volatile
  5241   0024C6                     
  5242                           ;MCAL_Layer/Interrupt/external_interrupt.c: 695:     if (0 == RB_src) {
  5243   0024C6  5001               	movf	RB7_ISR@RB_src^0,w,c
  5244   0024C8  A4D8               	btfss	status,2,c
  5245   0024CA  EF69  F012         	goto	i2u89_41
  5246   0024CE  EF6B  F012         	goto	i2u89_40
  5247   0024D2                     i2u89_41:
  5248   0024D2  EF6D  F012         	goto	i2l634
  5249   0024D6                     i2u89_40:
  5250   0024D6  EF6D  F012         	goto	i2l638
  5251   0024DA                     i2l634:
  5252   0024DA                     i2l638:
  5253   0024DA  0012               	return		;funcret
  5254   0024DC                     __end_of_RB7_ISR:
  5255                           	callstack 0
  5256                           
  5257 ;; *************** function _RB6_ISR *****************
  5258 ;; Defined at:
  5259 ;;		line 671 in file "MCAL_Layer/Interrupt/external_interrupt.c"
  5260 ;; Parameters:    Size  Location     Type
  5261 ;;  RB_src          1    wreg     unsigned char 
  5262 ;; Auto vars:     Size  Location     Type
  5263 ;;  RB_src          1    0[COMRAM] unsigned char 
  5264 ;; Return value:  Size  Location     Type
  5265 ;;                  1    wreg      void 
  5266 ;; Registers used:
  5267 ;;		wreg, status,2
  5268 ;; Tracked objects:
  5269 ;;		On entry : 0/0
  5270 ;;		On exit  : 0/0
  5271 ;;		Unchanged: 0/0
  5272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5274 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5276 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5277 ;;Total ram usage:        1 bytes
  5278 ;; Hardware stack levels used: 1
  5279 ;; This function calls:
  5280 ;;		Nothing
  5281 ;; This function is called by:
  5282 ;;		_InterruptManager
  5283 ;; This function uses a non-reentrant model
  5284 ;;
  5285                           
  5286                           	psect	text36
  5287   0024DC                     __ptext36:
  5288                           	callstack 0
  5289   0024DC                     _RB6_ISR:
  5290                           	callstack 23
  5291                           
  5292                           ;incstack = 0
  5293                           ;RB6_ISR@RB_src stored from wreg
  5294   0024DC  6E01               	movwf	RB6_ISR@RB_src^0,c
  5295   0024DE                     
  5296                           ;MCAL_Layer/Interrupt/external_interrupt.c: 673:     (INTCONbits.RBIF = 0);
  5297   0024DE  90F2               	bcf	242,0,c	;volatile
  5298   0024E0                     
  5299                           ;MCAL_Layer/Interrupt/external_interrupt.c: 675:     if (0 == RB_src) {
  5300   0024E0  5001               	movf	RB6_ISR@RB_src^0,w,c
  5301   0024E2  A4D8               	btfss	status,2,c
  5302   0024E4  EF76  F012         	goto	i2u88_41
  5303   0024E8  EF78  F012         	goto	i2u88_40
  5304   0024EC                     i2u88_41:
  5305   0024EC  EF7A  F012         	goto	i2l625
  5306   0024F0                     i2u88_40:
  5307   0024F0  EF7A  F012         	goto	i2l629
  5308   0024F4                     i2l625:
  5309   0024F4                     i2l629:
  5310   0024F4  0012               	return		;funcret
  5311   0024F6                     __end_of_RB6_ISR:
  5312                           	callstack 0
  5313                           
  5314 ;; *************** function _RB5_ISR *****************
  5315 ;; Defined at:
  5316 ;;		line 651 in file "MCAL_Layer/Interrupt/external_interrupt.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;  RB_src          1    wreg     unsigned char 
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;  RB_src          1    0[COMRAM] unsigned char 
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  1    wreg      void 
  5323 ;; Registers used:
  5324 ;;		wreg, status,2
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5331 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5333 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5334 ;;Total ram usage:        1 bytes
  5335 ;; Hardware stack levels used: 1
  5336 ;; This function calls:
  5337 ;;		Nothing
  5338 ;; This function is called by:
  5339 ;;		_InterruptManager
  5340 ;; This function uses a non-reentrant model
  5341 ;;
  5342                           
  5343                           	psect	text37
  5344   0024F6                     __ptext37:
  5345                           	callstack 0
  5346   0024F6                     _RB5_ISR:
  5347                           	callstack 23
  5348                           
  5349                           ;incstack = 0
  5350                           ;RB5_ISR@RB_src stored from wreg
  5351   0024F6  6E01               	movwf	RB5_ISR@RB_src^0,c
  5352   0024F8                     
  5353                           ;MCAL_Layer/Interrupt/external_interrupt.c: 653:     (INTCONbits.RBIF = 0);
  5354   0024F8  90F2               	bcf	242,0,c	;volatile
  5355   0024FA                     
  5356                           ;MCAL_Layer/Interrupt/external_interrupt.c: 655:     if (0 == RB_src) {
  5357   0024FA  5001               	movf	RB5_ISR@RB_src^0,w,c
  5358   0024FC  A4D8               	btfss	status,2,c
  5359   0024FE  EF83  F012         	goto	i2u87_41
  5360   002502  EF85  F012         	goto	i2u87_40
  5361   002506                     i2u87_41:
  5362   002506  EF87  F012         	goto	i2l616
  5363   00250A                     i2u87_40:
  5364   00250A  EF87  F012         	goto	i2l620
  5365   00250E                     i2l616:
  5366   00250E                     i2l620:
  5367   00250E  0012               	return		;funcret
  5368   002510                     __end_of_RB5_ISR:
  5369                           	callstack 0
  5370                           
  5371 ;; *************** function _RB4_ISR *****************
  5372 ;; Defined at:
  5373 ;;		line 631 in file "MCAL_Layer/Interrupt/external_interrupt.c"
  5374 ;; Parameters:    Size  Location     Type
  5375 ;;  RB_src          1    wreg     unsigned char 
  5376 ;; Auto vars:     Size  Location     Type
  5377 ;;  RB_src          1    0[COMRAM] unsigned char 
  5378 ;; Return value:  Size  Location     Type
  5379 ;;                  1    wreg      void 
  5380 ;; Registers used:
  5381 ;;		wreg, status,2
  5382 ;; Tracked objects:
  5383 ;;		On entry : 0/0
  5384 ;;		On exit  : 0/0
  5385 ;;		Unchanged: 0/0
  5386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5388 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5390 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5391 ;;Total ram usage:        1 bytes
  5392 ;; Hardware stack levels used: 1
  5393 ;; This function calls:
  5394 ;;		Nothing
  5395 ;; This function is called by:
  5396 ;;		_InterruptManager
  5397 ;; This function uses a non-reentrant model
  5398 ;;
  5399                           
  5400                           	psect	text38
  5401   002510                     __ptext38:
  5402                           	callstack 0
  5403   002510                     _RB4_ISR:
  5404                           	callstack 23
  5405                           
  5406                           ;incstack = 0
  5407                           ;RB4_ISR@RB_src stored from wreg
  5408   002510  6E01               	movwf	RB4_ISR@RB_src^0,c
  5409   002512                     
  5410                           ;MCAL_Layer/Interrupt/external_interrupt.c: 633:     (INTCONbits.RBIF = 0);
  5411   002512  90F2               	bcf	242,0,c	;volatile
  5412   002514                     
  5413                           ;MCAL_Layer/Interrupt/external_interrupt.c: 635:     if (0 == RB_src) {
  5414   002514  5001               	movf	RB4_ISR@RB_src^0,w,c
  5415   002516  A4D8               	btfss	status,2,c
  5416   002518  EF90  F012         	goto	i2u86_41
  5417   00251C  EF92  F012         	goto	i2u86_40
  5418   002520                     i2u86_41:
  5419   002520  EF94  F012         	goto	i2l607
  5420   002524                     i2u86_40:
  5421   002524  EF94  F012         	goto	i2l611
  5422   002528                     i2l607:
  5423   002528                     i2l611:
  5424   002528  0012               	return		;funcret
  5425   00252A                     __end_of_RB4_ISR:
  5426                           	callstack 0
  5427                           
  5428 ;; *************** function _INT2_ISR *****************
  5429 ;; Defined at:
  5430 ;;		line 616 in file "MCAL_Layer/Interrupt/external_interrupt.c"
  5431 ;; Parameters:    Size  Location     Type
  5432 ;;		None
  5433 ;; Auto vars:     Size  Location     Type
  5434 ;;		None
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  1    wreg      void 
  5437 ;; Registers used:
  5438 ;;		None
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5448 ;;Total ram usage:        0 bytes
  5449 ;; Hardware stack levels used: 1
  5450 ;; This function calls:
  5451 ;;		Nothing
  5452 ;; This function is called by:
  5453 ;;		_InterruptManager
  5454 ;; This function uses a non-reentrant model
  5455 ;;
  5456                           
  5457                           	psect	text39
  5458   00253E                     __ptext39:
  5459                           	callstack 0
  5460   00253E                     _INT2_ISR:
  5461                           	callstack 23
  5462   00253E                     
  5463                           ;MCAL_Layer/Interrupt/external_interrupt.c: 618:     (INTCON3bits.INT2IF = 0);
  5464   00253E  92F0               	bcf	240,1,c	;volatile
  5465   002540  0012               	return		;funcret
  5466   002542                     __end_of_INT2_ISR:
  5467                           	callstack 0
  5468                           
  5469 ;; *************** function _INT1_ISR *****************
  5470 ;; Defined at:
  5471 ;;		line 601 in file "MCAL_Layer/Interrupt/external_interrupt.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;		None
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      void 
  5478 ;; Registers used:
  5479 ;;		None
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5489 ;;Total ram usage:        0 bytes
  5490 ;; Hardware stack levels used: 1
  5491 ;; This function calls:
  5492 ;;		Nothing
  5493 ;; This function is called by:
  5494 ;;		_InterruptManager
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           	psect	text40
  5499   002542                     __ptext40:
  5500                           	callstack 0
  5501   002542                     _INT1_ISR:
  5502                           	callstack 23
  5503   002542                     
  5504                           ;MCAL_Layer/Interrupt/external_interrupt.c: 603:     (INTCON3bits.INT1IF = 0);
  5505   002542  90F0               	bcf	240,0,c	;volatile
  5506   002544  0012               	return		;funcret
  5507   002546                     __end_of_INT1_ISR:
  5508                           	callstack 0
  5509                           
  5510 ;; *************** function _INT0_ISR *****************
  5511 ;; Defined at:
  5512 ;;		line 586 in file "MCAL_Layer/Interrupt/external_interrupt.c"
  5513 ;; Parameters:    Size  Location     Type
  5514 ;;		None
  5515 ;; Auto vars:     Size  Location     Type
  5516 ;;		None
  5517 ;; Return value:  Size  Location     Type
  5518 ;;                  1    wreg      void 
  5519 ;; Registers used:
  5520 ;;		None
  5521 ;; Tracked objects:
  5522 ;;		On entry : 0/0
  5523 ;;		On exit  : 0/0
  5524 ;;		Unchanged: 0/0
  5525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5530 ;;Total ram usage:        0 bytes
  5531 ;; Hardware stack levels used: 1
  5532 ;; This function calls:
  5533 ;;		Nothing
  5534 ;; This function is called by:
  5535 ;;		_InterruptManager
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           	psect	text41
  5540   002546                     __ptext41:
  5541                           	callstack 0
  5542   002546                     _INT0_ISR:
  5543                           	callstack 23
  5544   002546                     
  5545                           ;MCAL_Layer/Interrupt/external_interrupt.c: 588:     (INTCONbits.INT0IF = 0);
  5546   002546  92F2               	bcf	242,1,c	;volatile
  5547   002548  0012               	return		;funcret
  5548   00254A                     __end_of_INT0_ISR:
  5549                           	callstack 0
  5550                           
  5551                           	psect	rparam
  5552   000000                     
  5553                           	psect	temp
  5554   000076                     btemp:
  5555                           	callstack 0
  5556   000076                     	ds	1
  5557   000000                     int$flags	set	btemp
  5558   000000                     wtemp8	set	btemp+1
  5559   000000                     ttemp5	set	btemp+1
  5560   000000                     ttemp6	set	btemp+4
  5561   000000                     ttemp7	set	btemp+8
  5562                           
  5563                           	psect	config
  5564                           
  5565                           ; Padding undefined space
  5566   300000                     	org	3145728
  5567   300000  FF                 	db	255
  5568                           
  5569                           ;Config register CONFIG1H @ 0x300001
  5570                           ;	Oscillator Selection bits
  5571                           ;	OSC = HS, HS oscillator
  5572                           ;	Fail-Safe Clock Monitor Enable bit
  5573                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5574                           ;	Internal/External Oscillator Switchover bit
  5575                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5576   300001                     	org	3145729
  5577   300001  02                 	db	2
  5578                           
  5579                           ;Config register CONFIG2L @ 0x300002
  5580                           ;	Power-up Timer Enable bit
  5581                           ;	PWRT = OFF, PWRT disabled
  5582                           ;	Brown-out Reset Enable bits
  5583                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  5584                           ;	Brown Out Reset Voltage bits
  5585                           ;	BORV = 1, 
  5586   300002                     	org	3145730
  5587   300002  09                 	db	9
  5588                           
  5589                           ;Config register CONFIG2H @ 0x300003
  5590                           ;	Watchdog Timer Enable bit
  5591                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5592                           ;	Watchdog Timer Postscale Select bits
  5593                           ;	WDTPS = 32768, 1:32768
  5594   300003                     	org	3145731
  5595   300003  1E                 	db	30
  5596                           
  5597                           ; Padding undefined space
  5598   300004                     	org	3145732
  5599   300004  FF                 	db	255
  5600                           
  5601                           ;Config register CONFIG3H @ 0x300005
  5602                           ;	CCP2 MUX bit
  5603                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5604                           ;	PORTB A/D Enable bit
  5605                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5606                           ;	Low-Power Timer1 Oscillator Enable bit
  5607                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5608                           ;	MCLR Pin Enable bit
  5609                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5610   300005                     	org	3145733
  5611   300005  81                 	db	129
  5612                           
  5613                           ;Config register CONFIG4L @ 0x300006
  5614                           ;	Stack Full/Underflow Reset Enable bit
  5615                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5616                           ;	Single-Supply ICSP Enable bit
  5617                           ;	LVP = OFF, Single-Supply ICSP disabled
  5618                           ;	Extended Instruction Set Enable bit
  5619                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5620                           ;	Background Debugger Enable bit
  5621                           ;	DEBUG = 0x1, unprogrammed default
  5622   300006                     	org	3145734
  5623   300006  81                 	db	129
  5624                           
  5625                           ; Padding undefined space
  5626   300007                     	org	3145735
  5627   300007  FF                 	db	255
  5628                           
  5629                           ;Config register CONFIG5L @ 0x300008
  5630                           ;	Code Protection bit
  5631                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5632                           ;	Code Protection bit
  5633                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5634                           ;	Code Protection bit
  5635                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5636                           ;	Code Protection bit
  5637                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5638   300008                     	org	3145736
  5639   300008  0F                 	db	15
  5640                           
  5641                           ;Config register CONFIG5H @ 0x300009
  5642                           ;	Boot Block Code Protection bit
  5643                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5644                           ;	Data EEPROM Code Protection bit
  5645                           ;	CPD = OFF, Data EEPROM not code-protected
  5646   300009                     	org	3145737
  5647   300009  C0                 	db	192
  5648                           
  5649                           ;Config register CONFIG6L @ 0x30000A
  5650                           ;	Write Protection bit
  5651                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5652                           ;	Write Protection bit
  5653                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5654                           ;	Write Protection bit
  5655                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5656                           ;	Write Protection bit
  5657                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  5658   30000A                     	org	3145738
  5659   30000A  0F                 	db	15
  5660                           
  5661                           ;Config register CONFIG6H @ 0x30000B
  5662                           ;	Configuration Register Write Protection bit
  5663                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5664                           ;	Boot Block Write Protection bit
  5665                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5666                           ;	Data EEPROM Write Protection bit
  5667                           ;	WRTD = OFF, Data EEPROM not write-protected
  5668   30000B                     	org	3145739
  5669   30000B  E0                 	db	224
  5670                           
  5671                           ;Config register CONFIG7L @ 0x30000C
  5672                           ;	Table Read Protection bit
  5673                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5674                           ;	Table Read Protection bit
  5675                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5676                           ;	Table Read Protection bit
  5677                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5678                           ;	Table Read Protection bit
  5679                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5680   30000C                     	org	3145740
  5681   30000C  0F                 	db	15
  5682                           
  5683                           ;Config register CONFIG7H @ 0x30000D
  5684                           ;	Boot Block Table Read Protection bit
  5685                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5686   30000D                     	org	3145741
  5687   30000D  40                 	db	64
  5688                           tosu	equ	0xFFF
  5689                           tosh	equ	0xFFE
  5690                           tosl	equ	0xFFD
  5691                           stkptr	equ	0xFFC
  5692                           pclatu	equ	0xFFB
  5693                           pclath	equ	0xFFA
  5694                           pcl	equ	0xFF9
  5695                           tblptru	equ	0xFF8
  5696                           tblptrh	equ	0xFF7
  5697                           tblptrl	equ	0xFF6
  5698                           tablat	equ	0xFF5
  5699                           prodh	equ	0xFF4
  5700                           prodl	equ	0xFF3
  5701                           indf0	equ	0xFEF
  5702                           postinc0	equ	0xFEE
  5703                           postdec0	equ	0xFED
  5704                           preinc0	equ	0xFEC
  5705                           plusw0	equ	0xFEB
  5706                           fsr0h	equ	0xFEA
  5707                           fsr0l	equ	0xFE9
  5708                           wreg	equ	0xFE8
  5709                           indf1	equ	0xFE7
  5710                           postinc1	equ	0xFE6
  5711                           postdec1	equ	0xFE5
  5712                           preinc1	equ	0xFE4
  5713                           plusw1	equ	0xFE3
  5714                           fsr1h	equ	0xFE2
  5715                           fsr1l	equ	0xFE1
  5716                           bsr	equ	0xFE0
  5717                           indf2	equ	0xFDF
  5718                           postinc2	equ	0xFDE
  5719                           postdec2	equ	0xFDD
  5720                           preinc2	equ	0xFDC
  5721                           plusw2	equ	0xFDB
  5722                           fsr2h	equ	0xFDA
  5723                           fsr2l	equ	0xFD9
  5724                           status	equ	0xFD8

Data Sizes:
    Strings     9
    Constant    16
    Data        46
    BSS         80
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     49     117
    BANK0           128      9      67
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ADC_Get_Conversion_Blocking@adc	PTR const struct . size(1) Largest target is 5
		 -> adc1(COMRAM[5]), 

    ADC_Get_Conversion_Blocking@adc_res	PTR unsigned short  size(1) Largest target is 2
		 -> main@adc_res(BANK0[2]), 

    ADC_Get_Result@adc	PTR const struct . size(1) Largest target is 5
		 -> adc1(COMRAM[5]), 

    ADC_Get_Result@adc_res	PTR unsigned short  size(1) Largest target is 2
		 -> main@adc_res(BANK0[2]), 

    ADC_Init@adc	PTR const struct . size(1) Largest target is 5
		 -> adc1(COMRAM[5]), 

    ADC_Select_Channel@adc	PTR const struct . size(1) Largest target is 5
		 -> adc1(COMRAM[5]), 

    ADC_Select_Result_Format@adc	PTR const struct . size(1) Largest target is 5
		 -> adc1(COMRAM[5]), 

    ADC_Select_Volt_Ref@adc	PTR const struct . size(1) Largest target is 5
		 -> adc1(COMRAM[5]), 

    ADC_Start@adc	PTR const struct . size(1) Largest target is 5
		 -> adc1(COMRAM[5]), 

    convert_uint16_to_string@str	PTR unsigned char  size(1) Largest target is 6
		 -> main@buff(BANK0[6]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_initialize@pin	PTR const struct . size(1) Largest target is 6
		 -> dc_motor_init@pin1(COMRAM[1]), dc_motor_init@pin2(COMRAM[1]), lcd1(COMRAM[6]), lcd1$lcd_data(COMRAM[4]), 
		 -> lcd1$lcd_en(COMRAM[1]), lcd1$lcd_rs(COMRAM[1]), led_init@pin(COMRAM[1]), relay_init@pin(COMRAM[1]), 

    gpio_pin_set_direction@pin	PTR const struct . size(1) Largest target is 6
		 -> dc_motor_init@pin1(COMRAM[1]), dc_motor_init@pin2(COMRAM[1]), lcd1(COMRAM[6]), lcd1$lcd_data(COMRAM[4]), 
		 -> lcd1$lcd_en(COMRAM[1]), lcd1$lcd_rs(COMRAM[1]), led_init@pin(COMRAM[1]), relay_init@pin(COMRAM[1]), 

    gpio_pin_write@pin	PTR const struct . size(1) Largest target is 6
		 -> dc_motor_init@pin1(COMRAM[1]), dc_motor_init@pin2(COMRAM[1]), dc_motor_move_dir1@pin1(COMRAM[1]), dc_motor_move_dir1@pin2(COMRAM[1]), 
		 -> dc_motor_move_dir2@pin1(COMRAM[1]), dc_motor_move_dir2@pin2(COMRAM[1]), dc_motor_stop@pin1(COMRAM[1]), dc_motor_stop@pin2(COMRAM[1]), 
		 -> lcd1(COMRAM[6]), lcd1$lcd_data(COMRAM[4]), lcd1$lcd_en(COMRAM[1]), lcd1$lcd_rs(COMRAM[1]), 
		 -> led_init@pin(COMRAM[1]), led_turn_off@pin(COMRAM[1]), led_turn_on@pin(COMRAM[1]), relay_init@pin(COMRAM[1]), 
		 -> relay_turn_off@pin(COMRAM[1]), relay_turn_on@pin(COMRAM[1]), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Disable@ext_int$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Set@ext_int$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@ext_int$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Flag_Clear@ext_int$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@ext_int$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_SetInterruptHandler@ext_int$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@ext_int$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@ext_int$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_init@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_char@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_char_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_cmd@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_string@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_string@str	PTR unsigned char  size(2) Largest target is 6
		 -> main@buff(BANK0[6]), STR_4(CODE[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 6
		 -> main@buff(BANK0[6]), 

    lcd_4bit_set_cursor@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_4bits_send_enable_signal@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    lcd_send_4bits@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(COMRAM[6]), 

    led_init@led	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), 

    led_turn_off@led	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), 

    led_turn_on@led	PTR const struct . size(1) Largest target is 1
		 -> led1(COMRAM[1]), 

    memset@dest	PTR void  size(1) Largest target is 6
		 -> main@buff(BANK0[6]), 

    memset@p	PTR unsigned char  size(1) Largest target is 6
		 -> main@buff(BANK0[6]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    RB4_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2244$buffer	PTR unsigned char  size(2) Largest target is 0

    S2244$source	PTR const unsigned char  size(2) Largest target is 0

    S934$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S972$EXT_InterruptHandler_HIGH	PTR FTN()void  size(2) Largest target is 0

    S972$EXT_InterruptHandler_LOW	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(1) Largest target is 6
		 -> main@buff(BANK0[6]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 6
		 -> main@buff(BANK0[6]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRhlll[1]), TRISC(BITBIGSFRhlll[1]), TRISD(BITBIGSFRhlll[1]), 
		 -> TRISE(BITBIGSFRhlll[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_convert_uint16_to_string
    _led_turn_on->_gpio_pin_write
    _led_turn_off->_gpio_pin_write
    _led_init->_gpio_pin_initialize
    _lcd_4bit_send_string_pos->_lcd_4bit_send_string
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor
    _lcd_4bit_send_string->_lcd_4bit_send_char
    _lcd_4bit_send_char_pos->_lcd_4bit_set_cursor
    _lcd_4bit_set_cursor->_lcd_4bit_send_cmd
    _lcd_4bit_send_char->_lcd_send_4bits
    _lcd_4bit_init->_lcd_4bit_send_cmd
    _lcd_4bit_send_cmd->_lcd_send_4bits
    _lcd_send_4bits->_gpio_pin_write
    _lcd_4bits_send_enable_signal->_gpio_pin_write
    _gpio_pin_initialize->_gpio_pin_write
    _convert_uint16_to_string->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _ADC_Init->_ADC_Input_Channel_Pin_Config
    _ADC_Get_Conversion_Blocking->_ADC_Select_Channel
    _ADC_Select_Channel->_ADC_Input_Channel_Pin_Config

Critical Paths under _InterruptManager in COMRAM

    _InterruptManager->_RB4_ISR
    _InterruptManager->_RB5_ISR
    _InterruptManager->_RB6_ISR
    _InterruptManager->_RB7_ISR

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0  153145
                                             48 COMRAM     1     1      0
                                              0 BANK0      9     9      0
        _ADC_Get_Conversion_Blocking
                           _ADC_Init
           _convert_uint16_to_string
                      _lcd_4bit_init
                 _lcd_4bit_send_char
             _lcd_4bit_send_char_pos
               _lcd_4bit_send_string
           _lcd_4bit_send_string_pos
                           _led_init
                       _led_turn_off
                        _led_turn_on
 ---------------------------------------------------------------------------------
 (1) _led_turn_on                                          4     3      1    4750
                                              9 COMRAM     3     2      1
                     _gpio_pin_write
 ---------------------------------------------------------------------------------
 (1) _led_turn_off                                         4     3      1    4750
                                              9 COMRAM     3     2      1
                     _gpio_pin_write
 ---------------------------------------------------------------------------------
 (1) _led_init                                             4     3      1    6796
                                             12 COMRAM     3     2      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             5     1      4   35617
                                             22 COMRAM     4     0      4
               _lcd_4bit_send_string
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string                                 4     1      3   16437
                                             18 COMRAM     4     1      3
                 _lcd_4bit_send_char
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_char_pos                               5     1      4   35412
                                             22 COMRAM     5     1      4
                 _lcd_4bit_send_char
                _lcd_4bit_set_cursor
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor                                  4     1      3   18584
                                             18 COMRAM     4     1      3
                  _lcd_4bit_send_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char                                   3     1      2   15879
                                             15 COMRAM     3     1      2
                     _gpio_pin_write
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_init                                        4     3      1   25015
                                             18 COMRAM     4     3      1
                _gpio_pin_initialize
                  _lcd_4bit_send_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_cmd                                    3     1      2   17679
                                             15 COMRAM     3     1      2
                     _gpio_pin_write
       _lcd_4bits_send_enable_signal
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_send_4bits                                       6     4      2    5445
                                              9 COMRAM     6     4      2
                     _gpio_pin_write
 ---------------------------------------------------------------------------------
 (4) _lcd_4bits_send_enable_signal                         2     1      1    4955
                                              9 COMRAM     2     1      1
                     _gpio_pin_write
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initialize                                  3     2      1    6444
                                              9 COMRAM     3     2      1
             _gpio_pin_set_direction
                     _gpio_pin_write
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write                                       8     6      2    4459
                                              1 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_set_direction                               7     6      1     707
                                              1 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (1) _convert_uint16_to_string                             4     1      3    5981
                                             45 COMRAM     3     0      3
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    15      6    4717
                                             26 COMRAM    19    13      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    3871
                                             22 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3    3410
                                             11 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3     957
                                              1 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     183
                                              7 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              1 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _memset                                               6     1      5     947
                                              1 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             3     2      1     655
                                              4 COMRAM     2     1      1
       _ADC_Input_Channel_Pin_Config
           _ADC_Select_Result_Format
                _ADC_Select_Volt_Ref
 ---------------------------------------------------------------------------------
 (2) _ADC_Select_Volt_Ref                                  1     0      1     152
                                              1 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _ADC_Select_Result_Format                             2     1      1     152
                                              1 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (1) _ADC_Get_Conversion_Blocking                          5     2      3    1684
                                              8 COMRAM     5     2      3
                     _ADC_Get_Result
                 _ADC_Select_Channel
                          _ADC_Start
 ---------------------------------------------------------------------------------
 (2) _ADC_Start                                            2     1      1     248
                                              1 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _ADC_Select_Channel                                   4     2      2     521
                                              4 COMRAM     4     2      2
       _ADC_Input_Channel_Pin_Config
 ---------------------------------------------------------------------------------
 (2) _ADC_Input_Channel_Pin_Config                         3     3      0      31
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Get_Result                                       6     4      2     403
                                              1 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _InterruptManager                                     0     0      0     120
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (8) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Get_Conversion_Blocking
     _ADC_Get_Result
     _ADC_Select_Channel
       _ADC_Input_Channel_Pin_Config
     _ADC_Start
   _ADC_Init
     _ADC_Input_Channel_Pin_Config
     _ADC_Select_Result_Format
     _ADC_Select_Volt_Ref
   _convert_uint16_to_string
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _fputc
             _putch
   _lcd_4bit_init
     _gpio_pin_initialize
       _gpio_pin_set_direction
       _gpio_pin_write
     _lcd_4bit_send_cmd
       _gpio_pin_write
       _lcd_4bits_send_enable_signal
         _gpio_pin_write
       _lcd_send_4bits
         _gpio_pin_write
   _lcd_4bit_send_char
     _gpio_pin_write
     _lcd_4bits_send_enable_signal
     _lcd_send_4bits
   _lcd_4bit_send_char_pos
     _lcd_4bit_send_char
     _lcd_4bit_set_cursor
       _lcd_4bit_send_cmd
   _lcd_4bit_send_string
     _lcd_4bit_send_char
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_string
     _lcd_4bit_set_cursor
   _led_init
     _gpio_pin_initialize
   _led_turn_off
     _gpio_pin_write
   _led_turn_on
     _gpio_pin_write

 _InterruptManager (ROOT)
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      43        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      9      43       5       52.3%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     31      75       1       92.9%
BITBIGSFRhhllh      2B      0       0      37        0.0%
BITBIGSFRhlh        15      0       0      38        0.0%
BITBIGSFRhlll        F      0       0      39        0.0%
BITBIGSFRhhh         D      0       0      36        0.0%
BITBIGSFRlh          4      0       0      40        0.0%
BITBIGSFRll          4      0       0      41        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      B8      42        0.0%
DATA                 0      0      B8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Aug 29 02:57:34 2024

                      ??_InterruptManager 0002                           ?_lcd_send_4bits 000A  
                                      l70 2194                                        l80 2378  
                                      l65 16F6                                        l90 1DC6  
                                      l75 2138                                        l97 2234  
                            ___awdiv@sign 0007                                       l111 207E  
                                     l116 23B4                                       l231 1CA6  
                                     l128 1E5A                                       l138 22BA  
                                     l242 1F54                                       l235 1D30  
                                     l245 1F6A                                       l238 1EF8  
                                     l329 1808                                       l249 1FBA  
                                     l348 15C2                                       l800 18E0  
                                     l369 20DC                                       l810 22DA  
                                     l812 22FA                                       l732 1E70  
                                     l805 2276                                       l814 22FC  
                                     l734 1EE2                                       l807 2278  
                                     l744 23EC                                       l747 24A2  
                                     l749 24A6                                       l773 21D6  
                                     l766 1B36                                       l776 21F0  
    __end_of_lcd_4bits_send_enable_signal 23B6              _lcd_4bits_send_enable_signal 237A  
                                     _abs 2422                          lcd_4bit_init@lcd 0013  
               _RB5_InterruptHandler_HIGH 0040                          lcd_4bit_init@ret 0015  
                            ___awmod@sign 0007                                       wreg 0FE8  
                             main@adc_res 00C1                              ?_led_turn_on 000A  
               ?_convert_uint16_to_string 002E                           __end_of_RB4_ISR 252A  
                         __end_of_RB5_ISR 2510                           __end_of_RB6_ISR 24F6  
                         __end_of_RB7_ISR 24DC                                      l1051 1A7A  
                                    ?_abs 0008                                      l1064 1BE6  
                                    l1504 2420                                      l1542 1460  
                                    l4200 1B86                                      l1552 243C  
                                    l4120 1496                                      l4210 1BC0  
                                    l4202 1B8E                                      l4122 149E  
                                    l4130 1596                                      l1555 2454  
                                    l4140 19B8                                      l4204 1B9C  
                                    l4212 1BC6                                      l4220 1BE8  
                                    l4300 13DC                                      l1548 233C  
                                    l4124 14F4                                      l4132 15C0  
                                    l4116 1462                                      l4150 19E4  
                                    l4142 19BC                                      l4214 1BD6  
                                    l4206 1BB2                                      l4230 1C60  
                                    l4222 1BF8                                      l4302 13EC  
                                    l4310 1430                                      l5102 15AA  
                                    l4118 1476                                      l1567 1C90  
                                    l5104 1872                                      l4160 1A12  
                                    l4152 19EC                                      l4144 19CA  
                                    l4216 1BDE                                      l4208 1BBA  
                                    l4224 1C08                                      l4304 13FE  
                                    l4400 2316                                      l4320 16F8  
                                    l4240 2032                                      l1497 2484  
                                    l4170 1A4C                                      l4162 1A1A  
                                    l4154 19F0                                      l4146 19D2  
                                    l4234 2422                                      l1578 254A  
                                    l4226 1C12                                      l4306 1418  
                                    l4314 143C                                      l4402 2334  
                                    l4322 170C                                      l4410 20B0  
                                    l4250 206A                                      l4242 203A  
                                    l4500 23D2                                      l4180 1A72  
                                    l4172 1A4E                                      l4164 1A28  
                                    l4156 19F8                                      l4148 19D6  
                                    l4236 2430                                      l4228 1C2E  
                                    l4308 141A                                      l4324 172C  
                                    l4412 20B8                                      l4260 238A  
                                    l4252 206C                                      l4340 213A  
                                    l4420 1DC8                                      l4502 23E4  
                                    l4510 249A                                      l4174 1A54  
                                    l4166 1A2E                                      l4158 1A0A  
                                    l4190 1B52                                      l4270 12A2  
                                    l4326 1734                                      l4334 17DA  
                                    l4414 20DA                                      l4406 2080  
                                    l4262 2392                                      l4254 207C  
                                    l4238 201E                                      l4342 214A  
                                    l4350 20DE                                      l4430 1E0A  
                                    l4422 1DCA                                      l4520 1AA0  
                                    l4360 180C                                      l4504 23EA  
                                    l4512 24A4                                      l4168 1A44  
                                    l4176 1A5A                                      l4192 1B56  
                                    l4184 1B38                                      l4280 12E8  
                                    l4272 12C6                                      l4600 227A  
                                    l4328 1784                                      l4336 1806  
                                    l4408 2090                                      l4264 239E  
                                    l4248 203E                                      l4344 2152  
                                    l4352 20EE                                      l4432 1E1E  
                                    l4440 1E58                                      l4424 1DDA  
                                    l4530 1B34                                      l4522 1AA8  
                                    l4370 1828                                      l4362 1810  
                                    l4178 1A6A                                      l4194 1B64  
                                    l4186 1B3C                                      l4290 135E  
                                    l4282 1306                                      l4274 12CE  
                                    l4602 228A                                      l4266 23B2  
                                    l4258 237A                                      l4346 2192  
                                    l4354 20F6                                      l4426 1DE2  
                                    l4418 1DC8                                      l4450 1D60  
                                    l4610 1C92                                      l4524 1AC2  
                                    l4516 1A7C                                      l4380 1846  
                                    l4372 182E                                      l4364 1816  
                                    l4508 2486                                      l4460 2456  
                                    l4196 1B6C                                      l4188 1B4A  
                                    l4292 138E                                      l4284 1324  
                                    l4276 12DA                                      l4604 228E  
                                    l4540 15EC                                      l4356 2136  
                                    l4428 1DF6                                      l4452 1D8E  
                                    l4444 1D32                                      l4620 1D28  
                                    l4612 1CA2                                      l4526 1AE8  
                                    l4518 1A90                                      l4382 184C  
                                    l4374 1834                                      l4366 181C  
                                    l4390 185E                                      l4462 245E  
                                    l4198 1B7E                                      l4294 13AA  
                                    l4286 133C                                      l4278 12DE  
                                    l4470 23F6                                      l4606 22A6  
                                    l4542 15F8                                      l4534 15C4  
                                    l4438 1E32                                      l4454 1D92  
                                    l4446 1D46                                      l4614 1CAA  
                                    l4630 1F32                                      l4528 1B02  
                                    l4384 1852                                      l4376 183A  
                                    l4368 1822                                      l4480 2236  
                                    l4464 2468                                      l4296 13BC  
                                    l4288 1346                                      l4472 23FE  
                                    l4560 1642                                      l4544 1604  
                                    l4536 15D8                                      l4456 1DC4  
                                    l4448 1D58                                      l4616 1CE0  
                                    l4640 1FA4                                      l4624 1EE4  
                                    l4386 1858                                      l4378 1840  
                                    l4482 2250                                      l4490 22D4  
                                    l4650 1EC0                                      l4466 246A  
                                    l4298 13CC                                      l4474 2406  
                                    l4570 1690                                      l4562 1652  
                                    l4554 1618                                      l4546 160C  
                                    l4538 15DC                                      l4618 1CE2  
                                    l4634 1F56                                      l4626 1EF4  
                                    l4660 2196                                      l4484 2256  
                                    l4492 22DC                                      l4652 1ED0  
                                    l4644 1E5C                                      l4396 22FE  
                                    l4476 2416                                      l4468 23EE  
                                    l4572 169C                                      l4564 1662  
                                    l4556 1634                                      l4548 1614  
                                    l4580 234E                                      l4636 1F66  
                                    l4628 1EFC                                      l4662 21AA  
                                    l4486 2270                                      l4494 22F4  
                                    l4654 1ED8                                      l4646 1E6C  
                                    l4398 2306                                      l4574 16A8  
                                    l4566 166E                                      l4558 1640  
                                    l4582 2356                                      l4590 2202  
                                    l4638 1F6E                                      l4496 23B6  
                                    l4664 21BA                                      l4488 22BC  
                                    l4656 1EE0                                      l4648 1E72  
                                    l4568 168A                                      l4584 2376  
                                    l4592 2212                                      l4498 23CA  
                                    l4666 21BE                                      l4578 233E  
                                    l4594 2216                                      l4668 21E4  
                                    l4596 2226                                      l4588 21F2  
                                    l4970 191A             ?_ADC_Input_Channel_Pin_Config 0001  
                                    l4980 1946                                      l4972 1922  
                                    l4990 1988                                      l4982 194E  
                                    l4974 192C                                      l4966 18E2  
                                    l4992 199C                                      l4984 195C  
                                    l4976 1930                                      l4968 1912  
                                    l4986 196C                                      l4978 1938  
                                    l4988 1978                                      STR_1 1017  
                                    STR_2 1017                                      STR_4 1011  
                                    _LATA 0F89                                      _LATB 0F8A  
                                    _LATC 0F8B                                      u4000 1AC2  
                                    _LATD 0F8C                                      u4001 1ABE  
                                    _LATE 0F8D                                      u4010 1B02  
                                    u4011 1AFE                                      u4100 1CF8  
                                    u4101 1CF2                                      u4030 15D8  
                                    u4110 1D12                                      u4102 1CFA  
                                    u4031 15D4                                      u4111 1D0C  
                                    u4200 21E4                                      u3400 1496  
                                    u4040 1652                                      u4120 1D26  
                                    u4112 1D14                                      u4025 1B1A  
                                    u4201 21E0                                      u3401 1492  
                                    u4041 164E                                      u4121 1D20  
                                    u4050 234E                                      u4051 234A  
                                    u3500 1B4A                                      u4060 2202  
                                    u4140 1EF4                                      u3501 1B46  
                                    u4061 21FE                                      u4141 1EF0  
                                    u3510 1B64                                      u3414 14BC  
                                    u4070 2212                                      u4150 1F4C  
                                    u3511 1B60                                      u3415 14B8  
                                    u4071 220E                                      u4135 1D28  
                                    u4151 1F46                                      u3440 19CA  
                                    u3520 1B7E                                      u3600 2430  
                                    u4080 228A                                      u3424 1512  
                                    u4160 1F66                                      u3441 19C6  
                                    u3521 1B7A                                      u3601 242C  
                                    u4081 2286                                      u3425 150E  
                                    u4161 1F62                                      u4170 1E6C  
                                    u3450 19E4                                      u3530 1B9C  
                                    u3434 1564                                      u3610 2032  
                                    u4090 1CA2                                      u4171 1E68  
                                    u3451 19E0                                      u3531 1B98  
                                    u3435 1560                                      u3611 202E  
                                    u4091 1C9E                                      u4180 21AA  
                                    u3460 1A0A                                      u3540 1BB2  
                                    u3700 13BC                                      u4156 1F4E  
                                    u4181 21A6                                      u3461 1A06  
                                    u3541 1BAE                                      u3701 13B8  
                                    u4190 21BA                                      u3470 1A28  
                                    u3550 1BD6                                      u3710 13CC  
                                    u3390 1476                                      u3630 207C  
                                    u4191 21B6                                      u3471 1A24  
                                    u3551 1BD2                                      u3711 13C8  
                                    u3391 1472                                      u3631 2078  
                                    u3480 1A44                                      u3560 1BF8  
                                    u3720 13DC                                      u3640 238A  
                                    u3624 2058                                      u3800 214A  
                                    u3481 1A40                                      u3561 1BF4  
                                    u3721 13D8                                      u3641 2386  
                                    u3625 2054                                      u3801 2146  
                                    u3490 1A6A                                      u3570 1C08  
                                    u3730 13EC                                      u3650 12C6  
                                    u3810 20EE                                      u3491 1A66  
                                    u3571 1C04                                      u3731 13E8  
                                    u3651 12C2                                      u3811 20EA  
                                    u3580 1C2E                                      u3740 142C  
                                    u3660 1306                                      u3820 2334  
                                    u3900 1DC4                                      u3581 1C2A  
                                    u3741 1428                                      u3661 1302  
                                    u3821 2330                                      u3901 1DC0  
                                    u3910 2484                                      u3590 1C60  
                                    u3670 1324                                      u3750 170C  
                                    u3830 2090                                      u3911 2480  
                                    u3591 1C5C                                      u3671 1320  
                                    u3751 1708                                      u3831 208C  
                                    u3920 2250                                      u3680 135A  
                                    u3760 172C                                      u3840 20B0  
                                    u3921 224C                                      u3681 1354  
                                    u3761 1728                                      u3841 20AC  
                                    u4481 1972                                      u4537 193E  
                                    u3930 2270                                      u3690 135C  
                                    u3850 1DDA                                      u3931 226C  
                                    u3851 1DD6                                      u4547 1954  
                                    u3940 22D4                                      u3860 1D46  
                                    u3941 22D0                                      u4557 1658  
                                    u3861 1D42                                      u3950 22F4  
                                    u3790 17F0                                      u3774 1752  
                                    u3870 1D58                                      u3951 22F0  
                                    u3791 17EA                                      u3775 174E  
                                    u4567 1674                                      u3871 1D54  
                                    u3960 23CA                                      u3784 17A2  
                                    u3880 1D86                                      u3961 23C6  
                                    u3785 179E                                      u4577 168C  
                                    u3970 249A                                      u3890 1DB4  
                                    u3971 2496                                      u4587 16AA  
                                    u3980 1A90                                      u3796 17F2  
                                    u3981 1A8C                                      u3990 1AA0  
                                    u3991 1A9C                                      u3887 1D7C  
                                    u3897 1DAA                      _lcd_4bit_send_string 1D32  
                                    _adc1 0070                  _RB4_InterruptHandler_LOW 0042  
                                    abs@a 0008                                      _lcd1 006A  
                                    _led1 0075                                      _dbuf 0080  
                                    _main 18E2                                      _prec 0034  
                _RB7_InterruptHandler_LOW 0036                                      fsr0h 0FEA  
                                    fsr1h 0FE2                                      indf0 0FEF  
                                    fsr2h 0FDA                                      fsr0l 0FE9  
                                    indf2 0FDF                                      fsr1l 0FE1  
                                    fsr2l 0FD9                                      btemp 0076  
                        __end_of_ADC_Init 1EE4                                      prodl 0FF3  
                                    start 000E                               led_init@led 000D  
                             led_init@pin 000F                             ?_led_turn_off 000A  
                            ___param_bank 0000                __end_of_ADC_Select_Channel 23EE  
                                   ??_abs 000A            lcd_4bit_send_string_pos@column 001A  
               ?_ADC_Select_Result_Format 0002                          __end_of_INT0_ISR 254A  
                        __end_of_INT1_ISR 2546                          __end_of_INT2_ISR 2542  
                                   ?_main 0001                         gpio_pin_write@pin 0002  
                       gpio_pin_write@ret 0009                           __end_of___awdiv 1A7C  
                                   _EEADR 0FA9                           __end_of___awmod 1BE8  
                         ___awdiv@divisor 0004                                     i2l602 2540  
                                   i2l611 2528                                     i2l620 250E  
                                   i2l607 2528                                     i2l616 250E  
                                   i2l625 24F4                                     i2l634 24DA  
                                   i2l629 24F4                                     i2l638 24DA  
                                   i2l594 2548                                     i2l682 129E  
                                   i2l598 2544                           ___awdiv@counter 0006  
                     relay_turn_off@F3077 004D                              vfpfcnvrt@fmt 000D  
                                   _PORTA 0F80                                     _PORTB 0F81  
                                   _PORTC 0F82                                     _PORTD 0F83  
                                   _PORTE 0F84                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TRISD 0F95                                     _TRISE 0F96  
               lcd_4bit_set_cursor@column 0015             ?_lcd_4bits_send_enable_signal 000A  
                                   _flags 004C                                     _fputc 1BE8  
                                   _width 0032                                     _putch 254A  
                   ?_lcd_4bit_send_string 0013                                     tablat 0FF5  
                       ADC_Get_Result@adc 0002                         __end_of_ADC_Start 24A8  
                       ADC_Get_Result@ret 0007                                     ttemp5 0077  
                                   ttemp6 007A                                     ttemp7 007E  
                                   status 0FD8                                     wtemp8 0077  
                         __end_of_sprintf 2422              lcd_4bit_send_char_pos@column 001A  
                          ??_led_turn_off 000B                    _lcd_4bit_send_char_pos 233E  
                         __initialization 1FBC                              __end_of_main 19B8  
                           _lat_registers 00B0                                    ??_main 0031  
                           __activetblptr 0003                          led_turn_on@F3083 0052  
                               ??_RB4_ISR 0001                                 ??_RB5_ISR 0001  
                               ??_RB6_ISR 0001                                 ??_RB7_ISR 0001  
                                  ?_fputc 0002                                    _ADRESH 0FC4  
                                  _EEADRH 0FAA                                    _ADRESL 0FC3  
                                  _EEDATA 0FA8                                    _EECON2 0FA7  
                        ___awdiv@dividend 0002                                    ?_putch 0001  
                                  i2l2210 24E0                                    i2l2220 24C4  
                                  i2l2222 24C6                                    i2l2208 24DE  
                                  i2l2172 2546                                    i2l2180 253E  
                                  i2l2176 2542                                    i2l2184 2512  
                                  i2l2186 2514                                    i2l2196 24F8  
                                  i2l2198 24FA                                    i2l2900 10A8  
                                  i2l2910 10DE                                    i2l2902 10B8  
                                  i2l2920 1114                                    i2l2912 10EC  
                                  i2l2904 10BC                                    i2l2922 1122  
                                  i2l2930 114A                                    i2l2914 10FC  
                                  i2l2906 10C2                                    i2l2940 1188  
                                  i2l2932 1158                                    i2l2924 1130  
                                  i2l2916 1100                                    i2l2908 10D0  
                                  i2l2950 11C8                                    i2l2934 1166  
                                  i2l2942 118E                                    i2l2926 1140  
                                  i2l2918 1106                                    i2l2960 11FC  
                                  i2l2952 11CC                                    i2l2944 119C  
                                  i2l2936 1174                                    i2l2928 1144  
                                  i2l2880 103A                                    i2l2970 1232  
                                  i2l2962 120C                                    i2l2946 11AA  
                                  i2l2954 11D2                                    i2l2938 1184  
                                  i2l2890 106C                                    i2l2882 103E  
                                  i2l2980 1268                                    i2l2972 1240  
                                  i2l2964 1210                                    i2l2956 11E0  
                                  i2l2948 11B8                                    i2l2892 107A  
                                  i2l2884 104C                                    i2l2876 101E  
                                  i2l2982 1276                                    i2l2974 1250  
                                  i2l2958 11EE                                    i2l2966 1216  
                                  i2l2894 107E                                    i2l2886 105A  
                                  i2l2878 102C                                    i2l2984 1284  
                                  i2l2976 1254                                    i2l2968 1224  
                                  i2l2896 108C                                    i2l2888 105E  
                                  i2l2986 1294                                    i2l2978 125A  
                                  i2l2898 109A                                    i2l2988 1298  
                           vfpfcnvrt@done 0010               __end_of_ADC_Select_Volt_Ref 22FE  
        __end_of_lcd_4bit_send_string_pos 2236                              vfprintf@cfmt 001A  
                        __end_of_led_init 1D32                                 ??___awdiv 0006  
                               ??___awmod 0006                     __end_of_lcd_4bit_init 16F8  
                                  _memset 2456                                    clear_0 2002  
                                  clear_1 200E                          ___awdiv@quotient 0008  
                         ___awmod@divisor 0004                                    isa$std 0001  
                         ___awmod@counter 0006                             led_init@F3078 0053  
                                  fputc@c 0002                              __pdataCOMRAM 005C  
                               ?_ADC_Init 0005                              __mediumconst 0000  
                                  tblptrh 0FF7                                    tblptrl 0FF6  
                                  tblptru 0FF8       __end_of_ADC_Get_Conversion_Blocking 21F2  
             _ADC_Get_Conversion_Blocking 2196                                    putch@c 0001  
                        __end_of_vfprintf 233E                    ??_lcd_4bit_send_string 0016  
                               ??_sprintf 0021                             RB4_ISR@RB_src 0001  
                              __accesstop 0080                   __end_of__initialization 2014  
                               ?_INT0_ISR 0001                                 ?_INT1_ISR 0001  
                               ?_INT2_ISR 0001             ??_ADC_Get_Conversion_Blocking 000C  
                           ___rparam_used 0001                          ??_lcd_send_4bits 000C  
                          __pcstackCOMRAM 0001                     lcd_4bit_send_char@lcd 0010  
                   lcd_4bit_send_char@ret 0012                              __pidataBANK0 252A  
                           RB5_ISR@RB_src 0001                             __end_of_fputc 1C92  
                           __end_of_putch 254C  ADC_Get_Conversion_Blocking@l_conv_status 000C  
               lcd_4bit_init@pins_counter 0016                                ??_ADC_Init 0006  
                    __end_of_led_turn_off 1FBC                                   ??_fputc 0005  
                 lcd_4bit_send_string@lcd 0013                             RB6_ISR@RB_src 0001  
                 lcd_4bit_send_string@ret 0016                   lcd_4bit_send_string@str 0014  
                                 ??_putch 0002                                __pbssBANK0 0080  
        __end_of_ADC_Select_Result_Format 227A                     _INT0_InterruptHandler 004A  
                              ??_INT0_ISR 0001                                ??_INT1_ISR 0001  
                              ??_INT2_ISR 0001           lcd_4bits_send_enable_signal@lcd 000A  
         lcd_4bits_send_enable_signal@ret 000B                        dc_motor_init@F3071 005B  
                      dc_motor_init@F3073 005A                         led_turn_off@F3088 0051  
                           RB7_ISR@RB_src 0001                   lcd_send_4bits@_data_cmd 000B  
                     gpio_pin_write@logic 0003               convert_uint16_to_string@str 0030  
                         led_toggle@F3093 0050                                   ?_memset 0002  
                                 _RB4_ISR 2510                                   _RB5_ISR 24F6  
                                 _RB6_ISR 24DC                                   _RB7_ISR 24C2  
               ?_lcd_4bit_send_string_pos 0017                 _RB6_InterruptHandler_HIGH 003C  
                      _ADC_Select_Channel 23B6                             _keypad_values 1001  
                                 i2u86_40 2524                                   i2u86_41 2520  
                                 i2u87_40 250A                                   i2u87_41 2506  
                                 i2u88_40 24F0                                   i2u88_41 24EC  
                                 i2u89_40 24D6                                   i2u89_41 24D2  
                               ?_led_init 000D                       ?_ADC_Select_Channel 0005  
                          _tris_registers 005C                  ??_gpio_pin_set_direction 0003  
                _RB6_InterruptHandler_LOW 003A                   ?_lcd_4bit_send_char_pos 0017  
                               _ADC_Start 2486                                   __Hparam 0000  
                                 __Lparam 0000                       _gpio_pin_initialize 2080  
                                 ___awdiv 19B8                                   ___awmod 1B38  
                    ??_ADC_Select_Channel 0007                                 ?_vfprintf 0017  
                            __psmallconst 1000                                   __pcinit 1FBC  
                                 __ramtop 1000                                   __ptext0 18E2  
                                 __ptext1 1EE4                                   __ptext2 1F56  
                                 __ptext3 1C92                                   __ptext4 21F2  
                                 __ptext5 1D32                                   __ptext6 233E  
                                 __ptext7 1DC8                                   __ptext8 20DE  
                                 __ptext9 15C4                            _gpio_pin_write 1462  
                _convert_uint16_to_string 227A                          ___awmod@dividend 0002  
                    ?_gpio_pin_initialize 000A                                   _sprintf 23EE  
                                 main@ret 00C0                            __pintcode_body 101C  
                              ??_led_init 000E                      end_of_initialization 2014  
                       lcd_send_4bits@lcd 000A                         lcd_send_4bits@ret 000E  
          __end_of_lcd_4bit_send_char_pos 237A                                   fputc@fp 0004  
                                 memset@c 0003                                   memset@n 0005  
                                 memset@p 0007                                   int_func 101C  
                            ADC_Start@adc 0002                              ADC_Start@ret 0003  
                      dc_motor_stop@F3092 0055                        dc_motor_stop@F3094 0054  
                              ?_ADC_Start 0002                  _ADC_Select_Result_Format 2236  
              __end_of_lcd_4bit_send_char 213A                         __end_of_vfpfcnvrt 1462  
                                 postdec1 0FE5                                   postdec2 0FDD  
                                 postinc0 0FEE                                   postinc1 0FE6  
                                 postinc2 0FDE                          vfpfcnvrt@convarg 0012  
                              ??_vfprintf 001A                    __end_of_gpio_pin_write 15C4  
                   _INT1_InterruptHandler 0048                                 _PORTBbits 0F81  
                          _ADC_Get_Result 1A7C                          _InterruptManager 0008  
                 dc_motor_move_dir1@F3080 0058                   dc_motor_move_dir1@F3078 0059  
                 dc_motor_move_dir2@F3085 0057                   dc_motor_move_dir2@F3087 0056  
                   ??_gpio_pin_initialize 000B                 ADC_Select_Channel@channel 0006  
              lcd_4bit_send_char_pos@data 0018                              _led_turn_off 1F56  
                     _lcd_4bit_set_cursor 1DC8                        relay_turn_on@F3072 004E  
                  lcd_4bit_send_char@data 0011               lcd_4bit_send_string_pos@lcd 0017  
             lcd_4bit_send_string_pos@row 0019               lcd_4bit_send_string_pos@str 0018  
                             vfpfcnvrt@ap 000E                               vfpfcnvrt@cp 0011  
                  __end_of_ADC_Get_Result 1B38                               vfpfcnvrt@fp 000C  
                           __pidataCOMRAM 24A8                           ?_gpio_pin_write 0002  
                          __end_of_memset 2486                       start_initialization 1FBC  
                           ??_led_turn_on 000B                      ?_lcd_4bit_set_cursor 0013  
           convert_uint16_to_string@value 002E                               __end_of_abs 2456  
                         led_turn_off@led 000A                           led_turn_off@pin 000C  
                             ??_ADC_Start 0003            ??_ADC_Input_Channel_Pin_Config 0002  
                             vfprintf@fmt 0018                               __pdataBANK0 00A6  
                         ?_ADC_Get_Result 0002                                  ??_memset 0007  
                              memset@dest 0002                    _gpio_pin_set_direction 16F8  
                                ?_RB4_ISR 0001                                  ?_RB5_ISR 0001  
                                ?_RB6_ISR 0001                                  ?_RB7_ISR 0001  
                             __pbssCOMRAM 0032                     ??_lcd_4bit_set_cursor 0016  
                           __pcstackBANK0 00BA                      lcd_4bit_send_cmd@cmd 0011  
                    lcd_4bit_send_cmd@lcd 0010                      lcd_4bit_send_cmd@ret 0012  
                     __end_of_led_turn_on 1F56                     _INT2_InterruptHandler 0046  
          ??_lcd_4bits_send_enable_signal 000B            ADC_Get_Conversion_Blocking@adc 0009  
          ADC_Get_Conversion_Blocking@ret 000D       ADC_Input_Channel_Pin_Config@channel 0004  
                               __pintcode 0008                ??_convert_uint16_to_string 0031  
                                ?___awdiv 0002                                  ?___awmod 0002  
                           _lcd_4bit_init 15C4                               __smallconst 1000  
               _RB4_InterruptHandler_HIGH 0044                    ADC_Select_Volt_Ref@adc 0002  
                                _ADC_Init 1E5C                 _RB7_InterruptHandler_HIGH 0038  
                             ADC_Init@adc 0005                                  ?_sprintf 001B  
              ??_ADC_Select_Result_Format 0003                  _RB5_InterruptHandler_LOW 003E  
                                _INT0_ISR 2546                                  _INT1_ISR 2542  
                                _INT2_ISR 253E                                  _RB4_Flag 0069  
                                _RB5_Flag 0068                                  _RB6_Flag 0067  
                                _RB7_Flag 0066                  __end_of_InterruptManager 12A2  
                                i2u160_40 102C                                  i2u160_41 1028  
                                i2u161_40 103A                                  i2u161_41 1036  
                                i2u170_40 10D0                                  i2u162_40 104C  
                                i2u170_41 10CC                                  i2u162_41 1048  
                                i2u171_40 10DE                                  i2u163_40 105A  
                                i2u171_41 10DA                                  i2u163_41 1056  
                                i2u180_40 1174                                  i2u172_40 10EC  
                                i2u164_40 106C                                  i2u180_41 1170  
                                i2u172_41 10E8                                  i2u164_41 1068  
                                i2u181_40 1184                                  i2u173_40 10FC  
                                i2u165_40 107A                                  i2u181_41 1180  
                                i2u173_41 10F8                                  i2u165_41 1076  
                                i2u190_40 1224                                  i2u182_40 119C  
                                i2u174_40 1114                                  i2u166_40 108C  
                                i2u190_41 1220                                  i2u182_41 1198  
                                i2u174_41 1110                                  i2u166_41 1088  
                                i2u191_40 1232                                  i2u183_40 11AA  
                                i2u175_40 1122                                  i2u167_40 109A  
                                i2u191_41 122E                                  i2u183_41 11A6  
                                i2u175_41 111E                                  i2u167_41 1096  
                                i2u192_40 1240                                  i2u184_40 11B8  
                                i2u176_40 1130                                  i2u168_40 10A8  
                                i2u192_41 123C                                  i2u184_41 11B4  
                                i2u176_41 112C                                  i2u168_41 10A4  
                                i2u193_40 1250                                  i2u185_40 11C8  
                                i2u177_40 1140                                  i2u169_40 10B8  
                                i2u193_41 124C                                  i2u185_41 11C4  
                                i2u177_41 113C                                  i2u169_41 10B4  
                                i2u194_40 1268                                  i2u186_40 11E0  
                                i2u178_40 1158                                  i2u194_41 1264  
                                i2u186_41 11DC                                  i2u178_41 1154  
                                i2u195_40 1276                                  i2u187_40 11EE  
                                i2u179_40 1166                                  i2u195_41 1272  
                                i2u187_41 11EA                                  i2u179_41 1162  
                                i2u196_40 1284                                  i2u188_40 11FC  
                                i2u196_41 1280                                  i2u188_41 11F8  
                                i2u197_40 1294                                  i2u189_40 120C  
                                i2u197_41 1290                                  i2u189_41 1208  
                               main@F3256 00A0                            ?_lcd_4bit_init 0013  
                               _vfpfcnvrt 12A2                  _lcd_4bit_send_string_pos 21F2  
                              _ADCON0bits 0FC2                                _ADCON1bits 0FC1  
                              _ADCON2bits 0FC0                        _lcd_4bit_send_char 20DE  
               gpio_pin_set_direction@pin 0002                 gpio_pin_set_direction@ret 0008  
                  gpio_pin_initialize@pin 000A                    gpio_pin_initialize@ret 000C  
                             _led_turn_on 1EE4                           relay_init@F3067 004F  
                              vfpfcnvrt@c 0016              ?_ADC_Get_Conversion_Blocking 0009  
                     ?_lcd_4bit_send_char 0010                               _INTCON2bits 0FF1  
                             _INTCON3bits 0FF0                                 copy_data0 1FD0  
                               copy_data1 1FF0                       _ADC_Select_Volt_Ref 22BC  
                              _EECON1bits 0FA6                            led_turn_on@led 000A  
                          led_turn_on@pin 000C                                  __Hrparam 0000  
             ADC_Select_Result_Format@adc 0002                                vfprintf@ap 0019  
                                __Lrparam 0000                                vfprintf@fp 0017  
                        ??_gpio_pin_write 0004                      ??_lcd_4bit_send_char 0012  
                    ?_ADC_Select_Volt_Ref 0002                    lcd_4bit_set_cursor@lcd 0013  
                  lcd_4bit_set_cursor@ret 0016                                ?_vfpfcnvrt 000C  
                  lcd_4bit_set_cursor@row 0014               __end_of_gpio_pin_initialize 20DE  
                              sprintf@fmt 001C                                  __ptext10 213A  
                                __ptext11 201E                                  __ptext20 1BE8  
                                __ptext12 237A                                  __ptext21 254A  
                                __ptext13 2080                                  __ptext30 2486  
                                __ptext22 2422                                  __ptext14 1462  
                                __ptext31 23B6                                  __ptext23 1B38  
                                __ptext15 16F8                                  __ptext40 2542  
                                __ptext32 180A                                  __ptext24 19B8  
                                __ptext16 227A                                  __ptext41 2546  
                                __ptext33 1A7C                                  __ptext25 2456  
                                __ptext17 23EE                                  __ptext26 1E5C  
                                __ptext18 22FE                                  __ptext35 24C2  
                                __ptext27 22BC                                  __ptext19 12A2  
                                __ptext36 24DC                                  __ptext28 2236  
                                __ptext37 24F6                                  __ptext29 2196  
                                __ptext38 2510                                  __ptext39 253E  
                                _led_init 1C92                     ADC_Get_Result@adc_res 0003  
                        ??_ADC_Get_Result 0004          __end_of_convert_uint16_to_string 22BC  
                         ??_lcd_4bit_init 0014                                  isa$xinst 0000  
                   ??_ADC_Select_Volt_Ref 0003                                  int$flags 0076  
            __end_of_lcd_4bit_send_string 1DC8                   ?_gpio_pin_set_direction 0002  
                                _vfprintf 22FE                         _lcd_4bit_send_cmd 213A  
                                main@buff 00BA                            _lcd_send_4bits 201E  
                      ?_lcd_4bit_send_cmd 0010                     __end_of_keypad_values 1011  
                              _INTCONbits 0FF2                  ??_lcd_4bit_send_char_pos 001B  
                     ??_lcd_4bit_send_cmd 0012                                  intlevel2 0000  
                               sprintf@ap 0021        ADC_Get_Conversion_Blocking@adc_res 000B  
      ADC_Get_Conversion_Blocking@channel 000A                     ADC_Select_Channel@adc 0005  
                   ADC_Select_Channel@ret 0008            __end_of_gpio_pin_set_direction 180A  
               __end_of_lcd_4bit_send_cmd 2196                    __end_of_lcd_send_4bits 2080  
                             ??_vfpfcnvrt 000F               __end_of_lcd_4bit_set_cursor 1E5C  
                                sprintf@f 0022                                  sprintf@s 001B  
                          _port_registers 00A6               lcd_send_4bits@l_pin_counter 000F  
    __end_of_ADC_Input_Channel_Pin_Config 18E2              _ADC_Input_Channel_Pin_Config 180A  
               lcd_4bit_send_char_pos@lcd 0017                 lcd_4bit_send_char_pos@ret 001B  
               lcd_4bit_send_char_pos@row 0019                         ?_InterruptManager 0001  
              ??_lcd_4bit_send_string_pos 001B  
